{"files":["+ /media/bob/Dropbox/private/gonzales/src/gonzales.js","- /media/bob/Dropbox/private/gonzales/data/parsers.js","- /media/bob/Dropbox/private/gonzales/data/sources.js","+ /media/bob/Dropbox/private/gonzales/build/ZeParser2.js"],"hits":{"0":[{"tokpos":0,"hits":1},{"tokpos":1,"hits":2},{"tokpos":6,"hits":1},{"tokpos":9,"hits":1},{"tokpos":16,"hits":1},{"tokpos":21,"hits":1},{"tokpos":26,"hits":1},{"tokpos":33,"hits":0},{"tokpos":39,"hits":0},{"tokpos":49,"hits":1},{"tokpos":53,"hits":0},{"tokpos":59,"hits":0},{"tokpos":68,"hits":1},{"tokpos":73,"hits":0},{"tokpos":76,"hits":0},{"tokpos":80,"hits":0},{"tokpos":83,"hits":0},{"tokpos":86,"hits":0},{"tokpos":90,"hits":0},{"tokpos":93,"hits":0},{"tokpos":100,"hits":0},{"tokpos":104,"hits":0},{"tokpos":106,"hits":0},{"tokpos":111,"hits":0},{"tokpos":115,"hits":0},{"tokpos":118,"hits":0},{"tokpos":121,"hits":0},{"tokpos":125,"hits":0},{"tokpos":128,"hits":0},{"tokpos":138,"hits":0},{"tokpos":142,"hits":0},{"tokpos":145,"hits":0},{"tokpos":148,"hits":0},{"tokpos":152,"hits":0},{"tokpos":155,"hits":0},{"tokpos":159,"hits":0},{"tokpos":162,"hits":0},{"tokpos":172,"hits":1},{"tokpos":176,"hits":0},{"tokpos":182,"hits":0},{"tokpos":191,"hits":1},{"tokpos":196,"hits":0},{"tokpos":198,"hits":0},{"tokpos":202,"hits":0},{"tokpos":204,"hits":0},{"tokpos":211,"hits":0},{"tokpos":215,"hits":0},{"tokpos":218,"hits":0},{"tokpos":224,"hits":0},{"tokpos":230,"hits":0},{"tokpos":232,"hits":0},{"tokpos":240,"hits":1},{"tokpos":247,"hits":0},{"tokpos":250,"hits":0},{"tokpos":254,"hits":0},{"tokpos":257,"hits":0},{"tokpos":263,"hits":0},{"tokpos":266,"hits":0},{"tokpos":270,"hits":0},{"tokpos":281,"hits":1},{"tokpos":286,"hits":0},{"tokpos":289,"hits":0},{"tokpos":293,"hits":0},{"tokpos":296,"hits":0},{"tokpos":307,"hits":0},{"tokpos":311,"hits":0},{"tokpos":313,"hits":0},{"tokpos":318,"hits":0},{"tokpos":322,"hits":0},{"tokpos":327,"hits":0},{"tokpos":330,"hits":0},{"tokpos":342,"hits":1},{"tokpos":349,"hits":0},{"tokpos":352,"hits":0},{"tokpos":357,"hits":0},{"tokpos":361,"hits":0},{"tokpos":365,"hits":0},{"tokpos":367,"hits":0},{"tokpos":373,"hits":0},{"tokpos":374,"hits":0},{"tokpos":376,"hits":0},{"tokpos":386,"hits":0},{"tokpos":388,"hits":0},{"tokpos":391,"hits":0},{"tokpos":396,"hits":0},{"tokpos":398,"hits":0},{"tokpos":404,"hits":0},{"tokpos":406,"hits":0},{"tokpos":408,"hits":0},{"tokpos":414,"hits":0},{"tokpos":416,"hits":0},{"tokpos":419,"hits":0},{"tokpos":432,"hits":0},{"tokpos":436,"hits":0},{"tokpos":438,"hits":0},{"tokpos":449,"hits":0},{"tokpos":453,"hits":0},{"tokpos":460,"hits":1},{"tokpos":465,"hits":1},{"tokpos":470,"hits":1},{"tokpos":474,"hits":1},{"tokpos":479,"hits":1},{"tokpos":484,"hits":0},{"tokpos":492,"hits":0},{"tokpos":499,"hits":0},{"tokpos":506,"hits":0},{"tokpos":513,"hits":0},{"tokpos":517,"hits":0},{"tokpos":522,"hits":0},{"tokpos":524,"hits":0},{"tokpos":532,"hits":0},{"tokpos":533,"hits":0},{"tokpos":534,"hits":0},{"tokpos":538,"hits":0},{"tokpos":542,"hits":0},{"tokpos":548,"hits":0},{"tokpos":558,"hits":2},{"tokpos":565,"hits":1},{"tokpos":569,"hits":0},{"tokpos":572,"hits":1},{"tokpos":575,"hits":1},{"tokpos":578,"hits":1},{"tokpos":581,"hits":1},{"tokpos":585,"hits":0},{"tokpos":589,"hits":0},{"tokpos":594,"hits":1},{"tokpos":600,"hits":1},{"tokpos":603,"hits":1},{"tokpos":607,"hits":0},{"tokpos":611,"hits":0},{"tokpos":616,"hits":1},{"tokpos":622,"hits":1},{"tokpos":625,"hits":1},{"tokpos":629,"hits":0},{"tokpos":633,"hits":0},{"tokpos":638,"hits":1},{"tokpos":644,"hits":1},{"tokpos":646,"hits":1},{"tokpos":648,"hits":0},{"tokpos":653,"hits":1},{"tokpos":659,"hits":21},{"tokpos":664,"hits":20},{"tokpos":666,"hits":20},{"tokpos":670,"hits":0},{"tokpos":676,"hits":0},{"tokpos":681,"hits":20},{"tokpos":685,"hits":6},{"tokpos":686,"hits":6},{"tokpos":688,"hits":6},{"tokpos":693,"hits":6},{"tokpos":699,"hits":6},{"tokpos":702,"hits":6},{"tokpos":708,"hits":84},{"tokpos":713,"hits":78},{"tokpos":715,"hits":78},{"tokpos":716,"hits":78},{"tokpos":720,"hits":0},{"tokpos":728,"hits":0},{"tokpos":733,"hits":78},{"tokpos":738,"hits":30},{"tokpos":743,"hits":6},{"tokpos":744,"hits":6},{"tokpos":746,"hits":6},{"tokpos":751,"hits":6},{"tokpos":757,"hits":6},{"tokpos":762,"hits":1},{"tokpos":768,"hits":1},{"tokpos":771,"hits":6},{"tokpos":773,"hits":6},{"tokpos":777,"hits":0},{"tokpos":781,"hits":0},{"tokpos":792,"hits":6},{"tokpos":795,"hits":12},{"tokpos":799,"hits":6},{"tokpos":801,"hits":6},{"tokpos":803,"hits":6},{"tokpos":808,"hits":6},{"tokpos":810,"hits":6},{"tokpos":812,"hits":0},{"tokpos":813,"hits":0},{"tokpos":817,"hits":0},{"tokpos":822,"hits":6},{"tokpos":824,"hits":6},{"tokpos":826,"hits":0},{"tokpos":827,"hits":0},{"tokpos":829,"hits":0},{"tokpos":832,"hits":0},{"tokpos":837,"hits":0},{"tokpos":839,"hits":0},{"tokpos":847,"hits":0},{"tokpos":849,"hits":0},{"tokpos":856,"hits":0},{"tokpos":861,"hits":6},{"tokpos":863,"hits":6},{"tokpos":865,"hits":6},{"tokpos":866,"hits":6},{"tokpos":868,"hits":6},{"tokpos":871,"hits":6},{"tokpos":876,"hits":1},{"tokpos":878,"hits":1},{"tokpos":886,"hits":6},{"tokpos":888,"hits":6},{"tokpos":895,"hits":6},{"tokpos":907,"hits":1},{"tokpos":909,"hits":1},{"tokpos":911,"hits":0},{"tokpos":912,"hits":0},{"tokpos":914,"hits":0},{"tokpos":918,"hits":0},{"tokpos":919,"hits":0},{"tokpos":925,"hits":0},{"tokpos":929,"hits":0},{"tokpos":933,"hits":0},{"tokpos":944,"hits":0},{"tokpos":947,"hits":0},{"tokpos":954,"hits":1},{"tokpos":956,"hits":1},{"tokpos":958,"hits":0},{"tokpos":959,"hits":0},{"tokpos":962,"hits":0},{"tokpos":966,"hits":0},{"tokpos":969,"hits":0},{"tokpos":980,"hits":0},{"tokpos":984,"hits":0},{"tokpos":988,"hits":0},{"tokpos":993,"hits":0},{"tokpos":994,"hits":0},{"tokpos":996,"hits":0},{"tokpos":1005,"hits":1},{"tokpos":1007,"hits":1},{"tokpos":1009,"hits":1},{"tokpos":1010,"hits":1},{"tokpos":1013,"hits":1},{"tokpos":1017,"hits":1},{"tokpos":1020,"hits":1},{"tokpos":1031,"hits":1},{"tokpos":1035,"hits":1},{"tokpos":1039,"hits":2},{"tokpos":1044,"hits":1},{"tokpos":1045,"hits":1},{"tokpos":1047,"hits":1},{"tokpos":1055,"hits":1},{"tokpos":1057,"hits":1},{"tokpos":1064,"hits":0},{"tokpos":1068,"hits":0},{"tokpos":1075,"hits":1},{"tokpos":1080,"hits":0},{"tokpos":1082,"hits":0},{"tokpos":1090,"hits":0},{"tokpos":1097,"hits":0},{"tokpos":1098,"hits":0},{"tokpos":1101,"hits":0},{"tokpos":1109,"hits":0},{"tokpos":1113,"hits":0},{"tokpos":1117,"hits":0},{"tokpos":1124,"hits":0},{"tokpos":1126,"hits":0},{"tokpos":1128,"hits":0},{"tokpos":1129,"hits":0},{"tokpos":1133,"hits":0},{"tokpos":1135,"hits":0},{"tokpos":1137,"hits":0},{"tokpos":1142,"hits":0},{"tokpos":1143,"hits":0},{"tokpos":1149,"hits":0},{"tokpos":1155,"hits":0},{"tokpos":1164,"hits":0},{"tokpos":1173,"hits":0},{"tokpos":1186,"hits":1},{"tokpos":1192,"hits":0},{"tokpos":1194,"hits":0},{"tokpos":1202,"hits":0},{"tokpos":1209,"hits":0},{"tokpos":1210,"hits":0},{"tokpos":1212,"hits":0},{"tokpos":1215,"hits":0},{"tokpos":1216,"hits":0},{"tokpos":1219,"hits":0},{"tokpos":1223,"hits":0},{"tokpos":1232,"hits":0},{"tokpos":1240,"hits":0},{"tokpos":1244,"hits":0},{"tokpos":1247,"hits":0},{"tokpos":1253,"hits":0},{"tokpos":1257,"hits":0},{"tokpos":1259,"hits":0},{"tokpos":1266,"hits":0},{"tokpos":1268,"hits":0},{"tokpos":1270,"hits":0},{"tokpos":1271,"hits":0},{"tokpos":1275,"hits":0},{"tokpos":1277,"hits":0},{"tokpos":1279,"hits":0},{"tokpos":1284,"hits":0},{"tokpos":1285,"hits":0},{"tokpos":1288,"hits":0},{"tokpos":1292,"hits":0},{"tokpos":1295,"hits":0},{"tokpos":1299,"hits":0},{"tokpos":1303,"hits":0},{"tokpos":1307,"hits":0},{"tokpos":1313,"hits":0},{"tokpos":1316,"hits":0},{"tokpos":1318,"hits":0},{"tokpos":1322,"hits":0},{"tokpos":1324,"hits":0},{"tokpos":1328,"hits":0},{"tokpos":1329,"hits":0},{"tokpos":1332,"hits":0},{"tokpos":1340,"hits":0},{"tokpos":1346,"hits":0},{"tokpos":1360,"hits":1},{"tokpos":1365,"hits":0},{"tokpos":1367,"hits":0},{"tokpos":1373,"hits":0},{"tokpos":1379,"hits":0},{"tokpos":1381,"hits":0},{"tokpos":1385,"hits":0},{"tokpos":1398,"hits":0},{"tokpos":1400,"hits":0},{"tokpos":1404,"hits":0},{"tokpos":1410,"hits":0},{"tokpos":1420,"hits":1},{"tokpos":1425,"hits":0},{"tokpos":1429,"hits":0},{"tokpos":1440,"hits":0},{"tokpos":1442,"hits":0},{"tokpos":1448,"hits":0},{"tokpos":1449,"hits":0},{"tokpos":1452,"hits":0},{"tokpos":1460,"hits":0},{"tokpos":1462,"hits":0},{"tokpos":1466,"hits":0},{"tokpos":1470,"hits":0},{"tokpos":1476,"hits":0},{"tokpos":1481,"hits":0},{"tokpos":1482,"hits":0},{"tokpos":1486,"hits":0},{"tokpos":1493,"hits":0},{"tokpos":1495,"hits":0},{"tokpos":1499,"hits":0},{"tokpos":1500,"hits":0},{"tokpos":1506,"hits":0},{"tokpos":1510,"hits":0},{"tokpos":1519,"hits":1},{"tokpos":1526,"hits":0},{"tokpos":1529,"hits":0},{"tokpos":1533,"hits":0},{"tokpos":1536,"hits":0},{"tokpos":1539,"hits":0},{"tokpos":1541,"hits":0},{"tokpos":1544,"hits":0},{"tokpos":1546,"hits":0},{"tokpos":1549,"hits":0},{"tokpos":1552,"hits":0},{"tokpos":1555,"hits":0},{"tokpos":1557,"hits":0},{"tokpos":1562,"hits":0},{"tokpos":1564,"hits":0},{"tokpos":1568,"hits":0},{"tokpos":1571,"hits":0},{"tokpos":1574,"hits":0},{"tokpos":1575,"hits":0},{"tokpos":1577,"hits":0},{"tokpos":1580,"hits":0},{"tokpos":1586,"hits":0},{"tokpos":1588,"hits":0},{"tokpos":1593,"hits":0},{"tokpos":1596,"hits":0},{"tokpos":1602,"hits":0},{"tokpos":1605,"hits":0},{"tokpos":1609,"hits":0},{"tokpos":1613,"hits":0},{"tokpos":1619,"hits":0},{"tokpos":1621,"hits":0},{"tokpos":1624,"hits":0},{"tokpos":1630,"hits":0},{"tokpos":1632,"hits":0},{"tokpos":1641,"hits":0},{"tokpos":1645,"hits":0},{"tokpos":1649,"hits":0},{"tokpos":1655,"hits":0},{"tokpos":1660,"hits":0},{"tokpos":1663,"hits":0},{"tokpos":1667,"hits":0},{"tokpos":1672,"hits":0},{"tokpos":1674,"hits":0},{"tokpos":1676,"hits":0},{"tokpos":1677,"hits":0},{"tokpos":1683,"hits":0},{"tokpos":1693,"hits":0},{"tokpos":1694,"hits":0},{"tokpos":1699,"hits":0},{"tokpos":1712,"hits":0},{"tokpos":1725,"hits":2},{"tokpos":1729,"hits":1},{"tokpos":1732,"hits":1},{"tokpos":1734,"hits":1},{"tokpos":1737,"hits":1},{"tokpos":1743,"hits":7},{"tokpos":1748,"hits":6},{"tokpos":1751,"hits":6},{"tokpos":1753,"hits":6},{"tokpos":1756,"hits":6},{"tokpos":1760,"hits":6},{"tokpos":1762,"hits":6},{"tokpos":1766,"hits":6},{"tokpos":1774,"hits":6},{"tokpos":1782,"hits":6},{"tokpos":1786,"hits":6},{"tokpos":1796,"hits":6},{"tokpos":1806,"hits":2},{"tokpos":1810,"hits":1},{"tokpos":1816,"hits":2},{"tokpos":1821,"hits":1},{"tokpos":1823,"hits":1},{"tokpos":1831,"hits":1},{"tokpos":1832,"hits":1},{"tokpos":1835,"hits":1},{"tokpos":1837,"hits":1},{"tokpos":1840,"hits":1},{"tokpos":1842,"hits":1},{"tokpos":1845,"hits":1},{"tokpos":1851,"hits":7},{"tokpos":1856,"hits":6},{"tokpos":1864,"hits":6},{"tokpos":1868,"hits":6},{"tokpos":1877,"hits":6},{"tokpos":1883,"hits":6},{"tokpos":1893,"hits":1},{"tokpos":1897,"hits":1},{"tokpos":1901,"hits":1},{"tokpos":1911,"hits":1},{"tokpos":1914,"hits":1},{"tokpos":1920,"hits":1},{"tokpos":1933,"hits":0},{"tokpos":1934,"hits":0},{"tokpos":1940,"hits":0},{"tokpos":1944,"hits":0},{"tokpos":1956,"hits":7},{"tokpos":1961,"hits":6},{"tokpos":1963,"hits":6},{"tokpos":1969,"hits":6},{"tokpos":1970,"hits":6},{"tokpos":1972,"hits":12},{"tokpos":1976,"hits":6},{"tokpos":1986,"hits":5},{"tokpos":1992,"hits":6},{"tokpos":1997,"hits":0},{"tokpos":1998,"hits":0},{"tokpos":2002,"hits":0},{"tokpos":2010,"hits":7},{"tokpos":2017,"hits":6},{"tokpos":2021,"hits":6},{"tokpos":2036,"hits":6},{"tokpos":2039,"hits":6},{"tokpos":2043,"hits":6},{"tokpos":2048,"hits":6},{"tokpos":2051,"hits":6},{"tokpos":2053,"hits":6},{"tokpos":2056,"hits":6},{"tokpos":2058,"hits":6},{"tokpos":2061,"hits":6},{"tokpos":2064,"hits":6},{"tokpos":2067,"hits":6},{"tokpos":2069,"hits":6},{"tokpos":2074,"hits":6},{"tokpos":2076,"hits":57},{"tokpos":2080,"hits":52},{"tokpos":2083,"hits":51},{"tokpos":2086,"hits":52},{"tokpos":2087,"hits":52},{"tokpos":2089,"hits":52},{"tokpos":2092,"hits":52},{"tokpos":2098,"hits":52},{"tokpos":2100,"hits":52},{"tokpos":2105,"hits":51},{"tokpos":2108,"hits":51},{"tokpos":2114,"hits":51},{"tokpos":2117,"hits":51},{"tokpos":2121,"hits":51},{"tokpos":2125,"hits":51},{"tokpos":2131,"hits":51},{"tokpos":2133,"hits":51},{"tokpos":2136,"hits":51},{"tokpos":2142,"hits":51},{"tokpos":2144,"hits":51},{"tokpos":2153,"hits":0},{"tokpos":2157,"hits":0},{"tokpos":2161,"hits":0},{"tokpos":2164,"hits":0},{"tokpos":2168,"hits":0},{"tokpos":2175,"hits":5},{"tokpos":2177,"hits":5},{"tokpos":2180,"hits":5},{"tokpos":2181,"hits":5},{"tokpos":2185,"hits":5},{"tokpos":2186,"hits":5},{"tokpos":2187,"hits":5},{"tokpos":2190,"hits":5},{"tokpos":2216,"hits":1},{"tokpos":2221,"hits":0},{"tokpos":2223,"hits":1}],"3":[{"tokpos":0,"hits":1},{"tokpos":3,"hits":1},{"tokpos":8,"hits":0},{"tokpos":11,"hits":0},{"tokpos":12,"hits":0},{"tokpos":14,"hits":0},{"tokpos":16,"hits":0},{"tokpos":18,"hits":0},{"tokpos":20,"hits":0},{"tokpos":22,"hits":0},{"tokpos":24,"hits":0},{"tokpos":26,"hits":0},{"tokpos":28,"hits":0},{"tokpos":30,"hits":0},{"tokpos":32,"hits":0},{"tokpos":34,"hits":0},{"tokpos":36,"hits":0},{"tokpos":38,"hits":0},{"tokpos":40,"hits":0},{"tokpos":42,"hits":0},{"tokpos":44,"hits":0},{"tokpos":46,"hits":0},{"tokpos":48,"hits":0},{"tokpos":50,"hits":0},{"tokpos":52,"hits":0},{"tokpos":54,"hits":0},{"tokpos":56,"hits":0},{"tokpos":58,"hits":0},{"tokpos":60,"hits":0},{"tokpos":62,"hits":0},{"tokpos":64,"hits":0},{"tokpos":66,"hits":0},{"tokpos":68,"hits":0},{"tokpos":70,"hits":0},{"tokpos":72,"hits":0},{"tokpos":74,"hits":0},{"tokpos":76,"hits":0},{"tokpos":78,"hits":0},{"tokpos":80,"hits":0},{"tokpos":82,"hits":0},{"tokpos":84,"hits":0},{"tokpos":86,"hits":0},{"tokpos":88,"hits":0},{"tokpos":90,"hits":0},{"tokpos":92,"hits":0},{"tokpos":94,"hits":0},{"tokpos":96,"hits":0},{"tokpos":98,"hits":0},{"tokpos":100,"hits":0},{"tokpos":102,"hits":0},{"tokpos":104,"hits":0},{"tokpos":106,"hits":0},{"tokpos":108,"hits":0},{"tokpos":111,"hits":0},{"tokpos":114,"hits":0},{"tokpos":115,"hits":0},{"tokpos":117,"hits":0},{"tokpos":119,"hits":0},{"tokpos":121,"hits":0},{"tokpos":123,"hits":0},{"tokpos":125,"hits":0},{"tokpos":127,"hits":0},{"tokpos":129,"hits":0},{"tokpos":131,"hits":0},{"tokpos":135,"hits":0},{"tokpos":139,"hits":0},{"tokpos":142,"hits":0},{"tokpos":148,"hits":0},{"tokpos":153,"hits":0},{"tokpos":154,"hits":0},{"tokpos":165,"hits":0},{"tokpos":169,"hits":0},{"tokpos":171,"hits":0},{"tokpos":173,"hits":0},{"tokpos":176,"hits":0},{"tokpos":177,"hits":0},{"tokpos":180,"hits":0},{"tokpos":185,"hits":1},{"tokpos":188,"hits":1},{"tokpos":195,"hits":0},{"tokpos":198,"hits":0},{"tokpos":199,"hits":0},{"tokpos":201,"hits":0},{"tokpos":203,"hits":0},{"tokpos":205,"hits":0},{"tokpos":207,"hits":0},{"tokpos":214,"hits":0},{"tokpos":217,"hits":0},{"tokpos":221,"hits":0},{"tokpos":226,"hits":0},{"tokpos":227,"hits":0},{"tokpos":238,"hits":0},{"tokpos":241,"hits":0},{"tokpos":244,"hits":0},{"tokpos":254,"hits":0},{"tokpos":255,"hits":0},{"tokpos":258,"hits":0},{"tokpos":260,"hits":0},{"tokpos":263,"hits":0},{"tokpos":265,"hits":0},{"tokpos":268,"hits":0},{"tokpos":269,"hits":0},{"tokpos":271,"hits":0},{"tokpos":274,"hits":0},{"tokpos":284,"hits":0},{"tokpos":289,"hits":0},{"tokpos":291,"hits":0},{"tokpos":294,"hits":0},{"tokpos":297,"hits":0},{"tokpos":298,"hits":0},{"tokpos":300,"hits":0},{"tokpos":302,"hits":0},{"tokpos":304,"hits":0},{"tokpos":306,"hits":0},{"tokpos":308,"hits":0},{"tokpos":310,"hits":0},{"tokpos":312,"hits":0},{"tokpos":314,"hits":0},{"tokpos":316,"hits":0},{"tokpos":318,"hits":0},{"tokpos":320,"hits":0},{"tokpos":322,"hits":0},{"tokpos":324,"hits":0},{"tokpos":326,"hits":0},{"tokpos":328,"hits":0},{"tokpos":331,"hits":0},{"tokpos":334,"hits":0},{"tokpos":335,"hits":0},{"tokpos":337,"hits":0},{"tokpos":339,"hits":0},{"tokpos":341,"hits":0},{"tokpos":343,"hits":0},{"tokpos":347,"hits":0},{"tokpos":353,"hits":0},{"tokpos":357,"hits":0},{"tokpos":360,"hits":0},{"tokpos":364,"hits":0},{"tokpos":369,"hits":0},{"tokpos":371,"hits":0},{"tokpos":375,"hits":0},{"tokpos":380,"hits":0},{"tokpos":384,"hits":0},{"tokpos":392,"hits":0},{"tokpos":396,"hits":0},{"tokpos":406,"hits":0},{"tokpos":410,"hits":0},{"tokpos":413,"hits":0},{"tokpos":417,"hits":0},{"tokpos":422,"hits":0},{"tokpos":424,"hits":0},{"tokpos":428,"hits":0},{"tokpos":431,"hits":0},{"tokpos":435,"hits":0},{"tokpos":441,"hits":0},{"tokpos":445,"hits":0},{"tokpos":455,"hits":1},{"tokpos":458,"hits":1},{"tokpos":463,"hits":0},{"tokpos":466,"hits":0},{"tokpos":467,"hits":0},{"tokpos":469,"hits":0},{"tokpos":473,"hits":0},{"tokpos":476,"hits":0},{"tokpos":480,"hits":0},{"tokpos":485,"hits":0},{"tokpos":486,"hits":0},{"tokpos":497,"hits":0},{"tokpos":500,"hits":0},{"tokpos":503,"hits":0},{"tokpos":509,"hits":0},{"tokpos":510,"hits":0},{"tokpos":513,"hits":0},{"tokpos":515,"hits":0},{"tokpos":520,"hits":0},{"tokpos":526,"hits":0},{"tokpos":529,"hits":0},{"tokpos":534,"hits":0},{"tokpos":535,"hits":0},{"tokpos":543,"hits":0},{"tokpos":546,"hits":0},{"tokpos":548,"hits":0},{"tokpos":551,"hits":0},{"tokpos":553,"hits":0},{"tokpos":556,"hits":0},{"tokpos":558,"hits":0},{"tokpos":561,"hits":0},{"tokpos":563,"hits":0},{"tokpos":566,"hits":0},{"tokpos":568,"hits":0},{"tokpos":570,"hits":0},{"tokpos":577,"hits":0},{"tokpos":579,"hits":0},{"tokpos":581,"hits":0},{"tokpos":583,"hits":0},{"tokpos":596,"hits":0},{"tokpos":610,"hits":0},{"tokpos":620,"hits":0},{"tokpos":627,"hits":0},{"tokpos":629,"hits":0},{"tokpos":632,"hits":0},{"tokpos":633,"hits":0},{"tokpos":636,"hits":0},{"tokpos":638,"hits":0},{"tokpos":641,"hits":0},{"tokpos":644,"hits":0},{"tokpos":647,"hits":0},{"tokpos":653,"hits":0},{"tokpos":656,"hits":0},{"tokpos":659,"hits":0},{"tokpos":660,"hits":0},{"tokpos":662,"hits":0},{"tokpos":664,"hits":0},{"tokpos":666,"hits":0},{"tokpos":668,"hits":0},{"tokpos":670,"hits":0},{"tokpos":672,"hits":0},{"tokpos":674,"hits":0},{"tokpos":676,"hits":0},{"tokpos":678,"hits":0},{"tokpos":680,"hits":0},{"tokpos":682,"hits":0},{"tokpos":684,"hits":0},{"tokpos":686,"hits":0},{"tokpos":688,"hits":0},{"tokpos":690,"hits":0},{"tokpos":692,"hits":0},{"tokpos":694,"hits":0},{"tokpos":696,"hits":0},{"tokpos":698,"hits":0},{"tokpos":700,"hits":0},{"tokpos":702,"hits":0},{"tokpos":704,"hits":0},{"tokpos":706,"hits":0},{"tokpos":708,"hits":0},{"tokpos":710,"hits":0},{"tokpos":714,"hits":0},{"tokpos":717,"hits":0},{"tokpos":718,"hits":0},{"tokpos":720,"hits":0},{"tokpos":722,"hits":0},{"tokpos":724,"hits":0},{"tokpos":726,"hits":0},{"tokpos":728,"hits":0},{"tokpos":730,"hits":0},{"tokpos":732,"hits":0},{"tokpos":734,"hits":0},{"tokpos":736,"hits":0},{"tokpos":738,"hits":0},{"tokpos":740,"hits":0},{"tokpos":744,"hits":0},{"tokpos":748,"hits":0},{"tokpos":751,"hits":0},{"tokpos":755,"hits":0},{"tokpos":760,"hits":0},{"tokpos":762,"hits":0},{"tokpos":766,"hits":0},{"tokpos":769,"hits":0},{"tokpos":773,"hits":0},{"tokpos":779,"hits":0},{"tokpos":783,"hits":0},{"tokpos":791,"hits":0},{"tokpos":795,"hits":0},{"tokpos":798,"hits":0},{"tokpos":802,"hits":0},{"tokpos":807,"hits":0},{"tokpos":809,"hits":0},{"tokpos":813,"hits":0},{"tokpos":816,"hits":0},{"tokpos":820,"hits":0},{"tokpos":826,"hits":0},{"tokpos":830,"hits":0},{"tokpos":839,"hits":1},{"tokpos":840,"hits":1},{"tokpos":843,"hits":1},{"tokpos":845,"hits":1},{"tokpos":848,"hits":1},{"tokpos":850,"hits":1},{"tokpos":853,"hits":1},{"tokpos":855,"hits":1},{"tokpos":858,"hits":1},{"tokpos":860,"hits":1},{"tokpos":863,"hits":1},{"tokpos":865,"hits":1},{"tokpos":868,"hits":1},{"tokpos":870,"hits":1},{"tokpos":873,"hits":1},{"tokpos":875,"hits":1},{"tokpos":878,"hits":1},{"tokpos":880,"hits":1},{"tokpos":883,"hits":1},{"tokpos":885,"hits":1},{"tokpos":888,"hits":1},{"tokpos":890,"hits":1},{"tokpos":893,"hits":1},{"tokpos":895,"hits":1},{"tokpos":898,"hits":1},{"tokpos":900,"hits":1},{"tokpos":903,"hits":1},{"tokpos":905,"hits":1},{"tokpos":908,"hits":1},{"tokpos":910,"hits":1},{"tokpos":913,"hits":1},{"tokpos":915,"hits":1},{"tokpos":918,"hits":1},{"tokpos":920,"hits":1},{"tokpos":923,"hits":1},{"tokpos":925,"hits":1},{"tokpos":928,"hits":1},{"tokpos":930,"hits":1},{"tokpos":933,"hits":53},{"tokpos":938,"hits":52},{"tokpos":945,"hits":52},{"tokpos":950,"hits":52},{"tokpos":952,"hits":0},{"tokpos":955,"hits":52},{"tokpos":965,"hits":52},{"tokpos":971,"hits":52},{"tokpos":977,"hits":52},{"tokpos":983,"hits":52},{"tokpos":990,"hits":52},{"tokpos":996,"hits":52},{"tokpos":1003,"hits":52},{"tokpos":1010,"hits":52},{"tokpos":1017,"hits":52},{"tokpos":1023,"hits":52},{"tokpos":1032,"hits":1},{"tokpos":1034,"hits":1},{"tokpos":1039,"hits":1},{"tokpos":1041,"hits":1},{"tokpos":1046,"hits":1},{"tokpos":1048,"hits":1},{"tokpos":1053,"hits":1},{"tokpos":1055,"hits":1},{"tokpos":1060,"hits":1},{"tokpos":1062,"hits":1},{"tokpos":1067,"hits":1},{"tokpos":1069,"hits":1},{"tokpos":1074,"hits":1},{"tokpos":1076,"hits":1},{"tokpos":1081,"hits":1},{"tokpos":1083,"hits":1},{"tokpos":1088,"hits":1},{"tokpos":1090,"hits":1},{"tokpos":1095,"hits":1},{"tokpos":1097,"hits":1},{"tokpos":1102,"hits":1},{"tokpos":1104,"hits":1},{"tokpos":1109,"hits":1},{"tokpos":1111,"hits":1},{"tokpos":1116,"hits":1},{"tokpos":1118,"hits":1},{"tokpos":1123,"hits":1},{"tokpos":1125,"hits":1},{"tokpos":1130,"hits":1},{"tokpos":1132,"hits":1},{"tokpos":1137,"hits":1},{"tokpos":1139,"hits":1},{"tokpos":1144,"hits":1},{"tokpos":1146,"hits":1},{"tokpos":1151,"hits":1},{"tokpos":1153,"hits":1},{"tokpos":1158,"hits":1},{"tokpos":1165,"hits":1},{"tokpos":1169,"hits":1},{"tokpos":1173,"hits":1},{"tokpos":1177,"hits":1},{"tokpos":1181,"hits":1},{"tokpos":1185,"hits":1},{"tokpos":1189,"hits":1},{"tokpos":1193,"hits":1},{"tokpos":1198,"hits":1},{"tokpos":1203,"hits":1},{"tokpos":1207,"hits":1},{"tokpos":1211,"hits":1},{"tokpos":1215,"hits":1},{"tokpos":1219,"hits":1},{"tokpos":1223,"hits":9951736},{"tokpos":1228,"hits":9951735},{"tokpos":1229,"hits":9951735},{"tokpos":1239,"hits":647758},{"tokpos":1243,"hits":647757},{"tokpos":1244,"hits":647757},{"tokpos":1250,"hits":504045},{"tokpos":1256,"hits":410805},{"tokpos":1262,"hits":330156},{"tokpos":1268,"hits":324049},{"tokpos":1274,"hits":13957865},{"tokpos":1279,"hits":13957864},{"tokpos":1280,"hits":13957864},{"tokpos":1292,"hits":90333},{"tokpos":1297,"hits":90332},{"tokpos":1298,"hits":90332},{"tokpos":1310,"hits":772},{"tokpos":1315,"hits":771},{"tokpos":1318,"hits":771},{"tokpos":1322,"hits":771},{"tokpos":1325,"hits":771},{"tokpos":1327,"hits":771},{"tokpos":1329,"hits":0},{"tokpos":1335,"hits":771},{"tokpos":1336,"hits":771},{"tokpos":1342,"hits":364581},{"tokpos":1346,"hits":364580},{"tokpos":1349,"hits":364580},{"tokpos":1355,"hits":364580},{"tokpos":1357,"hits":364580},{"tokpos":1359,"hits":234046},{"tokpos":1365,"hits":364580},{"tokpos":1366,"hits":364580},{"tokpos":1372,"hits":7471763},{"tokpos":1377,"hits":7471762},{"tokpos":1380,"hits":7471762},{"tokpos":1384,"hits":7471762},{"tokpos":1387,"hits":7471762},{"tokpos":1389,"hits":7471762},{"tokpos":1391,"hits":1568162},{"tokpos":1397,"hits":7471762},{"tokpos":1398,"hits":7471762},{"tokpos":1404,"hits":79445},{"tokpos":1409,"hits":79444},{"tokpos":1412,"hits":79444},{"tokpos":1416,"hits":79444},{"tokpos":1419,"hits":79444},{"tokpos":1421,"hits":79444},{"tokpos":1423,"hits":16824},{"tokpos":1429,"hits":79444},{"tokpos":1430,"hits":79444},{"tokpos":1436,"hits":1109605},{"tokpos":1443,"hits":1109604},{"tokpos":1445,"hits":1109604},{"tokpos":1449,"hits":1109604},{"tokpos":1452,"hits":1109604},{"tokpos":1453,"hits":1109604},{"tokpos":1457,"hits":1109604},{"tokpos":1462,"hits":0},{"tokpos":1463,"hits":0},{"tokpos":1464,"hits":0},{"tokpos":1468,"hits":0},{"tokpos":1476,"hits":630194},{"tokpos":1481,"hits":630193},{"tokpos":1483,"hits":630193},{"tokpos":1487,"hits":630193},{"tokpos":1490,"hits":630193},{"tokpos":1491,"hits":630193},{"tokpos":1495,"hits":630193},{"tokpos":1500,"hits":0},{"tokpos":1501,"hits":0},{"tokpos":1502,"hits":0},{"tokpos":1506,"hits":0},{"tokpos":1514,"hits":1},{"tokpos":1521,"hits":0},{"tokpos":1523,"hits":0},{"tokpos":1527,"hits":0},{"tokpos":1530,"hits":0},{"tokpos":1531,"hits":0},{"tokpos":1535,"hits":0},{"tokpos":1540,"hits":0},{"tokpos":1541,"hits":0},{"tokpos":1542,"hits":0},{"tokpos":1546,"hits":0},{"tokpos":1554,"hits":2697},{"tokpos":1561,"hits":2696},{"tokpos":1563,"hits":2696},{"tokpos":1567,"hits":2696},{"tokpos":1570,"hits":2696},{"tokpos":1571,"hits":2696},{"tokpos":1575,"hits":2696},{"tokpos":1580,"hits":0},{"tokpos":1581,"hits":0},{"tokpos":1582,"hits":0},{"tokpos":1586,"hits":0},{"tokpos":1594,"hits":2159645},{"tokpos":1598,"hits":2159644},{"tokpos":1599,"hits":2159644},{"tokpos":1603,"hits":2159644},{"tokpos":1610,"hits":1661094},{"tokpos":1614,"hits":1661093},{"tokpos":1615,"hits":1661093},{"tokpos":1619,"hits":1661093},{"tokpos":1626,"hits":5612046},{"tokpos":1631,"hits":5612045},{"tokpos":1637,"hits":5612045},{"tokpos":1640,"hits":5612045},{"tokpos":1644,"hits":5612045},{"tokpos":1646,"hits":5612045},{"tokpos":1652,"hits":0},{"tokpos":1653,"hits":0},{"tokpos":1659,"hits":0},{"tokpos":1669,"hits":0},{"tokpos":1670,"hits":0},{"tokpos":1673,"hits":5612045},{"tokpos":1674,"hits":10281574},{"tokpos":1675,"hits":10281574},{"tokpos":1678,"hits":10281574},{"tokpos":1682,"hits":10281574},{"tokpos":1688,"hits":10281574},{"tokpos":1693,"hits":5612045},{"tokpos":1699,"hits":5612045},{"tokpos":1700,"hits":5612045},{"tokpos":1706,"hits":10281575},{"tokpos":1711,"hits":10281574},{"tokpos":1717,"hits":10281574},{"tokpos":1724,"hits":10281574},{"tokpos":1732,"hits":10281574},{"tokpos":1734,"hits":10281574},{"tokpos":1742,"hits":51},{"tokpos":1743,"hits":51},{"tokpos":1745,"hits":10281523},{"tokpos":1748,"hits":10281523},{"tokpos":1752,"hits":10281523},{"tokpos":1754,"hits":10281523},{"tokpos":1759,"hits":2357551},{"tokpos":1760,"hits":2357551},{"tokpos":1766,"hits":2357551},{"tokpos":1774,"hits":10281523},{"tokpos":1779,"hits":10281523},{"tokpos":1782,"hits":10281523},{"tokpos":1786,"hits":10281523},{"tokpos":1789,"hits":10281523},{"tokpos":1797,"hits":10281523},{"tokpos":1798,"hits":10281523},{"tokpos":1804,"hits":10281524},{"tokpos":1809,"hits":10281523},{"tokpos":1812,"hits":10281523},{"tokpos":1816,"hits":10281523},{"tokpos":1819,"hits":10281523},{"tokpos":1823,"hits":10281523},{"tokpos":1826,"hits":10281523},{"tokpos":1830,"hits":10281523},{"tokpos":1833,"hits":10281523},{"tokpos":1836,"hits":10281523},{"tokpos":1839,"hits":10281523},{"tokpos":1841,"hits":10281523},{"tokpos":1845,"hits":10281523},{"tokpos":1848,"hits":4003423},{"tokpos":1853,"hits":6278100},{"tokpos":1855,"hits":6278100},{"tokpos":1859,"hits":6278100},{"tokpos":1861,"hits":6278100},{"tokpos":1863,"hits":6278100},{"tokpos":1866,"hits":601865},{"tokpos":1871,"hits":5676235},{"tokpos":1873,"hits":5676235},{"tokpos":1877,"hits":71996},{"tokpos":1878,"hits":71996},{"tokpos":1881,"hits":71996},{"tokpos":1885,"hits":71996},{"tokpos":1890,"hits":71996},{"tokpos":1892,"hits":71996},{"tokpos":1896,"hits":58041},{"tokpos":1902,"hits":58041},{"tokpos":1904,"hits":58041},{"tokpos":1908,"hits":13955},{"tokpos":1910,"hits":13955},{"tokpos":1914,"hits":6200},{"tokpos":1920,"hits":6200},{"tokpos":1922,"hits":6200},{"tokpos":1926,"hits":7755},{"tokpos":1928,"hits":7755},{"tokpos":1930,"hits":6107},{"tokpos":1939,"hits":1648},{"tokpos":1945,"hits":1648},{"tokpos":1947,"hits":1648},{"tokpos":1952,"hits":5604239},{"tokpos":1954,"hits":5604239},{"tokpos":1958,"hits":5604239},{"tokpos":1961,"hits":3165105},{"tokpos":1966,"hits":2439134},{"tokpos":1968,"hits":2439134},{"tokpos":1972,"hits":2439134},{"tokpos":1975,"hits":2202341},{"tokpos":1980,"hits":236793},{"tokpos":1982,"hits":236793},{"tokpos":1986,"hits":32913},{"tokpos":1995,"hits":203880},{"tokpos":1997,"hits":203880},{"tokpos":2001,"hits":110732},{"tokpos":2010,"hits":93148},{"tokpos":2012,"hits":93148},{"tokpos":2016,"hits":93148},{"tokpos":2018,"hits":93148},{"tokpos":2020,"hits":93148},{"tokpos":2023,"hits":93148},{"tokpos":2028,"hits":0},{"tokpos":2029,"hits":0},{"tokpos":2037,"hits":10281523},{"tokpos":2038,"hits":10281523},{"tokpos":2044,"hits":5604240},{"tokpos":2049,"hits":5604239},{"tokpos":2052,"hits":5604239},{"tokpos":2056,"hits":5604239},{"tokpos":2059,"hits":5604239},{"tokpos":2063,"hits":5604239},{"tokpos":2066,"hits":5604239},{"tokpos":2068,"hits":5604239},{"tokpos":2070,"hits":5604239},{"tokpos":2074,"hits":5171806},{"tokpos":2078,"hits":4739374},{"tokpos":2082,"hits":4525731},{"tokpos":2086,"hits":4312091},{"tokpos":2090,"hits":4221413},{"tokpos":2094,"hits":4130735},{"tokpos":2098,"hits":3780901},{"tokpos":2102,"hits":3501752},{"tokpos":2106,"hits":3483710},{"tokpos":2110,"hits":2231923},{"tokpos":2115,"hits":3372316},{"tokpos":2116,"hits":3372316},{"tokpos":2119,"hits":3372316},{"tokpos":2123,"hits":3372316},{"tokpos":2128,"hits":3372316},{"tokpos":2130,"hits":3372316},{"tokpos":2134,"hits":457792},{"tokpos":2135,"hits":457792},{"tokpos":2137,"hits":457792},{"tokpos":2141,"hits":456336},{"tokpos":2145,"hits":457773},{"tokpos":2151,"hits":2914524},{"tokpos":2153,"hits":2914524},{"tokpos":2157,"hits":292634},{"tokpos":2158,"hits":292634},{"tokpos":2160,"hits":292634},{"tokpos":2164,"hits":29504},{"tokpos":2165,"hits":29504},{"tokpos":2167,"hits":29504},{"tokpos":2171,"hits":29504},{"tokpos":2178,"hits":11869},{"tokpos":2183,"hits":17635},{"tokpos":2189,"hits":263130},{"tokpos":2195,"hits":2621890},{"tokpos":2197,"hits":2621890},{"tokpos":2201,"hits":10126},{"tokpos":2202,"hits":10126},{"tokpos":2204,"hits":10126},{"tokpos":2208,"hits":768},{"tokpos":2213,"hits":9358},{"tokpos":2215,"hits":9358},{"tokpos":2219,"hits":291},{"tokpos":2220,"hits":291},{"tokpos":2222,"hits":291},{"tokpos":2226,"hits":291},{"tokpos":2233,"hits":1},{"tokpos":2238,"hits":290},{"tokpos":2244,"hits":9067},{"tokpos":2250,"hits":2611764},{"tokpos":2252,"hits":2611764},{"tokpos":2256,"hits":5790},{"tokpos":2257,"hits":5790},{"tokpos":2259,"hits":5790},{"tokpos":2263,"hits":2011},{"tokpos":2268,"hits":3779},{"tokpos":2270,"hits":3779},{"tokpos":2274,"hits":452},{"tokpos":2275,"hits":452},{"tokpos":2278,"hits":452},{"tokpos":2282,"hits":452},{"tokpos":2287,"hits":452},{"tokpos":2289,"hits":452},{"tokpos":2293,"hits":26},{"tokpos":2298,"hits":426},{"tokpos":2300,"hits":426},{"tokpos":2304,"hits":84},{"tokpos":2305,"hits":84},{"tokpos":2307,"hits":84},{"tokpos":2311,"hits":84},{"tokpos":2318,"hits":0},{"tokpos":2323,"hits":84},{"tokpos":2329,"hits":342},{"tokpos":2335,"hits":3327},{"tokpos":2341,"hits":2605974},{"tokpos":2343,"hits":2605974},{"tokpos":2347,"hits":51342},{"tokpos":2348,"hits":51342},{"tokpos":2350,"hits":51342},{"tokpos":2354,"hits":43481},{"tokpos":2358,"hits":18728},{"tokpos":2363,"hits":32614},{"tokpos":2369,"hits":2554632},{"tokpos":2371,"hits":2554632},{"tokpos":2375,"hits":13499},{"tokpos":2376,"hits":13499},{"tokpos":2378,"hits":13499},{"tokpos":2382,"hits":12543},{"tokpos":2386,"hits":2412},{"tokpos":2391,"hits":11087},{"tokpos":2397,"hits":2541133},{"tokpos":2399,"hits":2541133},{"tokpos":2403,"hits":6547},{"tokpos":2404,"hits":6547},{"tokpos":2406,"hits":6547},{"tokpos":2410,"hits":150},{"tokpos":2415,"hits":6397},{"tokpos":2421,"hits":2534586},{"tokpos":2423,"hits":2534586},{"tokpos":2427,"hits":529},{"tokpos":2428,"hits":529},{"tokpos":2430,"hits":529},{"tokpos":2434,"hits":13},{"tokpos":2439,"hits":516},{"tokpos":2445,"hits":2534057},{"tokpos":2447,"hits":2534057},{"tokpos":2451,"hits":23109},{"tokpos":2452,"hits":23109},{"tokpos":2454,"hits":23109},{"tokpos":2458,"hits":22975},{"tokpos":2462,"hits":22804},{"tokpos":2467,"hits":305},{"tokpos":2473,"hits":2510948},{"tokpos":2475,"hits":2510948},{"tokpos":2479,"hits":24322},{"tokpos":2480,"hits":24322},{"tokpos":2482,"hits":24322},{"tokpos":2486,"hits":24270},{"tokpos":2490,"hits":23290},{"tokpos":2495,"hits":1032},{"tokpos":2501,"hits":2486626},{"tokpos":2503,"hits":2486626},{"tokpos":2507,"hits":196},{"tokpos":2508,"hits":196},{"tokpos":2510,"hits":196},{"tokpos":2514,"hits":14},{"tokpos":2519,"hits":182},{"tokpos":2525,"hits":2486430},{"tokpos":2527,"hits":2486430},{"tokpos":2531,"hits":47245},{"tokpos":2532,"hits":47245},{"tokpos":2534,"hits":47245},{"tokpos":2538,"hits":24677},{"tokpos":2539,"hits":24677},{"tokpos":2541,"hits":24677},{"tokpos":2545,"hits":24677},{"tokpos":2552,"hits":17815},{"tokpos":2557,"hits":6862},{"tokpos":2563,"hits":22568},{"tokpos":2569,"hits":2439185},{"tokpos":2571,"hits":2439185},{"tokpos":2575,"hits":70},{"tokpos":2576,"hits":70},{"tokpos":2578,"hits":70},{"tokpos":2582,"hits":0},{"tokpos":2587,"hits":70},{"tokpos":2593,"hits":5604239},{"tokpos":2595,"hits":5604239},{"tokpos":2597,"hits":3165105},{"tokpos":2598,"hits":3165105},{"tokpos":2604,"hits":3165105},{"tokpos":2605,"hits":3165105},{"tokpos":2609,"hits":2439134},{"tokpos":2610,"hits":2439134},{"tokpos":2611,"hits":2439134},{"tokpos":2618,"hits":1649},{"tokpos":2625,"hits":1648},{"tokpos":2627,"hits":1648},{"tokpos":2631,"hits":79},{"tokpos":2638,"hits":1569},{"tokpos":2639,"hits":1569},{"tokpos":2644,"hits":1569},{"tokpos":2651,"hits":1648},{"tokpos":2652,"hits":1648},{"tokpos":2658,"hits":1},{"tokpos":2663,"hits":0},{"tokpos":2666,"hits":0},{"tokpos":2670,"hits":0},{"tokpos":2673,"hits":0},{"tokpos":2677,"hits":0},{"tokpos":2679,"hits":0},{"tokpos":2683,"hits":0},{"tokpos":2684,"hits":0},{"tokpos":2688,"hits":0},{"tokpos":2690,"hits":0},{"tokpos":2694,"hits":0},{"tokpos":2696,"hits":0},{"tokpos":2700,"hits":0},{"tokpos":2701,"hits":0},{"tokpos":2705,"hits":0},{"tokpos":2707,"hits":0},{"tokpos":2711,"hits":0},{"tokpos":2713,"hits":0},{"tokpos":2717,"hits":0},{"tokpos":2718,"hits":0},{"tokpos":2722,"hits":0},{"tokpos":2724,"hits":0},{"tokpos":2728,"hits":0},{"tokpos":2730,"hits":0},{"tokpos":2734,"hits":0},{"tokpos":2735,"hits":0},{"tokpos":2739,"hits":0},{"tokpos":2741,"hits":0},{"tokpos":2745,"hits":0},{"tokpos":2747,"hits":0},{"tokpos":2751,"hits":0},{"tokpos":2752,"hits":0},{"tokpos":2756,"hits":0},{"tokpos":2758,"hits":0},{"tokpos":2762,"hits":0},{"tokpos":2764,"hits":0},{"tokpos":2768,"hits":0},{"tokpos":2769,"hits":0},{"tokpos":2773,"hits":0},{"tokpos":2775,"hits":0},{"tokpos":2779,"hits":0},{"tokpos":2781,"hits":0},{"tokpos":2785,"hits":0},{"tokpos":2786,"hits":0},{"tokpos":2790,"hits":0},{"tokpos":2792,"hits":0},{"tokpos":2796,"hits":0},{"tokpos":2798,"hits":0},{"tokpos":2802,"hits":0},{"tokpos":2803,"hits":0},{"tokpos":2807,"hits":0},{"tokpos":2809,"hits":0},{"tokpos":2813,"hits":0},{"tokpos":2815,"hits":0},{"tokpos":2819,"hits":0},{"tokpos":2820,"hits":0},{"tokpos":2824,"hits":0},{"tokpos":2826,"hits":0},{"tokpos":2830,"hits":0},{"tokpos":2832,"hits":0},{"tokpos":2836,"hits":0},{"tokpos":2837,"hits":0},{"tokpos":2841,"hits":0},{"tokpos":2843,"hits":0},{"tokpos":2847,"hits":0},{"tokpos":2848,"hits":0},{"tokpos":2851,"hits":0},{"tokpos":2855,"hits":0},{"tokpos":2860,"hits":0},{"tokpos":2862,"hits":0},{"tokpos":2866,"hits":0},{"tokpos":2867,"hits":0},{"tokpos":2869,"hits":0},{"tokpos":2873,"hits":0},{"tokpos":2877,"hits":0},{"tokpos":2878,"hits":0},{"tokpos":2880,"hits":0},{"tokpos":2881,"hits":0},{"tokpos":2885,"hits":0},{"tokpos":2887,"hits":0},{"tokpos":2892,"hits":0},{"tokpos":2894,"hits":0},{"tokpos":2898,"hits":0},{"tokpos":2899,"hits":0},{"tokpos":2901,"hits":0},{"tokpos":2905,"hits":0},{"tokpos":2906,"hits":0},{"tokpos":2908,"hits":0},{"tokpos":2912,"hits":0},{"tokpos":2919,"hits":0},{"tokpos":2920,"hits":0},{"tokpos":2924,"hits":0},{"tokpos":2926,"hits":0},{"tokpos":2929,"hits":0},{"tokpos":2930,"hits":0},{"tokpos":2934,"hits":0},{"tokpos":2936,"hits":0},{"tokpos":2940,"hits":0},{"tokpos":2941,"hits":0},{"tokpos":2945,"hits":0},{"tokpos":2947,"hits":0},{"tokpos":2952,"hits":0},{"tokpos":2954,"hits":0},{"tokpos":2958,"hits":0},{"tokpos":2959,"hits":0},{"tokpos":2961,"hits":0},{"tokpos":2965,"hits":0},{"tokpos":2966,"hits":0},{"tokpos":2970,"hits":0},{"tokpos":2972,"hits":0},{"tokpos":2975,"hits":0},{"tokpos":2977,"hits":0},{"tokpos":2981,"hits":0},{"tokpos":2982,"hits":0},{"tokpos":2984,"hits":0},{"tokpos":2988,"hits":0},{"tokpos":2995,"hits":0},{"tokpos":2996,"hits":0},{"tokpos":3000,"hits":0},{"tokpos":3002,"hits":0},{"tokpos":3005,"hits":0},{"tokpos":3006,"hits":0},{"tokpos":3010,"hits":0},{"tokpos":3012,"hits":0},{"tokpos":3016,"hits":0},{"tokpos":3017,"hits":0},{"tokpos":3021,"hits":0},{"tokpos":3023,"hits":0},{"tokpos":3028,"hits":0},{"tokpos":3030,"hits":0},{"tokpos":3034,"hits":0},{"tokpos":3035,"hits":0},{"tokpos":3037,"hits":0},{"tokpos":3041,"hits":0},{"tokpos":3042,"hits":0},{"tokpos":3046,"hits":0},{"tokpos":3048,"hits":0},{"tokpos":3051,"hits":0},{"tokpos":3053,"hits":0},{"tokpos":3057,"hits":0},{"tokpos":3058,"hits":0},{"tokpos":3061,"hits":0},{"tokpos":3065,"hits":0},{"tokpos":3070,"hits":0},{"tokpos":3072,"hits":0},{"tokpos":3076,"hits":0},{"tokpos":3077,"hits":0},{"tokpos":3081,"hits":0},{"tokpos":3083,"hits":0},{"tokpos":3086,"hits":0},{"tokpos":3088,"hits":0},{"tokpos":3092,"hits":0},{"tokpos":3093,"hits":0},{"tokpos":3095,"hits":0},{"tokpos":3099,"hits":0},{"tokpos":3106,"hits":0},{"tokpos":3107,"hits":0},{"tokpos":3111,"hits":0},{"tokpos":3113,"hits":0},{"tokpos":3116,"hits":0},{"tokpos":3117,"hits":0},{"tokpos":3121,"hits":0},{"tokpos":3123,"hits":0},{"tokpos":3127,"hits":0},{"tokpos":3128,"hits":0},{"tokpos":3132,"hits":0},{"tokpos":3134,"hits":0},{"tokpos":3138,"hits":0},{"tokpos":3139,"hits":0},{"tokpos":3143,"hits":0},{"tokpos":3145,"hits":0},{"tokpos":3150,"hits":0},{"tokpos":3152,"hits":0},{"tokpos":3156,"hits":0},{"tokpos":3157,"hits":0},{"tokpos":3159,"hits":0},{"tokpos":3163,"hits":0},{"tokpos":3164,"hits":0},{"tokpos":3168,"hits":0},{"tokpos":3170,"hits":0},{"tokpos":3173,"hits":0},{"tokpos":3175,"hits":0},{"tokpos":3179,"hits":0},{"tokpos":3180,"hits":0},{"tokpos":3184,"hits":0},{"tokpos":3186,"hits":0},{"tokpos":3189,"hits":0},{"tokpos":3190,"hits":0},{"tokpos":3194,"hits":0},{"tokpos":3196,"hits":0},{"tokpos":3201,"hits":0},{"tokpos":3203,"hits":0},{"tokpos":3207,"hits":0},{"tokpos":3208,"hits":0},{"tokpos":3210,"hits":0},{"tokpos":3214,"hits":0},{"tokpos":3215,"hits":0},{"tokpos":3219,"hits":0},{"tokpos":3221,"hits":0},{"tokpos":3224,"hits":0},{"tokpos":3226,"hits":0},{"tokpos":3230,"hits":0},{"tokpos":3231,"hits":0},{"tokpos":3235,"hits":0},{"tokpos":3237,"hits":0},{"tokpos":3240,"hits":0},{"tokpos":3241,"hits":0},{"tokpos":3245,"hits":0},{"tokpos":3247,"hits":0},{"tokpos":3252,"hits":0},{"tokpos":3254,"hits":0},{"tokpos":3258,"hits":0},{"tokpos":3259,"hits":0},{"tokpos":3261,"hits":0},{"tokpos":3265,"hits":0},{"tokpos":3266,"hits":0},{"tokpos":3270,"hits":0},{"tokpos":3272,"hits":0},{"tokpos":3275,"hits":0},{"tokpos":3276,"hits":0},{"tokpos":3280,"hits":0},{"tokpos":3282,"hits":0},{"tokpos":3287,"hits":0},{"tokpos":3289,"hits":0},{"tokpos":3293,"hits":0},{"tokpos":3294,"hits":0},{"tokpos":3296,"hits":0},{"tokpos":3300,"hits":0},{"tokpos":3301,"hits":0},{"tokpos":3305,"hits":0},{"tokpos":3307,"hits":0},{"tokpos":3310,"hits":0},{"tokpos":3311,"hits":0},{"tokpos":3315,"hits":0},{"tokpos":3317,"hits":0},{"tokpos":3322,"hits":0},{"tokpos":3324,"hits":0},{"tokpos":3328,"hits":0},{"tokpos":3329,"hits":0},{"tokpos":3331,"hits":0},{"tokpos":3335,"hits":0},{"tokpos":3336,"hits":0},{"tokpos":3340,"hits":0},{"tokpos":3342,"hits":0},{"tokpos":3345,"hits":0},{"tokpos":3347,"hits":0},{"tokpos":3351,"hits":0},{"tokpos":3352,"hits":0},{"tokpos":3356,"hits":0},{"tokpos":3358,"hits":0},{"tokpos":3361,"hits":0},{"tokpos":3362,"hits":0},{"tokpos":3366,"hits":0},{"tokpos":3368,"hits":0},{"tokpos":3373,"hits":0},{"tokpos":3375,"hits":0},{"tokpos":3379,"hits":0},{"tokpos":3380,"hits":0},{"tokpos":3382,"hits":0},{"tokpos":3386,"hits":0},{"tokpos":3387,"hits":0},{"tokpos":3391,"hits":0},{"tokpos":3393,"hits":0},{"tokpos":3396,"hits":0},{"tokpos":3398,"hits":0},{"tokpos":3402,"hits":0},{"tokpos":3403,"hits":0},{"tokpos":3407,"hits":0},{"tokpos":3409,"hits":0},{"tokpos":3412,"hits":0},{"tokpos":3413,"hits":0},{"tokpos":3417,"hits":0},{"tokpos":3419,"hits":0},{"tokpos":3424,"hits":0},{"tokpos":3426,"hits":0},{"tokpos":3430,"hits":0},{"tokpos":3431,"hits":0},{"tokpos":3433,"hits":0},{"tokpos":3437,"hits":0},{"tokpos":3438,"hits":0},{"tokpos":3442,"hits":0},{"tokpos":3444,"hits":0},{"tokpos":3447,"hits":0},{"tokpos":3448,"hits":0},{"tokpos":3452,"hits":0},{"tokpos":3454,"hits":0},{"tokpos":3459,"hits":0},{"tokpos":3461,"hits":0},{"tokpos":3465,"hits":0},{"tokpos":3466,"hits":0},{"tokpos":3468,"hits":0},{"tokpos":3472,"hits":0},{"tokpos":3473,"hits":0},{"tokpos":3475,"hits":0},{"tokpos":3479,"hits":0},{"tokpos":3486,"hits":0},{"tokpos":3487,"hits":0},{"tokpos":3491,"hits":0},{"tokpos":3493,"hits":0},{"tokpos":3496,"hits":0},{"tokpos":3497,"hits":0},{"tokpos":3501,"hits":0},{"tokpos":3503,"hits":0},{"tokpos":3507,"hits":0},{"tokpos":3508,"hits":0},{"tokpos":3512,"hits":0},{"tokpos":3514,"hits":0},{"tokpos":3519,"hits":0},{"tokpos":3521,"hits":0},{"tokpos":3525,"hits":0},{"tokpos":3526,"hits":0},{"tokpos":3528,"hits":0},{"tokpos":3532,"hits":0},{"tokpos":3533,"hits":0},{"tokpos":3537,"hits":0},{"tokpos":3539,"hits":0},{"tokpos":3542,"hits":0},{"tokpos":3543,"hits":0},{"tokpos":3547,"hits":0},{"tokpos":3549,"hits":0},{"tokpos":3554,"hits":0},{"tokpos":3556,"hits":0},{"tokpos":3560,"hits":0},{"tokpos":3561,"hits":0},{"tokpos":3563,"hits":0},{"tokpos":3567,"hits":0},{"tokpos":3568,"hits":0},{"tokpos":3572,"hits":0},{"tokpos":3574,"hits":0},{"tokpos":3577,"hits":0},{"tokpos":3578,"hits":0},{"tokpos":3582,"hits":0},{"tokpos":3584,"hits":0},{"tokpos":3589,"hits":0},{"tokpos":3590,"hits":0},{"tokpos":3596,"hits":1},{"tokpos":3603,"hits":0},{"tokpos":3609,"hits":0},{"tokpos":3610,"hits":0},{"tokpos":3616,"hits":10281524},{"tokpos":3621,"hits":10281523},{"tokpos":3623,"hits":10281523},{"tokpos":3627,"hits":9679293},{"tokpos":3631,"hits":9679293},{"tokpos":3635,"hits":9679293},{"tokpos":3639,"hits":6278100},{"tokpos":3643,"hits":6278100},{"tokpos":3647,"hits":4003423},{"tokpos":3648,"hits":4003423},{"tokpos":3653,"hits":4003423},{"tokpos":3654,"hits":4003423},{"tokpos":3657,"hits":6278100},{"tokpos":3658,"hits":6278100},{"tokpos":3664,"hits":6278101},{"tokpos":3673,"hits":6278100},{"tokpos":3675,"hits":6278100},{"tokpos":3679,"hits":5800890},{"tokpos":3683,"hits":5800890},{"tokpos":3687,"hits":477210},{"tokpos":3688,"hits":477210},{"tokpos":3694,"hits":477210},{"tokpos":3702,"hits":477210},{"tokpos":3703,"hits":477210},{"tokpos":3707,"hits":5800890},{"tokpos":3709,"hits":5800890},{"tokpos":3713,"hits":124655},{"tokpos":3714,"hits":124655},{"tokpos":3720,"hits":124655},{"tokpos":3723,"hits":124655},{"tokpos":3727,"hits":124655},{"tokpos":3732,"hits":124655},{"tokpos":3734,"hits":124655},{"tokpos":3738,"hits":124655},{"tokpos":3739,"hits":124655},{"tokpos":3749,"hits":0},{"tokpos":3750,"hits":0},{"tokpos":3756,"hits":0},{"tokpos":3765,"hits":124655},{"tokpos":3766,"hits":124655},{"tokpos":3769,"hits":5676235},{"tokpos":3770,"hits":5676235},{"tokpos":3776,"hits":58042},{"tokpos":3783,"hits":58041},{"tokpos":3786,"hits":58041},{"tokpos":3790,"hits":58041},{"tokpos":3793,"hits":58041},{"tokpos":3795,"hits":2498594},{"tokpos":3799,"hits":2498594},{"tokpos":3800,"hits":2498594},{"tokpos":3803,"hits":2498594},{"tokpos":3807,"hits":2498594},{"tokpos":3811,"hits":2498594},{"tokpos":3813,"hits":2498594},{"tokpos":3817,"hits":2442514},{"tokpos":3821,"hits":2440553},{"tokpos":3825,"hits":2440553},{"tokpos":3829,"hits":58041},{"tokpos":3832,"hits":58041},{"tokpos":3838,"hits":58041},{"tokpos":3844,"hits":58041},{"tokpos":3845,"hits":58041},{"tokpos":3851,"hits":6201},{"tokpos":3858,"hits":6200},{"tokpos":3861,"hits":6200},{"tokpos":3865,"hits":6200},{"tokpos":3868,"hits":6200},{"tokpos":3870,"hits":6200},{"tokpos":3875,"hits":6200},{"tokpos":3879,"hits":6200},{"tokpos":3884,"hits":6200},{"tokpos":3886,"hits":1605322},{"tokpos":3890,"hits":1605322},{"tokpos":3891,"hits":1605322},{"tokpos":3895,"hits":1605322},{"tokpos":3901,"hits":1605322},{"tokpos":3905,"hits":1605322},{"tokpos":3907,"hits":1605322},{"tokpos":3911,"hits":9411},{"tokpos":3915,"hits":6200},{"tokpos":3917,"hits":1599122},{"tokpos":3919,"hits":1599122},{"tokpos":3921,"hits":78941},{"tokpos":3925,"hits":77171},{"tokpos":3929,"hits":76775},{"tokpos":3933,"hits":76775},{"tokpos":3937,"hits":1522347},{"tokpos":3946,"hits":6200},{"tokpos":3954,"hits":6200},{"tokpos":3955,"hits":6200},{"tokpos":3961,"hits":32914},{"tokpos":3965,"hits":32913},{"tokpos":3968,"hits":32913},{"tokpos":3974,"hits":32913},{"tokpos":3977,"hits":32913},{"tokpos":3981,"hits":32913},{"tokpos":3984,"hits":32913},{"tokpos":3988,"hits":32913},{"tokpos":3990,"hits":681881},{"tokpos":3994,"hits":681881},{"tokpos":3995,"hits":681881},{"tokpos":3998,"hits":681881},{"tokpos":4002,"hits":681881},{"tokpos":4006,"hits":681881},{"tokpos":4008,"hits":681881},{"tokpos":4012,"hits":32913},{"tokpos":4013,"hits":32913},{"tokpos":4019,"hits":32913},{"tokpos":4020,"hits":32913},{"tokpos":4023,"hits":648968},{"tokpos":4025,"hits":648968},{"tokpos":4029,"hits":22170},{"tokpos":4035,"hits":22170},{"tokpos":4038,"hits":648968},{"tokpos":4040,"hits":648968},{"tokpos":4044,"hits":648968},{"tokpos":4048,"hits":648968},{"tokpos":4052,"hits":648968},{"tokpos":4056,"hits":0},{"tokpos":4057,"hits":0},{"tokpos":4060,"hits":0},{"tokpos":4061,"hits":0},{"tokpos":4069,"hits":110733},{"tokpos":4073,"hits":110732},{"tokpos":4076,"hits":110732},{"tokpos":4082,"hits":110732},{"tokpos":4085,"hits":110732},{"tokpos":4089,"hits":110732},{"tokpos":4092,"hits":110732},{"tokpos":4096,"hits":110732},{"tokpos":4098,"hits":1796727},{"tokpos":4102,"hits":1796727},{"tokpos":4103,"hits":1796727},{"tokpos":4106,"hits":1796727},{"tokpos":4110,"hits":1796727},{"tokpos":4114,"hits":1796727},{"tokpos":4116,"hits":1796727},{"tokpos":4120,"hits":110732},{"tokpos":4121,"hits":110732},{"tokpos":4127,"hits":110732},{"tokpos":4128,"hits":110732},{"tokpos":4131,"hits":1685995},{"tokpos":4133,"hits":1685995},{"tokpos":4137,"hits":117433},{"tokpos":4143,"hits":117433},{"tokpos":4146,"hits":1685995},{"tokpos":4148,"hits":1685995},{"tokpos":4152,"hits":1685995},{"tokpos":4156,"hits":1685995},{"tokpos":4160,"hits":1685995},{"tokpos":4164,"hits":0},{"tokpos":4165,"hits":0},{"tokpos":4168,"hits":0},{"tokpos":4169,"hits":0},{"tokpos":4177,"hits":139604},{"tokpos":4182,"hits":139603},{"tokpos":4185,"hits":139603},{"tokpos":4189,"hits":139603},{"tokpos":4192,"hits":139603},{"tokpos":4196,"hits":139603},{"tokpos":4199,"hits":139603},{"tokpos":4201,"hits":139603},{"tokpos":4205,"hits":1626},{"tokpos":4206,"hits":1626},{"tokpos":4208,"hits":1626},{"tokpos":4212,"hits":1626},{"tokpos":4217,"hits":1626},{"tokpos":4222,"hits":0},{"tokpos":4223,"hits":0},{"tokpos":4227,"hits":137977},{"tokpos":4229,"hits":137977},{"tokpos":4233,"hits":221},{"tokpos":4234,"hits":221},{"tokpos":4236,"hits":221},{"tokpos":4240,"hits":221},{"tokpos":4244,"hits":221},{"tokpos":4250,"hits":221},{"tokpos":4254,"hits":221},{"tokpos":4258,"hits":221},{"tokpos":4264,"hits":221},{"tokpos":4269,"hits":0},{"tokpos":4270,"hits":0},{"tokpos":4274,"hits":137756},{"tokpos":4276,"hits":137756},{"tokpos":4280,"hits":1858},{"tokpos":4281,"hits":1858},{"tokpos":4283,"hits":1858},{"tokpos":4287,"hits":1858},{"tokpos":4294,"hits":1858},{"tokpos":4298,"hits":139603},{"tokpos":4299,"hits":139603},{"tokpos":4307,"hits":1627},{"tokpos":4312,"hits":1626},{"tokpos":4315,"hits":1626},{"tokpos":4319,"hits":1626},{"tokpos":4320,"hits":1626},{"tokpos":4324,"hits":1626},{"tokpos":4328,"hits":1626},{"tokpos":4332,"hits":1626},{"tokpos":4336,"hits":1626},{"tokpos":4340,"hits":1626},{"tokpos":4346,"hits":1626},{"tokpos":4350,"hits":1626},{"tokpos":4354,"hits":1626},{"tokpos":4360,"hits":1626},{"tokpos":4364,"hits":1626},{"tokpos":4368,"hits":1626},{"tokpos":4378,"hits":23278},{"tokpos":4383,"hits":23277},{"tokpos":4384,"hits":23277},{"tokpos":4385,"hits":23277},{"tokpos":4386,"hits":23277},{"tokpos":4390,"hits":20574},{"tokpos":4395,"hits":9377},{"tokpos":4396,"hits":9377},{"tokpos":4400,"hits":1017},{"tokpos":4405,"hits":8360},{"tokpos":4406,"hits":8360},{"tokpos":4410,"hits":5406},{"tokpos":4420,"hits":93149},{"tokpos":4429,"hits":93148},{"tokpos":4431,"hits":93148},{"tokpos":4435,"hits":37026},{"tokpos":4439,"hits":37026},{"tokpos":4441,"hits":37026},{"tokpos":4443,"hits":37026},{"tokpos":4447,"hits":56122},{"tokpos":4449,"hits":56122},{"tokpos":4453,"hits":56103},{"tokpos":4457,"hits":56103},{"tokpos":4461,"hits":56103},{"tokpos":4465,"hits":56103},{"tokpos":4470,"hits":56103},{"tokpos":4474,"hits":56103},{"tokpos":4478,"hits":19},{"tokpos":4480,"hits":19},{"tokpos":4484,"hits":19},{"tokpos":4488,"hits":19},{"tokpos":4490,"hits":19},{"tokpos":4492,"hits":19},{"tokpos":4496,"hits":0},{"tokpos":4497,"hits":0},{"tokpos":4499,"hits":93148},{"tokpos":4500,"hits":93148},{"tokpos":4506,"hits":37027},{"tokpos":4515,"hits":37026},{"tokpos":4518,"hits":37026},{"tokpos":4522,"hits":37026},{"tokpos":4527,"hits":37026},{"tokpos":4529,"hits":37026},{"tokpos":4533,"hits":37026},{"tokpos":4537,"hits":3655},{"tokpos":4538,"hits":3655},{"tokpos":4542,"hits":3655},{"tokpos":4549,"hits":33371},{"tokpos":4550,"hits":33371},{"tokpos":4554,"hits":33371},{"tokpos":4556,"hits":33371},{"tokpos":4560,"hits":33371},{"tokpos":4564,"hits":37026},{"tokpos":4565,"hits":37026},{"tokpos":4571,"hits":89475},{"tokpos":4580,"hits":89474},{"tokpos":4582,"hits":115205},{"tokpos":4590,"hits":25731},{"tokpos":4596,"hits":25731},{"tokpos":4600,"hits":89474},{"tokpos":4601,"hits":89474},{"tokpos":4605,"hits":89474},{"tokpos":4607,"hits":89474},{"tokpos":4609,"hits":89474},{"tokpos":4616,"hits":89494},{"tokpos":4625,"hits":89493},{"tokpos":4627,"hits":89493},{"tokpos":4631,"hits":2312},{"tokpos":4632,"hits":2312},{"tokpos":4638,"hits":2312},{"tokpos":4642,"hits":2312},{"tokpos":4644,"hits":6043},{"tokpos":4652,"hits":3731},{"tokpos":4658,"hits":3731},{"tokpos":4663,"hits":89493},{"tokpos":4665,"hits":89493},{"tokpos":4669,"hits":89256},{"tokpos":4673,"hits":265},{"tokpos":4674,"hits":265},{"tokpos":4680,"hits":265},{"tokpos":4684,"hits":265},{"tokpos":4686,"hits":265},{"tokpos":4690,"hits":257},{"tokpos":4694,"hits":40},{"tokpos":4700,"hits":40},{"tokpos":4704,"hits":265},{"tokpos":4706,"hits":265},{"tokpos":4714,"hits":265},{"tokpos":4720,"hits":265},{"tokpos":4725,"hits":0},{"tokpos":4726,"hits":0},{"tokpos":4734,"hits":265},{"tokpos":4736,"hits":294},{"tokpos":4744,"hits":29},{"tokpos":4750,"hits":29},{"tokpos":4755,"hits":89493},{"tokpos":4761,"hits":89493},{"tokpos":4767,"hits":89493},{"tokpos":4768,"hits":89493},{"tokpos":4774,"hits":1},{"tokpos":4783,"hits":0},{"tokpos":4785,"hits":0},{"tokpos":4793,"hits":0},{"tokpos":4799,"hits":0},{"tokpos":4803,"hits":0},{"tokpos":4804,"hits":0},{"tokpos":4810,"hits":3656},{"tokpos":4815,"hits":3655},{"tokpos":4818,"hits":3655},{"tokpos":4822,"hits":3655},{"tokpos":4825,"hits":3655},{"tokpos":4829,"hits":3655},{"tokpos":4831,"hits":16331},{"tokpos":4835,"hits":16331},{"tokpos":4839,"hits":16331},{"tokpos":4843,"hits":16331},{"tokpos":4847,"hits":12676},{"tokpos":4850,"hits":3655},{"tokpos":4860,"hits":6108},{"tokpos":4864,"hits":6107},{"tokpos":4869,"hits":6107},{"tokpos":4875,"hits":6107},{"tokpos":4881,"hits":6107},{"tokpos":4882,"hits":6107},{"tokpos":4888,"hits":10756},{"tokpos":4892,"hits":10755},{"tokpos":4895,"hits":10755},{"tokpos":4899,"hits":10755},{"tokpos":4902,"hits":10755},{"tokpos":4906,"hits":10755},{"tokpos":4908,"hits":72929},{"tokpos":4914,"hits":72929},{"tokpos":4915,"hits":72929},{"tokpos":4918,"hits":72929},{"tokpos":4922,"hits":72929},{"tokpos":4928,"hits":72929},{"tokpos":4930,"hits":72929},{"tokpos":4934,"hits":7393},{"tokpos":4935,"hits":7393},{"tokpos":4938,"hits":7393},{"tokpos":4942,"hits":7393},{"tokpos":4948,"hits":7393},{"tokpos":4950,"hits":7393},{"tokpos":4954,"hits":7393},{"tokpos":4958,"hits":7393},{"tokpos":4962,"hits":7393},{"tokpos":4966,"hits":0},{"tokpos":4967,"hits":0},{"tokpos":4968,"hits":0},{"tokpos":4971,"hits":0},{"tokpos":4981,"hits":65536},{"tokpos":4983,"hits":65536},{"tokpos":4987,"hits":4648},{"tokpos":4988,"hits":4648},{"tokpos":4996,"hits":60888},{"tokpos":4998,"hits":60888},{"tokpos":5002,"hits":56240},{"tokpos":5006,"hits":10755},{"tokpos":5007,"hits":10755},{"tokpos":5011,"hits":50133},{"tokpos":5013,"hits":50133},{"tokpos":5017,"hits":3522},{"tokpos":5018,"hits":3522},{"tokpos":5026,"hits":46611},{"tokpos":5028,"hits":46611},{"tokpos":5032,"hits":46611},{"tokpos":5036,"hits":46611},{"tokpos":5040,"hits":46611},{"tokpos":5044,"hits":0},{"tokpos":5045,"hits":0},{"tokpos":5046,"hits":0},{"tokpos":5049,"hits":0},{"tokpos":5058,"hits":0},{"tokpos":5059,"hits":0},{"tokpos":5062,"hits":0},{"tokpos":5069,"hits":3523},{"tokpos":5073,"hits":3522},{"tokpos":5076,"hits":3522},{"tokpos":5080,"hits":3522},{"tokpos":5083,"hits":3522},{"tokpos":5087,"hits":3522},{"tokpos":5090,"hits":3522},{"tokpos":5094,"hits":3522},{"tokpos":5096,"hits":532343},{"tokpos":5100,"hits":532343},{"tokpos":5101,"hits":532343},{"tokpos":5104,"hits":532343},{"tokpos":5108,"hits":532343},{"tokpos":5112,"hits":532343},{"tokpos":5114,"hits":532343},{"tokpos":5118,"hits":3522},{"tokpos":5119,"hits":3522},{"tokpos":5125,"hits":3522},{"tokpos":5128,"hits":528821},{"tokpos":5130,"hits":528821},{"tokpos":5134,"hits":528821},{"tokpos":5138,"hits":528821},{"tokpos":5142,"hits":528821},{"tokpos":5146,"hits":0},{"tokpos":5147,"hits":0},{"tokpos":5148,"hits":0},{"tokpos":5153,"hits":528821},{"tokpos":5155,"hits":528821},{"tokpos":5159,"hits":107172},{"tokpos":5160,"hits":107172},{"tokpos":5163,"hits":107172},{"tokpos":5167,"hits":107172},{"tokpos":5171,"hits":107172},{"tokpos":5173,"hits":107172},{"tokpos":5177,"hits":107172},{"tokpos":5181,"hits":107172},{"tokpos":5185,"hits":107172},{"tokpos":5189,"hits":0},{"tokpos":5190,"hits":0},{"tokpos":5191,"hits":0},{"tokpos":5194,"hits":0},{"tokpos":5202,"hits":0},{"tokpos":5203,"hits":0},{"tokpos":5206,"hits":0},{"tokpos":5213,"hits":6108},{"tokpos":5217,"hits":6107},{"tokpos":5225,"hits":6107},{"tokpos":5232,"hits":2439135},{"tokpos":5237,"hits":2439134},{"tokpos":5240,"hits":2439134},{"tokpos":5244,"hits":2439134},{"tokpos":5247,"hits":2439134},{"tokpos":5249,"hits":2439134},{"tokpos":5253,"hits":236793},{"tokpos":5254,"hits":236793},{"tokpos":5256,"hits":2202341},{"tokpos":5264,"hits":2202341},{"tokpos":5267,"hits":2202341},{"tokpos":5268,"hits":2202341},{"tokpos":5274,"hits":2439135},{"tokpos":5279,"hits":2439134},{"tokpos":5281,"hits":2439134},{"tokpos":5282,"hits":2439134},{"tokpos":5286,"hits":1950650},{"tokpos":5291,"hits":488484},{"tokpos":5292,"hits":488484},{"tokpos":5296,"hits":242164},{"tokpos":5301,"hits":293008},{"tokpos":5305,"hits":283481},{"tokpos":5309,"hits":2202341},{"tokpos":5310,"hits":2202341},{"tokpos":5311,"hits":2202341},{"tokpos":5315,"hits":236793},{"tokpos":5317,"hits":236793},{"tokpos":5321,"hits":0},{"tokpos":5322,"hits":0},{"tokpos":5325,"hits":0},{"tokpos":5329,"hits":0},{"tokpos":5331,"hits":0},{"tokpos":5337,"hits":0},{"tokpos":5344,"hits":0},{"tokpos":5348,"hits":0},{"tokpos":5353,"hits":0},{"tokpos":5354,"hits":0},{"tokpos":5355,"hits":0},{"tokpos":5359,"hits":0},{"tokpos":5360,"hits":0},{"tokpos":5361,"hits":0},{"tokpos":5372,"hits":236793},{"tokpos":5373,"hits":236793},{"tokpos":5374,"hits":236793},{"tokpos":5381,"hits":2208449},{"tokpos":5386,"hits":2208448},{"tokpos":5389,"hits":2208448},{"tokpos":5393,"hits":2208448},{"tokpos":5396,"hits":2208448},{"tokpos":5400,"hits":2208448},{"tokpos":5403,"hits":2208448},{"tokpos":5409,"hits":2208448},{"tokpos":5411,"hits":11205661},{"tokpos":5415,"hits":11205661},{"tokpos":5416,"hits":11205661},{"tokpos":5419,"hits":11205661},{"tokpos":5423,"hits":11205661},{"tokpos":5426,"hits":11205661},{"tokpos":5428,"hits":11205661},{"tokpos":5429,"hits":11205661},{"tokpos":5433,"hits":8167495},{"tokpos":5438,"hits":3072777},{"tokpos":5439,"hits":3072777},{"tokpos":5443,"hits":870167},{"tokpos":5448,"hits":2421513},{"tokpos":5449,"hits":2421513},{"tokpos":5453,"hits":722696},{"tokpos":5458,"hits":2272960},{"tokpos":5462,"hits":2272812},{"tokpos":5466,"hits":8997213},{"tokpos":5467,"hits":8997213},{"tokpos":5472,"hits":2208448},{"tokpos":5474,"hits":2208448},{"tokpos":5478,"hits":0},{"tokpos":5482,"hits":0},{"tokpos":5489,"hits":0},{"tokpos":5493,"hits":0},{"tokpos":5498,"hits":0},{"tokpos":5499,"hits":0},{"tokpos":5505,"hits":2208448},{"tokpos":5506,"hits":2208448},{"tokpos":5512,"hits":2208448},{"tokpos":5516,"hits":2208448},{"tokpos":5517,"hits":2208448},{"tokpos":5523,"hits":2188365},{"tokpos":5527,"hits":2188364},{"tokpos":5528,"hits":2188364},{"tokpos":5532,"hits":1451012},{"tokpos":5533,"hits":1451012},{"tokpos":5543,"hits":1451012},{"tokpos":5547,"hits":1451012},{"tokpos":5557,"hits":20086764},{"tokpos":5561,"hits":20086763},{"tokpos":5563,"hits":20086763},{"tokpos":5570,"hits":3289124},{"tokpos":5571,"hits":3289124},{"tokpos":5581,"hits":3289124},{"tokpos":5586,"hits":16797639},{"tokpos":5587,"hits":16797639},{"tokpos":5595,"hits":1},{"tokpos":5599,"hits":0},{"tokpos":5600,"hits":0},{"tokpos":5618,"hits":0},{"tokpos":5629,"hits":1},{"tokpos":5634,"hits":0},{"tokpos":5635,"hits":0},{"tokpos":5644,"hits":0},{"tokpos":5649,"hits":0},{"tokpos":5653,"hits":0},{"tokpos":5656,"hits":0},{"tokpos":5677,"hits":0},{"tokpos":5690,"hits":0},{"tokpos":5696,"hits":0},{"tokpos":5709,"hits":0},{"tokpos":5713,"hits":0},{"tokpos":5726,"hits":1},{"tokpos":5729,"hits":53},{"tokpos":5734,"hits":52},{"tokpos":5741,"hits":52},{"tokpos":5746,"hits":1},{"tokpos":5753,"hits":53},{"tokpos":5757,"hits":52},{"tokpos":5765,"hits":52},{"tokpos":5769,"hits":52},{"tokpos":5771,"hits":52},{"tokpos":5773,"hits":52},{"tokpos":5775,"hits":52},{"tokpos":5779,"hits":51},{"tokpos":5781,"hits":51},{"tokpos":5793,"hits":0},{"tokpos":5794,"hits":0},{"tokpos":5808,"hits":190993},{"tokpos":5819,"hits":190992},{"tokpos":5821,"hits":671444},{"tokpos":5828,"hits":671444},{"tokpos":5831,"hits":671393},{"tokpos":5835,"hits":671393},{"tokpos":5837,"hits":671393},{"tokpos":5839,"hits":671393},{"tokpos":5841,"hits":671393},{"tokpos":5843,"hits":671393},{"tokpos":5846,"hits":480452},{"tokpos":5851,"hits":802432},{"tokpos":5864,"hits":802431},{"tokpos":5867,"hits":802431},{"tokpos":5871,"hits":802431},{"tokpos":5873,"hits":802431},{"tokpos":5877,"hits":802431},{"tokpos":5880,"hits":497776},{"tokpos":5881,"hits":497776},{"tokpos":5882,"hits":497776},{"tokpos":5886,"hits":497776},{"tokpos":5888,"hits":497776},{"tokpos":5890,"hits":497776},{"tokpos":5892,"hits":497776},{"tokpos":5896,"hits":304655},{"tokpos":5899,"hits":304655},{"tokpos":5905,"hits":304655},{"tokpos":5907,"hits":304655},{"tokpos":5911,"hits":111164},{"tokpos":5912,"hits":111164},{"tokpos":5918,"hits":111164},{"tokpos":5922,"hits":111164},{"tokpos":5924,"hits":111164},{"tokpos":5926,"hits":111164},{"tokpos":5928,"hits":111164},{"tokpos":5931,"hits":111163},{"tokpos":5932,"hits":111163},{"tokpos":5935,"hits":193491},{"tokpos":5937,"hits":193491},{"tokpos":5941,"hits":3176},{"tokpos":5942,"hits":3176},{"tokpos":5948,"hits":3176},{"tokpos":5949,"hits":3176},{"tokpos":5952,"hits":190315},{"tokpos":5954,"hits":190315},{"tokpos":5958,"hits":188742},{"tokpos":5962,"hits":188563},{"tokpos":5966,"hits":188563},{"tokpos":5970,"hits":188417},{"tokpos":5974,"hits":188300},{"tokpos":5978,"hits":2092},{"tokpos":5979,"hits":2092},{"tokpos":5985,"hits":2092},{"tokpos":5986,"hits":2092},{"tokpos":5989,"hits":188223},{"tokpos":5991,"hits":188223},{"tokpos":5997,"hits":159},{"tokpos":5998,"hits":159},{"tokpos":6004,"hits":159},{"tokpos":6005,"hits":159},{"tokpos":6008,"hits":188064},{"tokpos":6010,"hits":188064},{"tokpos":6013,"hits":0},{"tokpos":6014,"hits":0},{"tokpos":6016,"hits":188064},{"tokpos":6017,"hits":188064},{"tokpos":6023,"hits":497777},{"tokpos":6034,"hits":497776},{"tokpos":6037,"hits":497776},{"tokpos":6041,"hits":497776},{"tokpos":6044,"hits":497776},{"tokpos":6052,"hits":497776},{"tokpos":6054,"hits":497776},{"tokpos":6058,"hits":94416},{"tokpos":6066,"hits":92593},{"tokpos":6073,"hits":405183},{"tokpos":6075,"hits":405183},{"tokpos":6079,"hits":91546},{"tokpos":6087,"hits":88461},{"tokpos":6091,"hits":88461},{"tokpos":6093,"hits":88461},{"tokpos":6095,"hits":88461},{"tokpos":6097,"hits":88461},{"tokpos":6101,"hits":316722},{"tokpos":6103,"hits":316722},{"tokpos":6107,"hits":12299},{"tokpos":6115,"hits":227},{"tokpos":6119,"hits":227},{"tokpos":6121,"hits":227},{"tokpos":6123,"hits":227},{"tokpos":6125,"hits":227},{"tokpos":6129,"hits":316495},{"tokpos":6131,"hits":316495},{"tokpos":6135,"hits":3917},{"tokpos":6143,"hits":2637},{"tokpos":6147,"hits":2637},{"tokpos":6149,"hits":2637},{"tokpos":6151,"hits":2637},{"tokpos":6153,"hits":2637},{"tokpos":6157,"hits":313858},{"tokpos":6159,"hits":313858},{"tokpos":6163,"hits":25071},{"tokpos":6171,"hits":10555},{"tokpos":6175,"hits":10555},{"tokpos":6177,"hits":10555},{"tokpos":6179,"hits":10555},{"tokpos":6181,"hits":10555},{"tokpos":6185,"hits":303303},{"tokpos":6187,"hits":303303},{"tokpos":6191,"hits":53534},{"tokpos":6199,"hits":737},{"tokpos":6206,"hits":302566},{"tokpos":6208,"hits":302566},{"tokpos":6212,"hits":6069},{"tokpos":6220,"hits":865},{"tokpos":6224,"hits":865},{"tokpos":6226,"hits":865},{"tokpos":6228,"hits":865},{"tokpos":6230,"hits":865},{"tokpos":6234,"hits":301701},{"tokpos":6236,"hits":301701},{"tokpos":6240,"hits":52797},{"tokpos":6248,"hits":2046},{"tokpos":6252,"hits":2046},{"tokpos":6254,"hits":2046},{"tokpos":6256,"hits":2046},{"tokpos":6258,"hits":2046},{"tokpos":6262,"hits":299655},{"tokpos":6264,"hits":299655},{"tokpos":6268,"hits":12072},{"tokpos":6276,"hits":0},{"tokpos":6283,"hits":299655},{"tokpos":6285,"hits":299655},{"tokpos":6289,"hits":1280},{"tokpos":6297,"hits":19},{"tokpos":6301,"hits":19},{"tokpos":6303,"hits":19},{"tokpos":6305,"hits":19},{"tokpos":6307,"hits":19},{"tokpos":6311,"hits":299636},{"tokpos":6313,"hits":299636},{"tokpos":6317,"hits":14516},{"tokpos":6325,"hits":10713},{"tokpos":6332,"hits":288923},{"tokpos":6334,"hits":288923},{"tokpos":6338,"hits":15072},{"tokpos":6346,"hits":681},{"tokpos":6350,"hits":681},{"tokpos":6352,"hits":681},{"tokpos":6354,"hits":681},{"tokpos":6356,"hits":681},{"tokpos":6360,"hits":288242},{"tokpos":6362,"hits":288242},{"tokpos":6366,"hits":10090},{"tokpos":6374,"hits":3096},{"tokpos":6378,"hits":3096},{"tokpos":6380,"hits":3096},{"tokpos":6382,"hits":3096},{"tokpos":6384,"hits":3096},{"tokpos":6388,"hits":285146},{"tokpos":6390,"hits":285146},{"tokpos":6394,"hits":67795},{"tokpos":6402,"hits":60056},{"tokpos":6406,"hits":60056},{"tokpos":6408,"hits":60056},{"tokpos":6410,"hits":60056},{"tokpos":6414,"hits":225090},{"tokpos":6416,"hits":225090},{"tokpos":6417,"hits":225090},{"tokpos":6421,"hits":14391},{"tokpos":6430,"hits":222640},{"tokpos":6431,"hits":222640},{"tokpos":6435,"hits":12072},{"tokpos":6444,"hits":2874},{"tokpos":6445,"hits":2874},{"tokpos":6448,"hits":222216},{"tokpos":6452,"hits":222216},{"tokpos":6454,"hits":222216},{"tokpos":6456,"hits":222216},{"tokpos":6458,"hits":222216},{"tokpos":6461,"hits":494899},{"tokpos":6462,"hits":494899},{"tokpos":6468,"hits":91983},{"tokpos":6472,"hits":91982},{"tokpos":6475,"hits":91982},{"tokpos":6479,"hits":91982},{"tokpos":6483,"hits":91982},{"tokpos":6485,"hits":91982},{"tokpos":6488,"hits":91982},{"tokpos":6494,"hits":91982},{"tokpos":6498,"hits":91982},{"tokpos":6500,"hits":91982},{"tokpos":6507,"hits":92594},{"tokpos":6511,"hits":92593},{"tokpos":6514,"hits":92593},{"tokpos":6518,"hits":92593},{"tokpos":6524,"hits":92593},{"tokpos":6525,"hits":122582},{"tokpos":6526,"hits":122582},{"tokpos":6528,"hits":122582},{"tokpos":6534,"hits":0},{"tokpos":6535,"hits":0},{"tokpos":6537,"hits":122582},{"tokpos":6541,"hits":122582},{"tokpos":6544,"hits":122582},{"tokpos":6546,"hits":122582},{"tokpos":6550,"hits":122582},{"tokpos":6553,"hits":112114},{"tokpos":6554,"hits":112114},{"tokpos":6558,"hits":112114},{"tokpos":6565,"hits":122582},{"tokpos":6569,"hits":122582},{"tokpos":6573,"hits":92593},{"tokpos":6579,"hits":92593},{"tokpos":6580,"hits":92593},{"tokpos":6586,"hits":7480},{"tokpos":6590,"hits":7479},{"tokpos":6593,"hits":7479},{"tokpos":6597,"hits":7479},{"tokpos":6603,"hits":7479},{"tokpos":6604,"hits":11025},{"tokpos":6605,"hits":11025},{"tokpos":6607,"hits":11025},{"tokpos":6613,"hits":0},{"tokpos":6614,"hits":0},{"tokpos":6616,"hits":11025},{"tokpos":6620,"hits":11025},{"tokpos":6623,"hits":11025},{"tokpos":6625,"hits":11025},{"tokpos":6629,"hits":11025},{"tokpos":6632,"hits":8339},{"tokpos":6633,"hits":8339},{"tokpos":6637,"hits":8339},{"tokpos":6644,"hits":11025},{"tokpos":6648,"hits":11025},{"tokpos":6656,"hits":88462},{"tokpos":6667,"hits":88461},{"tokpos":6675,"hits":88461},{"tokpos":6681,"hits":88461},{"tokpos":6685,"hits":88461},{"tokpos":6687,"hits":88461},{"tokpos":6689,"hits":88461},{"tokpos":6691,"hits":88461},{"tokpos":6694,"hits":88460},{"tokpos":6698,"hits":88460},{"tokpos":6700,"hits":88460},{"tokpos":6702,"hits":88460},{"tokpos":6704,"hits":88460},{"tokpos":6707,"hits":88460},{"tokpos":6708,"hits":88460},{"tokpos":6714,"hits":88461},{"tokpos":6725,"hits":88460},{"tokpos":6728,"hits":88460},{"tokpos":6732,"hits":88460},{"tokpos":6734,"hits":88460},{"tokpos":6742,"hits":29029},{"tokpos":6743,"hits":29029},{"tokpos":6749,"hits":29029},{"tokpos":6753,"hits":29029},{"tokpos":6755,"hits":29029},{"tokpos":6757,"hits":29029},{"tokpos":6759,"hits":29029},{"tokpos":6767,"hits":228},{"tokpos":6778,"hits":227},{"tokpos":6781,"hits":227},{"tokpos":6785,"hits":227},{"tokpos":6791,"hits":227},{"tokpos":6795,"hits":227},{"tokpos":6797,"hits":227},{"tokpos":6799,"hits":227},{"tokpos":6801,"hits":227},{"tokpos":6804,"hits":227},{"tokpos":6808,"hits":227},{"tokpos":6810,"hits":227},{"tokpos":6813,"hits":227},{"tokpos":6817,"hits":227},{"tokpos":6819,"hits":227},{"tokpos":6822,"hits":227},{"tokpos":6828,"hits":227},{"tokpos":6832,"hits":227},{"tokpos":6834,"hits":227},{"tokpos":6837,"hits":227},{"tokpos":6847,"hits":2638},{"tokpos":6858,"hits":2637},{"tokpos":6866,"hits":2637},{"tokpos":6872,"hits":2637},{"tokpos":6876,"hits":2637},{"tokpos":6878,"hits":2637},{"tokpos":6880,"hits":2637},{"tokpos":6882,"hits":2637},{"tokpos":6889,"hits":10556},{"tokpos":6900,"hits":10555},{"tokpos":6903,"hits":10555},{"tokpos":6907,"hits":10555},{"tokpos":6913,"hits":10555},{"tokpos":6917,"hits":10555},{"tokpos":6919,"hits":10555},{"tokpos":6922,"hits":10555},{"tokpos":6924,"hits":10555},{"tokpos":6928,"hits":10555},{"tokpos":6931,"hits":488},{"tokpos":6938,"hits":10067},{"tokpos":6939,"hits":10067},{"tokpos":6941,"hits":10067},{"tokpos":6945,"hits":10067},{"tokpos":6948,"hits":7491},{"tokpos":6952,"hits":7491},{"tokpos":6955,"hits":7479},{"tokpos":6962,"hits":2588},{"tokpos":6968,"hits":10067},{"tokpos":6970,"hits":10067},{"tokpos":6974,"hits":10067},{"tokpos":6977,"hits":7598},{"tokpos":6984,"hits":2469},{"tokpos":6991,"hits":10555},{"tokpos":6995,"hits":10555},{"tokpos":6997,"hits":10555},{"tokpos":7000,"hits":10555},{"tokpos":7004,"hits":10555},{"tokpos":7006,"hits":10555},{"tokpos":7008,"hits":10555},{"tokpos":7010,"hits":10555},{"tokpos":7017,"hits":8087},{"tokpos":7021,"hits":8086},{"tokpos":7027,"hits":8086},{"tokpos":7033,"hits":8086},{"tokpos":7035,"hits":8086},{"tokpos":7038,"hits":8086},{"tokpos":7048,"hits":2470},{"tokpos":7052,"hits":2469},{"tokpos":7058,"hits":2469},{"tokpos":7060,"hits":2469},{"tokpos":7063,"hits":2469},{"tokpos":7073,"hits":682},{"tokpos":7084,"hits":681},{"tokpos":7086,"hits":681},{"tokpos":7089,"hits":0},{"tokpos":7090,"hits":0},{"tokpos":7100,"hits":681},{"tokpos":7103,"hits":681},{"tokpos":7107,"hits":681},{"tokpos":7113,"hits":681},{"tokpos":7115,"hits":681},{"tokpos":7120,"hits":560},{"tokpos":7124,"hits":560},{"tokpos":7127,"hits":12},{"tokpos":7128,"hits":12},{"tokpos":7132,"hits":12},{"tokpos":7136,"hits":681},{"tokpos":7146,"hits":3097},{"tokpos":7157,"hits":3096},{"tokpos":7160,"hits":3096},{"tokpos":7164,"hits":3096},{"tokpos":7170,"hits":3096},{"tokpos":7173,"hits":3096},{"tokpos":7177,"hits":2977},{"tokpos":7182,"hits":2977},{"tokpos":7185,"hits":3096},{"tokpos":7187,"hits":3096},{"tokpos":7189,"hits":2909},{"tokpos":7190,"hits":2909},{"tokpos":7192,"hits":2909},{"tokpos":7195,"hits":1507},{"tokpos":7198,"hits":0},{"tokpos":7199,"hits":0},{"tokpos":7200,"hits":0},{"tokpos":7211,"hits":187},{"tokpos":7212,"hits":187},{"tokpos":7216,"hits":187},{"tokpos":7220,"hits":3096},{"tokpos":7230,"hits":200},{"tokpos":7235,"hits":199},{"tokpos":7238,"hits":199},{"tokpos":7242,"hits":199},{"tokpos":7245,"hits":199},{"tokpos":7251,"hits":199},{"tokpos":7253,"hits":199},{"tokpos":7257,"hits":199},{"tokpos":7262,"hits":199},{"tokpos":7263,"hits":199},{"tokpos":7271,"hits":0},{"tokpos":7272,"hits":0},{"tokpos":7273,"hits":0},{"tokpos":7290,"hits":60057},{"tokpos":7299,"hits":60056},{"tokpos":7301,"hits":60056},{"tokpos":7304,"hits":0},{"tokpos":7305,"hits":0},{"tokpos":7313,"hits":0},{"tokpos":7316,"hits":60056},{"tokpos":7319,"hits":60056},{"tokpos":7323,"hits":60056},{"tokpos":7329,"hits":60056},{"tokpos":7331,"hits":60056},{"tokpos":7335,"hits":513},{"tokpos":7342,"hits":59543},{"tokpos":7343,"hits":59543},{"tokpos":7349,"hits":59543},{"tokpos":7360,"hits":738},{"tokpos":7364,"hits":737},{"tokpos":7367,"hits":737},{"tokpos":7371,"hits":737},{"tokpos":7377,"hits":737},{"tokpos":7379,"hits":737},{"tokpos":7383,"hits":0},{"tokpos":7390,"hits":737},{"tokpos":7391,"hits":737},{"tokpos":7397,"hits":737},{"tokpos":7408,"hits":866},{"tokpos":7419,"hits":865},{"tokpos":7422,"hits":865},{"tokpos":7426,"hits":865},{"tokpos":7432,"hits":865},{"tokpos":7438,"hits":865},{"tokpos":7442,"hits":865},{"tokpos":7444,"hits":865},{"tokpos":7447,"hits":865},{"tokpos":7451,"hits":865},{"tokpos":7453,"hits":865},{"tokpos":7455,"hits":865},{"tokpos":7457,"hits":865},{"tokpos":7460,"hits":865},{"tokpos":7464,"hits":865},{"tokpos":7466,"hits":865},{"tokpos":7473,"hits":866},{"tokpos":7484,"hits":865},{"tokpos":7488,"hits":865},{"tokpos":7490,"hits":865},{"tokpos":7492,"hits":865},{"tokpos":7494,"hits":865},{"tokpos":7497,"hits":865},{"tokpos":7499,"hits":865},{"tokpos":7505,"hits":865},{"tokpos":7508,"hits":425},{"tokpos":7509,"hits":425},{"tokpos":7513,"hits":425},{"tokpos":7515,"hits":425},{"tokpos":7517,"hits":425},{"tokpos":7519,"hits":425},{"tokpos":7522,"hits":425},{"tokpos":7526,"hits":425},{"tokpos":7528,"hits":425},{"tokpos":7530,"hits":425},{"tokpos":7532,"hits":425},{"tokpos":7540,"hits":1291},{"tokpos":7551,"hits":1290},{"tokpos":7553,"hits":4604},{"tokpos":7559,"hits":4604},{"tokpos":7562,"hits":3314},{"tokpos":7563,"hits":3314},{"tokpos":7567,"hits":3314},{"tokpos":7569,"hits":3314},{"tokpos":7571,"hits":3314},{"tokpos":7573,"hits":3314},{"tokpos":7581,"hits":3315},{"tokpos":7592,"hits":3314},{"tokpos":7598,"hits":3314},{"tokpos":7604,"hits":3314},{"tokpos":7606,"hits":3314},{"tokpos":7609,"hits":3314},{"tokpos":7613,"hits":3314},{"tokpos":7615,"hits":3314},{"tokpos":7617,"hits":3314},{"tokpos":7619,"hits":3314},{"tokpos":7626,"hits":426},{"tokpos":7637,"hits":425},{"tokpos":7643,"hits":425},{"tokpos":7645,"hits":425},{"tokpos":7648,"hits":425},{"tokpos":7652,"hits":425},{"tokpos":7654,"hits":425},{"tokpos":7656,"hits":425},{"tokpos":7658,"hits":425},{"tokpos":7665,"hits":2047},{"tokpos":7676,"hits":2046},{"tokpos":7684,"hits":2046},{"tokpos":7688,"hits":2046},{"tokpos":7690,"hits":2046},{"tokpos":7692,"hits":2046},{"tokpos":7694,"hits":2046},{"tokpos":7697,"hits":2046},{"tokpos":7700,"hits":2046},{"tokpos":7704,"hits":2046},{"tokpos":7706,"hits":2046},{"tokpos":7708,"hits":2046},{"tokpos":7710,"hits":2046},{"tokpos":7713,"hits":2046},{"tokpos":7716,"hits":2046},{"tokpos":7720,"hits":2046},{"tokpos":7722,"hits":2046},{"tokpos":7724,"hits":2046},{"tokpos":7726,"hits":2046},{"tokpos":7729,"hits":2046},{"tokpos":7731,"hits":2046},{"tokpos":7734,"hits":134},{"tokpos":7737,"hits":0},{"tokpos":7738,"hits":0},{"tokpos":7752,"hits":2047},{"tokpos":7763,"hits":2046},{"tokpos":7766,"hits":2046},{"tokpos":7770,"hits":2046},{"tokpos":7772,"hits":2046},{"tokpos":7776,"hits":2046},{"tokpos":7779,"hits":1912},{"tokpos":7780,"hits":1912},{"tokpos":7784,"hits":1912},{"tokpos":7786,"hits":1912},{"tokpos":7789,"hits":1912},{"tokpos":7793,"hits":1912},{"tokpos":7796,"hits":1912},{"tokpos":7800,"hits":1912},{"tokpos":7802,"hits":1912},{"tokpos":7805,"hits":1912},{"tokpos":7809,"hits":1912},{"tokpos":7811,"hits":1912},{"tokpos":7813,"hits":1912},{"tokpos":7815,"hits":1912},{"tokpos":7818,"hits":1912},{"tokpos":7819,"hits":1912},{"tokpos":7822,"hits":134},{"tokpos":7823,"hits":134},{"tokpos":7829,"hits":2047},{"tokpos":7840,"hits":2046},{"tokpos":7842,"hits":2046},{"tokpos":7848,"hits":2046},{"tokpos":7851,"hits":173},{"tokpos":7852,"hits":173},{"tokpos":7856,"hits":173},{"tokpos":7858,"hits":173},{"tokpos":7860,"hits":173},{"tokpos":7862,"hits":173},{"tokpos":7865,"hits":173},{"tokpos":7866,"hits":173},{"tokpos":7869,"hits":1873},{"tokpos":7870,"hits":1873},{"tokpos":7876,"hits":1},{"tokpos":7880,"hits":0},{"tokpos":7888,"hits":0},{"tokpos":7898,"hits":20},{"tokpos":7909,"hits":19},{"tokpos":7917,"hits":19},{"tokpos":7923,"hits":19},{"tokpos":7927,"hits":19},{"tokpos":7929,"hits":19},{"tokpos":7931,"hits":19},{"tokpos":7933,"hits":19},{"tokpos":7940,"hits":71907},{"tokpos":7944,"hits":71906},{"tokpos":7947,"hits":71906},{"tokpos":7951,"hits":71906},{"tokpos":7957,"hits":71906},{"tokpos":7959,"hits":71906},{"tokpos":7963,"hits":71906},{"tokpos":7966,"hits":14171},{"tokpos":7967,"hits":14171},{"tokpos":7969,"hits":14171},{"tokpos":7975,"hits":0},{"tokpos":7976,"hits":0},{"tokpos":7978,"hits":14171},{"tokpos":7985,"hits":71906},{"tokpos":7989,"hits":71906},{"tokpos":7997,"hits":1},{"tokpos":8002,"hits":0},{"tokpos":8005,"hits":0},{"tokpos":8009,"hits":0},{"tokpos":8015,"hits":0},{"tokpos":8019,"hits":0},{"tokpos":8022,"hits":0},{"tokpos":8026,"hits":0},{"tokpos":8034,"hits":71907},{"tokpos":8039,"hits":71906},{"tokpos":8042,"hits":71906},{"tokpos":8046,"hits":71906},{"tokpos":8050,"hits":71906},{"tokpos":8052,"hits":71906},{"tokpos":8055,"hits":71906},{"tokpos":8059,"hits":71906},{"tokpos":8062,"hits":71906},{"tokpos":8066,"hits":71906},{"tokpos":8068,"hits":71906},{"tokpos":8071,"hits":71906},{"tokpos":8075,"hits":71906},{"tokpos":8077,"hits":71906},{"tokpos":8079,"hits":71906},{"tokpos":8081,"hits":71906},{"tokpos":8089,"hits":71907},{"tokpos":8094,"hits":71906},{"tokpos":8097,"hits":71906},{"tokpos":8101,"hits":71906},{"tokpos":8103,"hits":71906},{"tokpos":8107,"hits":71906},{"tokpos":8110,"hits":48815},{"tokpos":8111,"hits":48815},{"tokpos":8113,"hits":48815},{"tokpos":8117,"hits":0},{"tokpos":8118,"hits":0},{"tokpos":8120,"hits":48815},{"tokpos":8122,"hits":48815},{"tokpos":8128,"hits":0},{"tokpos":8129,"hits":0},{"tokpos":8131,"hits":48815},{"tokpos":8135,"hits":48815},{"tokpos":8138,"hits":48815},{"tokpos":8140,"hits":85716},{"tokpos":8144,"hits":85716},{"tokpos":8147,"hits":36901},{"tokpos":8148,"hits":36901},{"tokpos":8150,"hits":36901},{"tokpos":8154,"hits":0},{"tokpos":8155,"hits":0},{"tokpos":8157,"hits":36901},{"tokpos":8161,"hits":36901},{"tokpos":8167,"hits":23091},{"tokpos":8169,"hits":23091},{"tokpos":8173,"hits":0},{"tokpos":8174,"hits":0},{"tokpos":8175,"hits":0},{"tokpos":8182,"hits":187202},{"tokpos":8193,"hits":187201},{"tokpos":8197,"hits":187201},{"tokpos":8199,"hits":187201},{"tokpos":8201,"hits":187201},{"tokpos":8203,"hits":187201},{"tokpos":8206,"hits":187199},{"tokpos":8212,"hits":187199},{"tokpos":8214,"hits":187199},{"tokpos":8217,"hits":187199},{"tokpos":8218,"hits":187199},{"tokpos":8224,"hits":76038},{"tokpos":8235,"hits":76037},{"tokpos":8241,"hits":76037},{"tokpos":8243,"hits":76037},{"tokpos":8246,"hits":76037},{"tokpos":8250,"hits":76037},{"tokpos":8252,"hits":76037},{"tokpos":8254,"hits":76037},{"tokpos":8256,"hits":76037},{"tokpos":8263,"hits":381233},{"tokpos":8267,"hits":381232},{"tokpos":8269,"hits":381232},{"tokpos":8275,"hits":381232},{"tokpos":8278,"hits":330485},{"tokpos":8279,"hits":330485},{"tokpos":8281,"hits":50747},{"tokpos":8283,"hits":50747},{"tokpos":8289,"hits":50747},{"tokpos":8290,"hits":50747},{"tokpos":8292,"hits":0},{"tokpos":8293,"hits":0},{"tokpos":8307,"hits":50748},{"tokpos":8311,"hits":50747},{"tokpos":8314,"hits":50747},{"tokpos":8318,"hits":50747},{"tokpos":8320,"hits":50747},{"tokpos":8324,"hits":50747},{"tokpos":8327,"hits":490},{"tokpos":8328,"hits":490},{"tokpos":8332,"hits":490},{"tokpos":8337,"hits":490},{"tokpos":8340,"hits":0},{"tokpos":8344,"hits":0},{"tokpos":8348,"hits":50747},{"tokpos":8349,"hits":50747},{"tokpos":8350,"hits":50747},{"tokpos":8357,"hits":0},{"tokpos":8358,"hits":0},{"tokpos":8364,"hits":51261},{"tokpos":8368,"hits":51260},{"tokpos":8375,"hits":51260},{"tokpos":8376,"hits":51260},{"tokpos":8382,"hits":2252},{"tokpos":8386,"hits":2251},{"tokpos":8392,"hits":2251},{"tokpos":8398,"hits":2251},{"tokpos":8399,"hits":2251},{"tokpos":8405,"hits":222217},{"tokpos":8416,"hits":222216},{"tokpos":8419,"hits":222216},{"tokpos":8423,"hits":222216},{"tokpos":8425,"hits":222216},{"tokpos":8427,"hits":222216},{"tokpos":8429,"hits":222216},{"tokpos":8432,"hits":222214},{"tokpos":8434,"hits":222214},{"tokpos":8437,"hits":222104},{"tokpos":8438,"hits":222104},{"tokpos":8440,"hits":222104},{"tokpos":8446,"hits":222104},{"tokpos":8449,"hits":132},{"tokpos":8455,"hits":222104},{"tokpos":8466,"hits":222217},{"tokpos":8477,"hits":222216},{"tokpos":8480,"hits":222216},{"tokpos":8486,"hits":222216},{"tokpos":8489,"hits":222216},{"tokpos":8491,"hits":222216},{"tokpos":8493,"hits":222216},{"tokpos":8494,"hits":222216},{"tokpos":8497,"hits":222216},{"tokpos":8505,"hits":222216},{"tokpos":8507,"hits":222216},{"tokpos":8513,"hits":110},{"tokpos":8519,"hits":110},{"tokpos":8522,"hits":110},{"tokpos":8523,"hits":110},{"tokpos":8527,"hits":110},{"tokpos":8530,"hits":110},{"tokpos":8534,"hits":110},{"tokpos":8536,"hits":110},{"tokpos":8538,"hits":110},{"tokpos":8540,"hits":110},{"tokpos":8543,"hits":110},{"tokpos":8549,"hits":110},{"tokpos":8550,"hits":110},{"tokpos":8555,"hits":0},{"tokpos":8556,"hits":0},{"tokpos":8560,"hits":0},{"tokpos":8562,"hits":0},{"tokpos":8565,"hits":0},{"tokpos":8572,"hits":222106},{"tokpos":8578,"hits":222105},{"tokpos":8584,"hits":222104},{"tokpos":8585,"hits":222104},{"tokpos":8591,"hits":300667},{"tokpos":8595,"hits":300666},{"tokpos":8597,"hits":300666},{"tokpos":8601,"hits":300666},{"tokpos":8604,"hits":250867},{"tokpos":8605,"hits":250867},{"tokpos":8607,"hits":360648},{"tokpos":8613,"hits":360648},{"tokpos":8616,"hits":109782},{"tokpos":8617,"hits":109782},{"tokpos":8621,"hits":109782},{"tokpos":8630,"hits":204677},{"tokpos":8634,"hits":204676},{"tokpos":8636,"hits":204676},{"tokpos":8640,"hits":204676},{"tokpos":8643,"hits":204676},{"tokpos":8644,"hits":204676},{"tokpos":8646,"hits":204824},{"tokpos":8652,"hits":204824},{"tokpos":8655,"hits":148},{"tokpos":8656,"hits":148},{"tokpos":8660,"hits":148},{"tokpos":8669,"hits":899952},{"tokpos":8674,"hits":899951},{"tokpos":8677,"hits":899951},{"tokpos":8681,"hits":899951},{"tokpos":8683,"hits":899951},{"tokpos":8687,"hits":899951},{"tokpos":8690,"hits":0},{"tokpos":8691,"hits":0},{"tokpos":8699,"hits":899951},{"tokpos":8702,"hits":899951},{"tokpos":8706,"hits":899951},{"tokpos":8710,"hits":899951},{"tokpos":8712,"hits":899951},{"tokpos":8715,"hits":899949},{"tokpos":8721,"hits":899948},{"tokpos":8727,"hits":899948},{"tokpos":8729,"hits":899948},{"tokpos":8732,"hits":552250},{"tokpos":8738,"hits":0},{"tokpos":8743,"hits":0},{"tokpos":8746,"hits":0},{"tokpos":8747,"hits":0},{"tokpos":8755,"hits":899948},{"tokpos":8756,"hits":899948},{"tokpos":8766,"hits":1133293},{"tokpos":8770,"hits":1133292},{"tokpos":8773,"hits":1133292},{"tokpos":8775,"hits":1133292},{"tokpos":8777,"hits":1285254},{"tokpos":8783,"hits":151963},{"tokpos":8784,"hits":151963},{"tokpos":8790,"hits":151962},{"tokpos":8795,"hits":1133290},{"tokpos":8796,"hits":1133290},{"tokpos":8802,"hits":1122054},{"tokpos":8806,"hits":1122053},{"tokpos":8808,"hits":1306986},{"tokpos":8810,"hits":1306986},{"tokpos":8811,"hits":1306986},{"tokpos":8813,"hits":1306986},{"tokpos":8819,"hits":166946},{"tokpos":8826,"hits":1140040},{"tokpos":8828,"hits":1140040},{"tokpos":8834,"hits":1140040},{"tokpos":8837,"hits":17988},{"tokpos":8844,"hits":1122052},{"tokpos":8851,"hits":17989},{"tokpos":8855,"hits":17988},{"tokpos":8858,"hits":17988},{"tokpos":8862,"hits":17988},{"tokpos":8868,"hits":17988},{"tokpos":8872,"hits":17988},{"tokpos":8875,"hits":17988},{"tokpos":8879,"hits":17988},{"tokpos":8881,"hits":17988},{"tokpos":8884,"hits":17988},{"tokpos":8888,"hits":17988},{"tokpos":8895,"hits":55},{"tokpos":8899,"hits":54},{"tokpos":8902,"hits":54},{"tokpos":8906,"hits":54},{"tokpos":8912,"hits":54},{"tokpos":8916,"hits":54},{"tokpos":8919,"hits":54},{"tokpos":8923,"hits":54},{"tokpos":8925,"hits":54},{"tokpos":8928,"hits":54},{"tokpos":8932,"hits":54},{"tokpos":8939,"hits":319352},{"tokpos":8943,"hits":319351},{"tokpos":8951,"hits":319351},{"tokpos":8955,"hits":319351},{"tokpos":8957,"hits":319351},{"tokpos":8964,"hits":2589},{"tokpos":8968,"hits":2588},{"tokpos":8971,"hits":2588},{"tokpos":8975,"hits":2588},{"tokpos":8976,"hits":2825},{"tokpos":8977,"hits":2825},{"tokpos":8986,"hits":2825},{"tokpos":8990,"hits":2825},{"tokpos":8998,"hits":11238},{"tokpos":9003,"hits":11237},{"tokpos":9007,"hits":11237},{"tokpos":9009,"hits":11237},{"tokpos":9012,"hits":11237},{"tokpos":9015,"hits":11237},{"tokpos":9021,"hits":11237},{"tokpos":9024,"hits":11237},{"tokpos":9028,"hits":11237},{"tokpos":9030,"hits":11733},{"tokpos":9032,"hits":11733},{"tokpos":9033,"hits":11733},{"tokpos":9035,"hits":11733},{"tokpos":9041,"hits":1143},{"tokpos":9042,"hits":1143},{"tokpos":9044,"hits":1143},{"tokpos":9048,"hits":1143},{"tokpos":9051,"hits":701},{"tokpos":9055,"hits":701},{"tokpos":9058,"hits":701},{"tokpos":9059,"hits":701},{"tokpos":9061,"hits":701},{"tokpos":9063,"hits":0},{"tokpos":9066,"hits":0},{"tokpos":9067,"hits":0},{"tokpos":9069,"hits":701},{"tokpos":9073,"hits":442},{"tokpos":9074,"hits":442},{"tokpos":9083,"hits":10590},{"tokpos":9085,"hits":10590},{"tokpos":9089,"hits":10590},{"tokpos":9092,"hits":54},{"tokpos":9099,"hits":10536},{"tokpos":9106,"hits":1230540},{"tokpos":9113,"hits":1230539},{"tokpos":9119,"hits":1230539},{"tokpos":9122,"hits":1230539},{"tokpos":9126,"hits":1230539},{"tokpos":9128,"hits":1230539},{"tokpos":9132,"hits":1230539},{"tokpos":9135,"hits":865964},{"tokpos":9136,"hits":865964},{"tokpos":9138,"hits":865964},{"tokpos":9142,"hits":865964},{"tokpos":9145,"hits":83598},{"tokpos":9153,"hits":61193},{"tokpos":9154,"hits":61193},{"tokpos":9162,"hits":804771},{"tokpos":9163,"hits":804771},{"tokpos":9165,"hits":804771},{"tokpos":9171,"hits":0},{"tokpos":9172,"hits":0},{"tokpos":9174,"hits":804771},{"tokpos":9183,"hits":364575},{"tokpos":9184,"hits":364575},{"tokpos":9188,"hits":364575},{"tokpos":9190,"hits":364575},{"tokpos":9194,"hits":1230537},{"tokpos":9204,"hits":222217},{"tokpos":9208,"hits":222216},{"tokpos":9211,"hits":222216},{"tokpos":9215,"hits":222216},{"tokpos":9217,"hits":222216},{"tokpos":9221,"hits":222216},{"tokpos":9224,"hits":0},{"tokpos":9225,"hits":0},{"tokpos":9233,"hits":222216},{"tokpos":9236,"hits":222216},{"tokpos":9240,"hits":222216},{"tokpos":9243,"hits":222216},{"tokpos":9249,"hits":222216},{"tokpos":9251,"hits":222216},{"tokpos":9254,"hits":2267},{"tokpos":9258,"hits":2267},{"tokpos":9261,"hits":222211},{"tokpos":9262,"hits":222211},{"tokpos":9264,"hits":222211},{"tokpos":9270,"hits":0},{"tokpos":9271,"hits":0},{"tokpos":9279,"hits":222211},{"tokpos":9285,"hits":222211},{"tokpos":9287,"hits":222211},{"tokpos":9290,"hits":219949},{"tokpos":9291,"hits":219949},{"tokpos":9293,"hits":219949},{"tokpos":9297,"hits":219949},{"tokpos":9300,"hits":110},{"tokpos":9301,"hits":110},{"tokpos":9303,"hits":110},{"tokpos":9309,"hits":0},{"tokpos":9310,"hits":0},{"tokpos":9318,"hits":110},{"tokpos":9319,"hits":110},{"tokpos":9325,"hits":5},{"tokpos":9326,"hits":5},{"tokpos":9330,"hits":5},{"tokpos":9332,"hits":5},{"tokpos":9336,"hits":222106},{"tokpos":9342,"hits":222106},{"tokpos":9344,"hits":222106},{"tokpos":9350,"hits":0},{"tokpos":9355,"hits":0},{"tokpos":9358,"hits":0},{"tokpos":9359,"hits":0},{"tokpos":9367,"hits":222106},{"tokpos":9368,"hits":222106},{"tokpos":9374,"hits":364581},{"tokpos":9381,"hits":364580},{"tokpos":9384,"hits":364580},{"tokpos":9388,"hits":364580},{"tokpos":9390,"hits":364580},{"tokpos":9397,"hits":130534},{"tokpos":9398,"hits":130534},{"tokpos":9400,"hits":130534},{"tokpos":9404,"hits":130534},{"tokpos":9407,"hits":30900},{"tokpos":9411,"hits":30900},{"tokpos":9415,"hits":99634},{"tokpos":9417,"hits":99634},{"tokpos":9421,"hits":99634},{"tokpos":9424,"hits":25577},{"tokpos":9431,"hits":74057},{"tokpos":9433,"hits":74057},{"tokpos":9437,"hits":74057},{"tokpos":9440,"hits":17995},{"tokpos":9447,"hits":56062},{"tokpos":9449,"hits":56062},{"tokpos":9452,"hits":0},{"tokpos":9453,"hits":0},{"tokpos":9466,"hits":1452756},{"tokpos":9470,"hits":1452755},{"tokpos":9473,"hits":1452755},{"tokpos":9475,"hits":1452755},{"tokpos":9478,"hits":1452755},{"tokpos":9482,"hits":1452755},{"tokpos":9484,"hits":1502204},{"tokpos":9489,"hits":1502204},{"tokpos":9492,"hits":1502204},{"tokpos":9498,"hits":49449},{"tokpos":9499,"hits":49449},{"tokpos":9505,"hits":49449},{"tokpos":9510,"hits":1452755},{"tokpos":9511,"hits":1452755},{"tokpos":9517,"hits":1502205},{"tokpos":9521,"hits":1502204},{"tokpos":9524,"hits":1502204},{"tokpos":9528,"hits":1502204},{"tokpos":9531,"hits":1502204},{"tokpos":9537,"hits":1502204},{"tokpos":9539,"hits":1502204},{"tokpos":9543,"hits":83864},{"tokpos":9551,"hits":13912},{"tokpos":9552,"hits":13912},{"tokpos":9554,"hits":1488292},{"tokpos":9556,"hits":1488292},{"tokpos":9560,"hits":179892},{"tokpos":9568,"hits":4306},{"tokpos":9569,"hits":4306},{"tokpos":9571,"hits":1483986},{"tokpos":9573,"hits":1483986},{"tokpos":9577,"hits":44225},{"tokpos":9585,"hits":1917},{"tokpos":9586,"hits":1917},{"tokpos":9588,"hits":1482069},{"tokpos":9590,"hits":1482069},{"tokpos":9594,"hits":1669},{"tokpos":9595,"hits":1669},{"tokpos":9597,"hits":1669},{"tokpos":9607,"hits":123},{"tokpos":9608,"hits":123},{"tokpos":9610,"hits":1546},{"tokpos":9612,"hits":1546},{"tokpos":9620,"hits":1546},{"tokpos":9625,"hits":1546},{"tokpos":9626,"hits":1546},{"tokpos":9629,"hits":1480400},{"tokpos":9631,"hits":1480400},{"tokpos":9635,"hits":4925},{"tokpos":9636,"hits":4925},{"tokpos":9638,"hits":4925},{"tokpos":9648,"hits":4377},{"tokpos":9649,"hits":4377},{"tokpos":9651,"hits":548},{"tokpos":9653,"hits":548},{"tokpos":9661,"hits":548},{"tokpos":9666,"hits":548},{"tokpos":9667,"hits":548},{"tokpos":9670,"hits":1475475},{"tokpos":9672,"hits":1475475},{"tokpos":9676,"hits":1475405},{"tokpos":9680,"hits":22638},{"tokpos":9681,"hits":22638},{"tokpos":9683,"hits":1452837},{"tokpos":9685,"hits":1452837},{"tokpos":9689,"hits":12502},{"tokpos":9697,"hits":82},{"tokpos":9698,"hits":82},{"tokpos":9700,"hits":1452755},{"tokpos":9701,"hits":1452755},{"tokpos":9707,"hits":1452644},{"tokpos":9711,"hits":1452643},{"tokpos":9714,"hits":1452643},{"tokpos":9718,"hits":1452643},{"tokpos":9720,"hits":2208049},{"tokpos":9722,"hits":2208049},{"tokpos":9723,"hits":2208049},{"tokpos":9725,"hits":2208049},{"tokpos":9729,"hits":2208049},{"tokpos":9732,"hits":2204656},{"tokpos":9736,"hits":2204656},{"tokpos":9739,"hits":457773},{"tokpos":9740,"hits":457773},{"tokpos":9744,"hits":457773},{"tokpos":9749,"hits":1750276},{"tokpos":9751,"hits":1750276},{"tokpos":9755,"hits":1750276},{"tokpos":9758,"hits":224951},{"tokpos":9759,"hits":224951},{"tokpos":9765,"hits":224950},{"tokpos":9769,"hits":224950},{"tokpos":9771,"hits":224950},{"tokpos":9776,"hits":1525325},{"tokpos":9778,"hits":1525325},{"tokpos":9782,"hits":1525325},{"tokpos":9785,"hits":72683},{"tokpos":9786,"hits":72683},{"tokpos":9792,"hits":72683},{"tokpos":9796,"hits":72683},{"tokpos":9798,"hits":72683},{"tokpos":9803,"hits":1452642},{"tokpos":9805,"hits":1452642},{"tokpos":9809,"hits":1452642},{"tokpos":9812,"hits":49673},{"tokpos":9816,"hits":49673},{"tokpos":9819,"hits":9321},{"tokpos":9822,"hits":1443321},{"tokpos":9824,"hits":1443321},{"tokpos":9828,"hits":1443321},{"tokpos":9831,"hits":8574},{"tokpos":9835,"hits":8574},{"tokpos":9838,"hits":908},{"tokpos":9841,"hits":1442413},{"tokpos":9848,"hits":1285255},{"tokpos":9852,"hits":1285254},{"tokpos":9855,"hits":1285254},{"tokpos":9859,"hits":1285254},{"tokpos":9862,"hits":1285254},{"tokpos":9870,"hits":1285253},{"tokpos":9873,"hits":1285253},{"tokpos":9879,"hits":1285253},{"tokpos":9881,"hits":1285253},{"tokpos":9885,"hits":1194610},{"tokpos":9886,"hits":1194610},{"tokpos":9891,"hits":90643},{"tokpos":9893,"hits":90643},{"tokpos":9897,"hits":63350},{"tokpos":9898,"hits":63350},{"tokpos":9899,"hits":63350},{"tokpos":9900,"hits":63350},{"tokpos":9904,"hits":55489},{"tokpos":9908,"hits":55339},{"tokpos":9912,"hits":55326},{"tokpos":9916,"hits":40814},{"tokpos":9920,"hits":24326},{"tokpos":9924,"hits":24312},{"tokpos":9928,"hits":24233},{"tokpos":9933,"hits":40073},{"tokpos":9941,"hits":40073},{"tokpos":9948,"hits":27293},{"tokpos":9950,"hits":27293},{"tokpos":9954,"hits":26284},{"tokpos":9958,"hits":1},{"tokpos":9959,"hits":1},{"tokpos":9962,"hits":1},{"tokpos":9968,"hits":1},{"tokpos":9969,"hits":1},{"tokpos":9970,"hits":1},{"tokpos":9974,"hits":1},{"tokpos":9979,"hits":1},{"tokpos":9983,"hits":1},{"tokpos":9991,"hits":27292},{"tokpos":9993,"hits":27292},{"tokpos":9997,"hits":104},{"tokpos":9998,"hits":104},{"tokpos":10001,"hits":104},{"tokpos":10007,"hits":104},{"tokpos":10008,"hits":104},{"tokpos":10009,"hits":104},{"tokpos":10010,"hits":104},{"tokpos":10014,"hits":104},{"tokpos":10020,"hits":104},{"tokpos":10021,"hits":104},{"tokpos":10022,"hits":104},{"tokpos":10026,"hits":0},{"tokpos":10030,"hits":0},{"tokpos":10035,"hits":0},{"tokpos":10039,"hits":0},{"tokpos":10045,"hits":104},{"tokpos":10046,"hits":104},{"tokpos":10050,"hits":104},{"tokpos":10054,"hits":104},{"tokpos":10063,"hits":27188},{"tokpos":10064,"hits":27188},{"tokpos":10070,"hits":1318720},{"tokpos":10074,"hits":1318719},{"tokpos":10077,"hits":1318719},{"tokpos":10081,"hits":1318719},{"tokpos":10083,"hits":1318719},{"tokpos":10088,"hits":1318719},{"tokpos":10091,"hits":3393},{"tokpos":10092,"hits":3393},{"tokpos":10094,"hits":3393},{"tokpos":10098,"hits":3393},{"tokpos":10101,"hits":3393},{"tokpos":10102,"hits":3393},{"tokpos":10104,"hits":3393},{"tokpos":10108,"hits":3393},{"tokpos":10111,"hits":2957},{"tokpos":10112,"hits":2957},{"tokpos":10115,"hits":2957},{"tokpos":10121,"hits":2957},{"tokpos":10122,"hits":2957},{"tokpos":10123,"hits":2957},{"tokpos":10127,"hits":883},{"tokpos":10134,"hits":436},{"tokpos":10135,"hits":436},{"tokpos":10138,"hits":1315326},{"tokpos":10141,"hits":1315326},{"tokpos":10147,"hits":1315326},{"tokpos":10149,"hits":1315326},{"tokpos":10150,"hits":1315326},{"tokpos":10154,"hits":1282835},{"tokpos":10158,"hits":1276438},{"tokpos":10162,"hits":1275922},{"tokpos":10166,"hits":1275740},{"tokpos":10170,"hits":1274171},{"tokpos":10175,"hits":47865},{"tokpos":10176,"hits":47865},{"tokpos":10177,"hits":47865},{"tokpos":10178,"hits":47865},{"tokpos":10191,"hits":1267461},{"tokpos":10193,"hits":1267461},{"tokpos":10197,"hits":1237957},{"tokpos":10201,"hits":54181},{"tokpos":10202,"hits":54181},{"tokpos":10205,"hits":54181},{"tokpos":10211,"hits":54181},{"tokpos":10212,"hits":54181},{"tokpos":10213,"hits":54181},{"tokpos":10217,"hits":54181},{"tokpos":10222,"hits":54181},{"tokpos":10223,"hits":54181},{"tokpos":10233,"hits":29684},{"tokpos":10237,"hits":29684},{"tokpos":10246,"hits":1213280},{"tokpos":10248,"hits":1213280},{"tokpos":10252,"hits":10125},{"tokpos":10253,"hits":10125},{"tokpos":10255,"hits":10125},{"tokpos":10265,"hits":9067},{"tokpos":10266,"hits":9067},{"tokpos":10268,"hits":1058},{"tokpos":10271,"hits":1058},{"tokpos":10279,"hits":1058},{"tokpos":10282,"hits":1058},{"tokpos":10283,"hits":1058},{"tokpos":10284,"hits":1058},{"tokpos":10285,"hits":1058},{"tokpos":10289,"hits":290},{"tokpos":10290,"hits":290},{"tokpos":10302,"hits":768},{"tokpos":10309,"hits":1203155},{"tokpos":10311,"hits":1203155},{"tokpos":10315,"hits":5764},{"tokpos":10316,"hits":5764},{"tokpos":10319,"hits":5764},{"tokpos":10327,"hits":5764},{"tokpos":10329,"hits":5764},{"tokpos":10333,"hits":3327},{"tokpos":10334,"hits":3327},{"tokpos":10336,"hits":2437},{"tokpos":10339,"hits":2437},{"tokpos":10345,"hits":2437},{"tokpos":10348,"hits":2437},{"tokpos":10352,"hits":2437},{"tokpos":10355,"hits":2437},{"tokpos":10356,"hits":2437},{"tokpos":10357,"hits":2437},{"tokpos":10361,"hits":426},{"tokpos":10362,"hits":426},{"tokpos":10366,"hits":342},{"tokpos":10371,"hits":84},{"tokpos":10372,"hits":84},{"tokpos":10376,"hits":84},{"tokpos":10380,"hits":84},{"tokpos":10389,"hits":1197391},{"tokpos":10391,"hits":1197391},{"tokpos":10395,"hits":24270},{"tokpos":10396,"hits":24270},{"tokpos":10397,"hits":24270},{"tokpos":10398,"hits":24270},{"tokpos":10408,"hits":23238},{"tokpos":10416,"hits":23238},{"tokpos":10424,"hits":1173121},{"tokpos":10426,"hits":1173121},{"tokpos":10430,"hits":22975},{"tokpos":10431,"hits":22975},{"tokpos":10432,"hits":22975},{"tokpos":10433,"hits":22975},{"tokpos":10443,"hits":22670},{"tokpos":10451,"hits":22670},{"tokpos":10458,"hits":1150146},{"tokpos":10459,"hits":1150146},{"tokpos":10465,"hits":30901},{"tokpos":10470,"hits":30900},{"tokpos":10472,"hits":30900},{"tokpos":10474,"hits":19},{"tokpos":10478,"hits":19},{"tokpos":10482,"hits":30881},{"tokpos":10488,"hits":30900},{"tokpos":10494,"hits":30900},{"tokpos":10496,"hits":30900},{"tokpos":10503,"hits":17996},{"tokpos":10507,"hits":17995},{"tokpos":10510,"hits":17995},{"tokpos":10514,"hits":17995},{"tokpos":10515,"hits":47032},{"tokpos":10516,"hits":47032},{"tokpos":10520,"hits":47032},{"tokpos":10526,"hits":47032},{"tokpos":10530,"hits":47032},{"tokpos":10534,"hits":17995},{"tokpos":10538,"hits":17995},{"tokpos":10540,"hits":17995},{"tokpos":10547,"hits":25578},{"tokpos":10551,"hits":25577},{"tokpos":10554,"hits":25577},{"tokpos":10558,"hits":25577},{"tokpos":10559,"hits":94954},{"tokpos":10560,"hits":94954},{"tokpos":10562,"hits":94954},{"tokpos":10568,"hits":89503},{"tokpos":10573,"hits":89503},{"tokpos":10576,"hits":89503},{"tokpos":10585,"hits":94953},{"tokpos":10589,"hits":94953},{"tokpos":10593,"hits":25576},{"tokpos":10597,"hits":25576},{"tokpos":10599,"hits":25576},{"tokpos":10606,"hits":89504},{"tokpos":10610,"hits":89503},{"tokpos":10613,"hits":89503},{"tokpos":10617,"hits":89503},{"tokpos":10619,"hits":89503},{"tokpos":10623,"hits":89503},{"tokpos":10626,"hits":4176},{"tokpos":10630,"hits":4176},{"tokpos":10633,"hits":364},{"tokpos":10634,"hits":364},{"tokpos":10636,"hits":364},{"tokpos":10640,"hits":364},{"tokpos":10643,"hits":0},{"tokpos":10647,"hits":0},{"tokpos":10651,"hits":364},{"tokpos":10659,"hits":89139},{"tokpos":10661,"hits":89139},{"tokpos":10665,"hits":89139},{"tokpos":10668,"hits":7460},{"tokpos":10672,"hits":7460},{"tokpos":10675,"hits":407},{"tokpos":10676,"hits":407},{"tokpos":10678,"hits":407},{"tokpos":10682,"hits":407},{"tokpos":10685,"hits":0},{"tokpos":10689,"hits":0},{"tokpos":10693,"hits":407},{"tokpos":10701,"hits":88732},{"tokpos":10702,"hits":88732},{"tokpos":10713,"hits":88733},{"tokpos":10717,"hits":88732},{"tokpos":10725,"hits":88732},{"tokpos":10735,"hits":89504},{"tokpos":10739,"hits":89503},{"tokpos":10745,"hits":89503},{"tokpos":10747,"hits":89503},{"tokpos":10750,"hits":89503},{"tokpos":10754,"hits":89503},{"tokpos":10761,"hits":196594},{"tokpos":10765,"hits":196593},{"tokpos":10768,"hits":196593},{"tokpos":10772,"hits":196593},{"tokpos":10775,"hits":196593},{"tokpos":10781,"hits":196593},{"tokpos":10783,"hits":196593},{"tokpos":10787,"hits":9551},{"tokpos":10788,"hits":9551},{"tokpos":10789,"hits":9551},{"tokpos":10799,"hits":187042},{"tokpos":10801,"hits":187042},{"tokpos":10805,"hits":13851},{"tokpos":10806,"hits":13851},{"tokpos":10809,"hits":13851},{"tokpos":10815,"hits":13851},{"tokpos":10816,"hits":13851},{"tokpos":10817,"hits":13851},{"tokpos":10821,"hits":13851},{"tokpos":10825,"hits":13851},{"tokpos":10829,"hits":13851},{"tokpos":10833,"hits":13851},{"tokpos":10840,"hits":173191},{"tokpos":10842,"hits":173191},{"tokpos":10846,"hits":7520},{"tokpos":10847,"hits":7520},{"tokpos":10850,"hits":7520},{"tokpos":10856,"hits":7520},{"tokpos":10857,"hits":7520},{"tokpos":10858,"hits":7520},{"tokpos":10862,"hits":7520},{"tokpos":10866,"hits":7520},{"tokpos":10870,"hits":7520},{"tokpos":10877,"hits":165671},{"tokpos":10879,"hits":165671},{"tokpos":10883,"hits":12979},{"tokpos":10884,"hits":12979},{"tokpos":10887,"hits":12979},{"tokpos":10893,"hits":12979},{"tokpos":10894,"hits":12979},{"tokpos":10895,"hits":12979},{"tokpos":10899,"hits":12979},{"tokpos":10903,"hits":12979},{"tokpos":10907,"hits":12979},{"tokpos":10914,"hits":152692},{"tokpos":10916,"hits":152692},{"tokpos":10920,"hits":3966},{"tokpos":10921,"hits":3966},{"tokpos":10924,"hits":3966},{"tokpos":10930,"hits":3966},{"tokpos":10931,"hits":3966},{"tokpos":10932,"hits":3966},{"tokpos":10936,"hits":3966},{"tokpos":10940,"hits":3966},{"tokpos":10944,"hits":3966},{"tokpos":10951,"hits":148726},{"tokpos":10953,"hits":148726},{"tokpos":10957,"hits":9685},{"tokpos":10958,"hits":9685},{"tokpos":10961,"hits":9685},{"tokpos":10967,"hits":9685},{"tokpos":10968,"hits":9685},{"tokpos":10969,"hits":9685},{"tokpos":10973,"hits":9685},{"tokpos":10977,"hits":9685},{"tokpos":10981,"hits":9685},{"tokpos":10988,"hits":139041},{"tokpos":10990,"hits":139041},{"tokpos":10994,"hits":7574},{"tokpos":10995,"hits":7574},{"tokpos":10998,"hits":7574},{"tokpos":11004,"hits":7574},{"tokpos":11005,"hits":7574},{"tokpos":11006,"hits":7574},{"tokpos":11010,"hits":7574},{"tokpos":11017,"hits":131467},{"tokpos":11019,"hits":131467},{"tokpos":11023,"hits":37841},{"tokpos":11024,"hits":37841},{"tokpos":11025,"hits":37841},{"tokpos":11035,"hits":93626},{"tokpos":11037,"hits":93626},{"tokpos":11041,"hits":10416},{"tokpos":11042,"hits":10416},{"tokpos":11045,"hits":10416},{"tokpos":11051,"hits":10416},{"tokpos":11052,"hits":10416},{"tokpos":11053,"hits":10416},{"tokpos":11057,"hits":10416},{"tokpos":11064,"hits":83210},{"tokpos":11066,"hits":83210},{"tokpos":11070,"hits":7270},{"tokpos":11071,"hits":7270},{"tokpos":11074,"hits":7270},{"tokpos":11080,"hits":7270},{"tokpos":11081,"hits":7270},{"tokpos":11082,"hits":7270},{"tokpos":11086,"hits":7270},{"tokpos":11090,"hits":7270},{"tokpos":11094,"hits":7270},{"tokpos":11098,"hits":7270},{"tokpos":11105,"hits":75940},{"tokpos":11107,"hits":75940},{"tokpos":11111,"hits":2813},{"tokpos":11112,"hits":2813},{"tokpos":11115,"hits":2813},{"tokpos":11121,"hits":2813},{"tokpos":11122,"hits":2813},{"tokpos":11123,"hits":2813},{"tokpos":11127,"hits":2813},{"tokpos":11134,"hits":73127},{"tokpos":11136,"hits":73127},{"tokpos":11140,"hits":849},{"tokpos":11141,"hits":849},{"tokpos":11144,"hits":849},{"tokpos":11150,"hits":849},{"tokpos":11151,"hits":849},{"tokpos":11152,"hits":849},{"tokpos":11156,"hits":849},{"tokpos":11162,"hits":72278},{"tokpos":11163,"hits":72278},{"tokpos":11169,"hits":1026983},{"tokpos":11173,"hits":1026982},{"tokpos":11176,"hits":1026982},{"tokpos":11180,"hits":1026982},{"tokpos":11183,"hits":1026982},{"tokpos":11189,"hits":1026982},{"tokpos":11191,"hits":1026982},{"tokpos":11195,"hits":39283},{"tokpos":11196,"hits":39283},{"tokpos":11197,"hits":39283},{"tokpos":11207,"hits":987699},{"tokpos":11209,"hits":987699},{"tokpos":11213,"hits":59927},{"tokpos":11214,"hits":59927},{"tokpos":11217,"hits":59927},{"tokpos":11223,"hits":59927},{"tokpos":11224,"hits":59927},{"tokpos":11225,"hits":59927},{"tokpos":11229,"hits":59927},{"tokpos":11233,"hits":59927},{"tokpos":11237,"hits":59927},{"tokpos":11241,"hits":59927},{"tokpos":11248,"hits":927772},{"tokpos":11250,"hits":927772},{"tokpos":11254,"hits":42308},{"tokpos":11255,"hits":42308},{"tokpos":11258,"hits":42308},{"tokpos":11264,"hits":42308},{"tokpos":11265,"hits":42308},{"tokpos":11266,"hits":42308},{"tokpos":11270,"hits":42308},{"tokpos":11274,"hits":42308},{"tokpos":11278,"hits":42308},{"tokpos":11285,"hits":885464},{"tokpos":11287,"hits":885464},{"tokpos":11291,"hits":51014},{"tokpos":11292,"hits":51014},{"tokpos":11295,"hits":51014},{"tokpos":11301,"hits":51014},{"tokpos":11302,"hits":51014},{"tokpos":11303,"hits":51014},{"tokpos":11307,"hits":51014},{"tokpos":11311,"hits":51014},{"tokpos":11315,"hits":51014},{"tokpos":11322,"hits":834450},{"tokpos":11324,"hits":834450},{"tokpos":11328,"hits":26215},{"tokpos":11329,"hits":26215},{"tokpos":11332,"hits":26215},{"tokpos":11338,"hits":26215},{"tokpos":11339,"hits":26215},{"tokpos":11340,"hits":26215},{"tokpos":11344,"hits":26215},{"tokpos":11351,"hits":808235},{"tokpos":11353,"hits":808235},{"tokpos":11357,"hits":39831},{"tokpos":11358,"hits":39831},{"tokpos":11361,"hits":39831},{"tokpos":11367,"hits":39831},{"tokpos":11368,"hits":39831},{"tokpos":11369,"hits":39831},{"tokpos":11373,"hits":39831},{"tokpos":11377,"hits":39831},{"tokpos":11381,"hits":39831},{"tokpos":11388,"hits":768404},{"tokpos":11390,"hits":768404},{"tokpos":11394,"hits":69952},{"tokpos":11395,"hits":69952},{"tokpos":11396,"hits":69952},{"tokpos":11406,"hits":698452},{"tokpos":11408,"hits":698452},{"tokpos":11412,"hits":61157},{"tokpos":11413,"hits":61157},{"tokpos":11414,"hits":61157},{"tokpos":11424,"hits":637295},{"tokpos":11426,"hits":637295},{"tokpos":11430,"hits":37434},{"tokpos":11431,"hits":37434},{"tokpos":11434,"hits":37434},{"tokpos":11440,"hits":37434},{"tokpos":11441,"hits":37434},{"tokpos":11442,"hits":37434},{"tokpos":11446,"hits":37434},{"tokpos":11453,"hits":599861},{"tokpos":11455,"hits":599861},{"tokpos":11459,"hits":175586},{"tokpos":11460,"hits":175586},{"tokpos":11463,"hits":175586},{"tokpos":11469,"hits":175586},{"tokpos":11470,"hits":175586},{"tokpos":11471,"hits":175586},{"tokpos":11475,"hits":175586},{"tokpos":11479,"hits":175586},{"tokpos":11486,"hits":424275},{"tokpos":11488,"hits":424275},{"tokpos":11492,"hits":12420},{"tokpos":11493,"hits":12420},{"tokpos":11496,"hits":12420},{"tokpos":11502,"hits":12420},{"tokpos":11503,"hits":12420},{"tokpos":11504,"hits":12420},{"tokpos":11508,"hits":12420},{"tokpos":11515,"hits":411855},{"tokpos":11517,"hits":411855},{"tokpos":11521,"hits":7884},{"tokpos":11522,"hits":7884},{"tokpos":11525,"hits":7884},{"tokpos":11531,"hits":7884},{"tokpos":11532,"hits":7884},{"tokpos":11533,"hits":7884},{"tokpos":11537,"hits":7884},{"tokpos":11543,"hits":403971},{"tokpos":11544,"hits":403971},{"tokpos":11550,"hits":111},{"tokpos":11554,"hits":110},{"tokpos":11557,"hits":110},{"tokpos":11561,"hits":110},{"tokpos":11564,"hits":110},{"tokpos":11570,"hits":110},{"tokpos":11573,"hits":110},{"tokpos":11574,"hits":110},{"tokpos":11575,"hits":110},{"tokpos":11576,"hits":110},{"tokpos":11580,"hits":0},{"tokpos":11581,"hits":0},{"tokpos":11582,"hits":0},{"tokpos":11593,"hits":0},{"tokpos":11599,"hits":110},{"tokpos":11600,"hits":110},{"tokpos":11604,"hits":0},{"tokpos":11605,"hits":0},{"tokpos":11606,"hits":0},{"tokpos":11617,"hits":0},{"tokpos":11623,"hits":110},{"tokpos":11624,"hits":110},{"tokpos":11628,"hits":0},{"tokpos":11629,"hits":0},{"tokpos":11645,"hits":1},{"tokpos":11646,"hits":1},{"tokpos":11653,"hits":1}]},"sources":["(function(exports){\n\nvar Gonzales = exports.Gonzales = {\n    parsers: [],\n    sources: [],\n\n    init: function(parsers, sources){\n        Gonzales.createSourceTds();\n        Gonzales.createParserTds();\n    },\n    createSourceTds: function(){\n        Gonzales.sources.forEach(Gonzales.createSourceTd);\n    },\n    createSourceTd: function(source){\n        // var e = <tr><td><input type=\"checkbox\"/></td><td>{source.name}</td></tr>\n        // if (source.defaultUsed) e{input}.checked = true; // ugly :(\n        // ${.sources}.appendChild(e);\n\n        var e = document.createElement('tr');\n        var f = document.createElement('td');\n        f.innerHTML = '<input type=\"checkbox\"'+(source.defaultUsed?' checked':'')+'/>';\n        e.appendChild(f);\n        var f = document.createElement('td');\n        f.innerHTML = source.name+'<br/>';\n        e.appendChild(f);\n        var tbody = document.querySelector('.sources');\n        tbody.appendChild(e);\n        source.tr = e;\n    },\n    createParserTds: function(){\n        Gonzales.parsers.forEach(Gonzales.createParserTd);\n    },\n    createParserTd: function(parser){\n        if (parser.special) return;\n        parser.tds = {};\n\n        Gonzales.createParserTh(parser);\n\n        Gonzales.sources.forEach(Gonzales.createParserSourceTd.bind(this, parser));\n    },\n    createParserSourceTd: function(parser, source){\n        // var e = <td/>;\n\n        var e = document.createElement('td');\n        source.tr.appendChild(e);\n        parser.tds[source.name] = e;\n    },\n    createParserTh: function(parser){\n        // var e = <th>{parser.name}<br/><input type=\"checkbox\"/>;\n        // if (parser.defaultOn) e{input}.checked = true; // ugly :(\n        // ${.row-runner}.appendChild(e);\n\n        var e = document.createElement('th');\n        e.innerHTML = parser.name+'<br/><input type=\"checkbox\" '+(parser.defaultOn?'checked':'')+'/>';\n        document.querySelector('.row-runner').appendChild(e);\n        parser.tds.head = e;\n    },\n    GET: function(url, callback){\n        var xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function(){\n            if (xhr.readyState == 4) {\n                try { xhr.status; // status is a getter, this checks for exception\n                } catch (e) {\n                    callback(new Error(\"Warning: Unknown error with server request (timeout?).\"));\n                }\n\n                if (xhr.status == 200) callback(null, xhr.responseText);\n                else callback(new Error(\"File request problem (code: \"+xhr.status+\")!\"));\n            }\n        };\n        xhr.open(\"GET\", url+'?'+Math.random());\n        xhr.send(null);\n    },\n\n    sourcesToLoad: [],\n    parsersToLoad: [],\n    profile: false,\n    testQueue: [],\n    run: function(profile){\n      Gonzales.profile = profile === true;\n      Gonzales.sourcesToLoad = [];\n      Gonzales.parsersToLoad = [];\n      Gonzales.testQueue = [];\n\n      Gonzales.gatherTests(Gonzales.bench);\n\n      if (Gonzales.testQueue.length == 0) {\n          return console.log(\"Either no sources or no parsers selected, or neither.\");\n      }\n\n      Gonzales.nextSource();\n\n      Gonzales.nextParser();\n    },\n    gatherTests: function(bench, options){\n        options = options || {};\n        var queue = {};\n        var byRandom = exports.document ? document.getElementById('by-random').checked : options.order == 'random';\n        var bySource = exports.document ? document.getElementById('by-source').checked : options.order == 'source';\n        var byParser = exports.document ? document.getElementById('by-parser').checked : options.order == 'parser';\n        if (byRandom) queue = [];\n\n        Gonzales.sources.forEach(function(source){\n            if (source.tr ? source.tr.querySelector('input').checked : source.defaultUsed) {\n                if (!source.loaded) Gonzales.sourcesToLoad.push(source);\n\n                Gonzales.parsers.forEach(function(parser){\n                    if ((parser.tds ? parser.tds.head.querySelector('input').checked : parser.defaultOn) && !parser.special) {\n                        if (!parser.loaded && Gonzales.parsersToLoad.indexOf(parser) < 0) Gonzales.parsersToLoad.push(parser);\n                        if (parser.tds) parser.tds[source.name].style.backgroundColor = 'yellow';\n\n                        // this is the actual test to run\n                        var test = function(){ bench(parser, source); };\n\n                        if (byRandom) {\n                            queue.push(test);\n                        } else if (bySource) {\n                            if (!queue[source.name]) queue[source.name] = [];\n                            queue[source.name].push(test);\n                        } else if (byParser) {\n                            if (!queue[parser.name]) queue[parser.name] = [];\n                            queue[parser.name].push(test);\n                        }\n                    }\n                });\n            }\n        });\n\n        if (byRandom) {\n            while (queue.length) {\n                Gonzales.testQueue.push(queue.splice(Math.floor(Math.random()*queue.length), 1)[0]);\n            }\n        } else if (bySource) {\n            var sources = Object.keys(queue);\n            Gonzales.testQueue = [].concat.apply(Gonzales.testQueue, sources.map(function(s){ return queue[s]; }));\n        } else if (byParser) {\n            var parsers = Object.keys(queue);\n            Gonzales.testQueue = [].concat.apply(Gonzales.testQueue, parsers.map(function(p){ return queue[p]; }));\n        }\n\n        if (!Gonzales.testQueue.length) console.log(\"No tests selected or no order selected\");\n    },\n    nextSource: function again(){\n        if (Gonzales.sourcesToLoad.length == 0) Gonzales.finishedLoading();\n        else {\n            var source = Gonzales.sourcesToLoad.pop();\n            Gonzales.GET(source.url, function(err, str){\n                if (err) {\n                    console.log(\"Load failed...\", source, err);\n                } else {\n                    source.loaded = str;\n                    source.tr.children[1].innerHTML += Math.round(str.length/1024)+'k';\n                    again();\n                }\n            });\n        }\n    },\n    nextParser: function again(files){\n        if (Gonzales.parsersToLoad.length == 0) Gonzales.finishedLoading();\n        else {\n            // queue is false if first call or last call was last for one parser\n            if (!files) {\n                var source = Gonzales.parsersToLoad[Gonzales.parsersToLoad.length-1];\n                files = source.files.slice(0);\n            }\n            var url = files.shift();\n            Gonzales.GET(url, function(err, str){\n                if (err) {\n                    console.log(\"Load failed...\", url, err);\n                } else {\n                    var e = document.createElement('script');\n                    e.appendChild(document.createTextNode(str));\n                    document.body.appendChild(e);\n\n                    if (files.length) again(files);\n                    else {\n                        var parser = Gonzales.parsersToLoad.pop();\n                        parser.loaded = true;\n\n                        again();\n                    }\n                }\n            });\n        }\n    },\n    finishedLoading: function(toLoad){\n        if (Gonzales.sourcesToLoad.length || Gonzales.parsersToLoad.length) return; // not yet finished loading\n\n        document.getElementById('total').innerHTML = '/ '+Gonzales.testQueue.length;\n\n        if (Gonzales.profile) console.profile();\n\n        Gonzales.drainQueue();\n    },\n    drainQueue: function again(){\n        document.getElementById('progress').innerHTML = Gonzales.testQueue.length;\n        if (Gonzales.testQueue.length) {\n            var f = Gonzales.testQueue.shift();\n//            var f = Gonzales.testQueue.splice(Math.floor(Math.random()*Gonzales.testQueue.length), 1)[0];\n            setTimeout(function(){\n                f();\n                again();\n            }, 100);\n        } else {\n            document.getElementById('progress').innerHTML = 'done';\n            if (Gonzales.profile) {\n              console.profileEnd();\n              console.log(\"Check out Profile tab! :)\");\n            }\n        }\n    },\n    bench: function(parser, source){\n        // so we have the benchmark in benchmarkFile and `parser` has a function to use the parser...\n        var parse = parser.getParser(window);\n        var total = 0;\n        var min = Infinity;\n        var max = -Infinity;\n        var failed = false;\n        // we'll repeat this step 10x, no pause\n        for (var i=0; i<10 && !failed; ++i) {\n            try {\n                var start = Date.now();\n                parse(source.loaded);\n                var done = Date.now();\n                var time = done-start;\n                total += time;\n                min = Math.min(min, time);\n                max = Math.max(max, time);\n            } catch (e) {\n                failed = true;\n                console.error(parser.name+' crashed:', e);\n            }\n        }\n\n        var td = parser.tds[source.name];\n        if (failed) {\n            td.innerHTML = 'crash';\n            td.style.backgroundColor = 'orange';\n        } else {\n            td.innerHTML = (total/10)+'ms<br/>'+min+' ~ '+max;\n            td.style.backgroundColor = 'transparent';\n        }\n    },\n\n\n    // node stuff\n\n\n    nodeLoadSources: function(){\n        var fs = require('fs');\n        Gonzales.sourcesToLoad.forEach(function(source){\n            var path = require('path');\n            console.log(\"reading\", path.resolve('gonzales/'+source.url))\n            source.loaded = fs.readFileSync(path.resolve('gonzales/'+source.url)).toString('utf-8');\n        });\n    },\n    nodeLoadParsers: function(){\n      Gonzales.parsersToLoad.forEach(function(parser){\n        if (parser.files.length > 1) {\n          // hack for zeparser during development... and maybe something i should use generically\n\n          var s = '';\n          var fs = require('fs');\n          parser.files.forEach(function(file){\n            s += '\\n// ### '+file+' ###\\n';\n            console.log('Reading: '+__dirname+'/'+file)\n            s += fs.readFileSync(__dirname+'/'+file);\n          });\n\n          s += ';\\n\\nmodule.exports = {Par:Par};';\n          fs.writeFileSync(__dirname+'/../build/'+parser.name+'.js', s);\n\n          parser.loaded = require(__dirname+'/../build/'+parser.name+'.js');\n        } else {\n          parser.loaded = require(parser.files[0]);\n        }\n      });\n    },\n    nodeDrain: function again(){\n        if (Gonzales.testQueue.length) {\n            setTimeout(function(){\n                Gonzales.testQueue.shift()();\n                again();\n            }, 100);\n        } else {\n            console.log('Done!');\n        }\n    },\n    nodeBench: function(parser, source){\n        console.log(\"Running \"+parser.name+'('+source.name+')...');\n        // so we have the benchmark in benchmarkFile and `parser` has a function to use the parser...\n\n        var parse = parser.getParser(parser.loaded);\n        var total = 0;\n        var min = Infinity;\n        var max = -Infinity;\n        var failed = false;\n        // we'll repeat this step 10x, no pause\n        for (var i=0; i<10 && !failed; ++i) {\n            try {\n                var start = Date.now();\n                parse(source.loaded);\n                var done = Date.now();\n                var time = done-start;\n                total += time;\n                min = Math.min(min, time);\n                max = Math.max(max, time);\n            } catch (e) {\n                failed = true;\n                console.log(\"Crashed\");\n                console.log(e.message);\n            }\n        }\n\n        if (!failed) {\n            console.log(((total-(min+max))/8)+'ms: '+min+' ~ '+max);\n        }\n    },\n};\n\n\n})(typeof window != 'undefined' ? window : module.exports);\n",null,null,"\n// ### ../../zeparser2/src/regex-start-substring.js ###\n// this builds the regex that determines which token to parse next\n// it should be applied to the next four bytes of the input (four\n// bytes because of the longest punctuator).\n\n\nvar getSubstringStartRegex = function(testing){\n    // note: punctuators should be parsed long to short. regex picks longest first, parser wants that too.\n    var punc = [\n        '>>>=',\n        '===','!==','>>>','<<=','>>=',\n        '<=','>=','==','!=','\\\\+\\\\+','--','<<','>>','\\\\&\\\\&','\\\\|\\\\|','\\\\+=','-=','\\\\*=','%=','\\\\&=','\\\\|=','\\\\^=','\\\\/=',\n        '\\\\{','\\\\}','\\\\(','\\\\)','\\\\[','\\\\]','\\\\.',';',',','<','>','\\\\+','-','\\\\*','%','\\\\|','\\\\&','\\\\|','\\\\^','!','~','\\\\?',':','=','\\\\/'\n    ];\n\n\n    // everything is wrapped in (<start>)?\n    var starts = [\n        '[\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\uFFFF]', // whitespace: http://es5.github.com/#WhiteSpace\n        '[\\\\u000A\\\\u000D\\\\u2028\\\\u2029]', // lineterminators: http://es5.github.com/#LineTerminator\n        '\\\\/\\\\/', // single comment\n        '\\\\/\\\\*', // multi comment\n        '\\'', // single string\n        '\"', // double string\n        '\\\\.?[0-9]', // numbers\n        '\\\\/=?', // regex\n        punc.join('|')\n    ];\n\n    // basic structure: /^(token)?(token)?(token)?.../\n    // match need to start left but might not match entire input part\n    var s = '^' + starts.map(function(start){ return '('+start+')?'; }).join('') + (testing?'$':'');\n\n    return new RegExp(s);\n};\n\n// ### ../../zeparser2/src/regex-string.js ###\nvar getStringBodyRegex = function(quote, testing){\n    // unicode hex escape+any-char non-newline-char\n    var parts = [\n        '\\\\\\\\u[\\\\da-f]{4}', // unicode escape, \\u1234\n        '\\\\\\\\x[\\\\da-f]{2}', // hex escape, \\x12\n        '\\\\\\\\(?:(?:\\\\u000D\\\\u000A)|[\\\\u000A\\\\u000D\\\\u2028\\\\u2029])',\n        '\\\\\\\\[^xu]', // single char escape, but dont allow u or x here\n        '[^\\\\n\\\\\\\\'+quote+']' // anything but a newline,backslash or target quote (we want to fail malformed \\x and \\u)\n    ];\n    var body = parts.map(function(part){\n        return '(?:'+part+')';\n    }).join('|');\n\n    var regex = quote+'(?:'+body+')*'+quote;\n    return new RegExp(regex, 'img');\n\n    if (!testing) return regex;\n\n    // rest is just for running tests...\n\n    // slightly different regex for testing (i want it to match exactly the whole test case)\n    var regex = '^(?:'+body+')*'+quote+'$';\n    regex = new RegExp(regex, 'im');\n\n    var good = [\n        'foo',\n        'foo\\\\s',\n        '\\\\sfoo',\n        'foo\\\\sbar',\n        'foo\\\\\\\\n',\n        '\\\\\\\\nfoo',\n        'foo\\\\\\\\nbar',\n        'foo\\\\\\n',\n        '\\\\\\nfoo',\n        'foo\\\\\\nbar',\n        'foo\\\\u1234',\n        '\\\\u0badfoo',\n        'foo\\\\udeadbar',\n        'foo\\\\x15',\n        '\\xabfoo',\n        'foo\\x10bar'\n    ];\n    var bad = [\n        'foo',\n        '\\n',\n        'foo\\n',\n        '\\nfoo',\n        '\\\\u123h'+quote,\n        '\\\\u123'+quote,\n    ];\n\n    console.log(\"the goods:\");\n    good.forEach(function(str){\n        if (regex.test(str+'\"')) console.log('okay: '+str+'\"');\n        else console.warn('fail: '+str+'\"');\n    });\n    console.log(\"the bads:\");\n    bad.forEach(function(str){\n        if (regex.test(str)) console.warn('fail: '+str);\n        else console.log('okay: '+str);\n    });\n};\n\n// ### ../../zeparser2/src/regex-identifier.js ###\nvar getIdentifierRegex = function(testing){\n    var chars = [\n        // a letter or a digit\n        // identifiers cannot start with a digit, this regex does NOT check for that\n        '[\\\\w\\\\d$]', // \\w includes underscores (_)\n        // a full unicode escape (legal in identifiers)\n        '(?:\\\\\\\\u(?:[\\\\da-f]){4})',\n    ];\n\n    var atom = chars.map(function(c){\n        return '(?:'+c+')';\n    }).join('|');\n\n    var body = '(?:'+atom+')+';\n\n    return new RegExp(body, 'ig');\n};\n\n// ### ../../zeparser2/src/regex-number.js ###\nfunction getNumberRegex(testing){\n\n    var wrap = function(s){ return '(?:'+s+')'; };\n\n    var hex = '0x[\\\\da-f]+';\n    var integer = '\\\\d';\n    var dot = '\\\\.';\n\n    // e is a suffix, can be followed by positive or negative sign,\n    // which must be followed by one or more digits, even zeroes\n    var exp = 'e[-+]?\\\\d+';\n\n    // body = hex | ((( 0 | [1-9]int* )( . int* )? | .int+)(exp)?)\n    var body = wrap(\n        wrap(hex)+\n        '|'+\n        wrap(\n            wrap( // either digits[.[digits]] or .digits\n                wrap( // integer with optional fraction\n                    wrap( // if the first digit is zero, no more will follow\n                        '0'+\n                        '|'+\n                        '[1-9]'+integer+'*'\n                    )+\n                    wrap( // optional dot with optional fraction (if fraction, dot is required)\n                        dot+integer+'*'\n                    )+'?'\n                )+\n                '|'+\n                wrap( // leading dot with required fraction part\n                    dot+\n                    integer+'+'\n                )\n            )+\n            wrap(exp)+'?'\n        )\n    );\n\n    if (!testing) return new RegExp(body, 'gi');\n\n    // test cases...\n\n    var regex = new RegExp('^'+body+'$', 'i');\n\n\n    var good = [\n        '25',\n        '0',\n        '0.1234',\n        '.1234',\n        '.00',\n        '.0',\n        '0.',\n        '500.',\n        '1e2',\n        '1e15',\n        '1e05',\n        '1e41321',\n        '1e-0',\n        '1e+0',\n        '0.e15',\n        '0.e-15',\n        '0.e+15',\n        '.0e15',\n        '.0e+15',\n        '.0e-15',\n        '.0e-0',\n        '0.15e+125',\n        '0x15',\n        '0x0',\n        '0xdeadbeefcace',\n        '0X500dead',\n    ];\n    var bad = [\n        '00',\n        '00.',\n        '00.0',\n        '.e',\n        '.e5',\n        '.e+15',\n        '15e+',\n        '15e-',\n        '.15e+',\n        '.15e-',\n        '00xfeed',\n        '00Xfeed',\n    ];\n\n    console.log(\"the goods:\");\n    good.forEach(function(str){\n        if (regex.test(str)) console.log('okay: '+str);\n        else console.warn('fail: '+str);\n    });\n    console.log(\"the bads:\");\n    bad.forEach(function(str){\n        if (regex.test(str)) console.warn('fail: '+str);\n        else console.log('okay: '+str);\n    });\n};\n\n// ### ../../zeparser2/src/tok.js ###\n// indices match slots of the start-regexes (where applicable)\n// this order is determined by regex/parser rules so they are fixed\nvar WHITE_SPACE = 1;\nvar LINETERMINATOR = 2;\nvar COMMENT_SINGLE = 3;\nvar COMMENT_MULTI = 4;\nvar STRING = 10;\nvar STRING_SINGLE = 5;\nvar STRING_DOUBLE = 6;\nvar NUMBER = 7;\nvar NUMERIC_DEC = 11;\nvar NUMERIC_HEX = 12;\nvar REGEX = 8;\nvar PUNCTUATOR = 9;\nvar IDENTIFIER = 13;\nvar EOF = 14;\nvar ASI = 15;\nvar ERROR = 16;\nvar VALUE = 17; // STRING NUMBER REGEX IDENTIFIER\nvar WHITE = 18; // WHITE_SPACE, LINETERMINATOR COMMENT_SINGLE COMMENT_MULTI\n\n/**\n * Tokenizer for JS. After initializing the constructor\n * you can fetch the next tokens by calling tok.next()\n * if the next token could be a division, or tok.nextExpr()\n * if the next token could be a regular expression.\n * Obviously you'll need a parser (or magic) to determine this.\n *\n * @constructor\n * @param {string} input\n */\nvar Tok = function(input){\n  this.tokens = [];\n\n  this.input = (input||'');\n  this.len = this.input.length;\n\n  // v8 \"appreciates\" to be set all instance properties explicitly\n  this.pos = 0;\n\n  this.lastStart = 0;\n  this.lastStop = 0;\n  this.lastType = -1;\n  this.lastValue = null;\n  this.lastNum = -1; // -1 means uninitialized (since charCodeAt can never return this, it's safe to go for -1)\n  this.lastNextNum = -1;\n  this.lastNewline = -1;\n\n  this.tokenCount = 0;\n  this.tokens = [];\n};\n\n// reverse lookup (only used for error messages..)\nTok[WHITE_SPACE] = 'whitespace';\nTok[LINETERMINATOR] = 'lineterminator';\nTok[COMMENT_SINGLE] = 'comment_single';\nTok[COMMENT_MULTI] = 'comment_multi';\nTok[STRING] = 'string';\nTok[STRING_SINGLE] = 'string_single';\nTok[STRING_DOUBLE] = 'string_multi';\nTok[NUMBER] = 'number';\nTok[NUMERIC_DEC] = 'numeric_dec';\nTok[NUMERIC_HEX] = 'numeric_hex';\nTok[REGEX] = 'regex';\nTok[PUNCTUATOR] = 'punctuator';\nTok[IDENTIFIER] = 'identifier';\nTok[EOF] = 'eof';\nTok[ASI] = 'asi';\nTok[ERROR] = 'error';\nTok[VALUE] = 'value';\nTok[WHITE] = 'white';\n\nTok.prototype = {\n  /** @property {string} input */\n  input: null,\n  /** @property {number} len */\n  len: 0,\n  /** @property {number} pos */\n  pos: 0,\n\n  // parser can look at these positions to see where in the input the last token was\n  // this way the tokenizer can simply return number-constants-as-types.\n  /** @property {number} lastStart Start pos of the last token */\n  lastStart: 0,\n  /** @property {number} lastStop End pos of the last token */\n  lastStop: 0,\n  /** @property {number} lastType Type of the last token */\n  lastType: null,\n  /** @property {string|null} lastValue String value of the last token, or null if not yet fetched (see this.getLastValue()) */\n  lastValue: null,\n  /** @property {number} lastNum Cached value of this.input.charCodeAt(this.lastStart), or -1 if not yet fetched */\n  lastNum: -1,\n  /** @property {number} lastNextNum When the previous parsing already had to query the ord of the first character for the next token, it will store that here */\n  lastNextNum: -1,\n  /** @property {boolean} lastNewline Was the current token preceeded by a newline? For determining ASI. */\n  lastNewline: false,\n\n  /** @property {number} tokenCount Simple counter, includes whitespace */\n  tokenCount: 0,\n  /** @property {Object} tokens List of (all) tokens, if saving them is enabled */\n  tokens: null,\n\n  // some of these regular expressions are so complex that i had to\n  // write scripts to construct them. the only way to keep my sanity\n\n  /** @property {RegExp} rexNewlines Replace windows' CRLF with a single LF, as well as the weird newlines. this fixes positional stuff. */\n  rexNewlines: /[\\u000A\\u000d\\u2028\\u2029]/g, // used by comment parsers if in regex mode\n  /** @property {RegExp} rexNewlineSearchInMultilineComment After having found the * / (indexOf), apply this to quickly test for a newline in the comment */\n  rexNewlineSearchInMultilineComment:/[\\u000A\\u000D\\u2028\\u2029]|\\*\\//g, // used by m-comment parser if in regex mode\n\n  /**\n   * Check whether current token is of certain type\n   *\n   * @param {number} t\n   * @return {boolean}\n   */\n  isType: function(t){\n    return this.lastType === t;\n  },\n  /**\n   * Check whether the current token is of string, number,\n   * regex, or identifier type. These are the \"value\"\n   * token types, short of arrays and objects.\n   *\n   * @return {boolean}\n   */\n  isValue: function(){\n    return this.lastType === STRING || this.lastType === NUMBER || this.lastType === IDENTIFIER || this.lastType === REGEX || false;\n  },\n  /**\n   * Compare the first character of the current token\n   * as a number (for speed).\n   *\n   * @param {number} n\n   * @return {boolean}\n   */\n  isNum: function(n){\n    return this.getLastNum() === n;\n  },\n  /**\n   * Compare the entire input range of the current\n   * token to the given value.\n   *\n   * @param {string} value\n   * @return {boolean}\n   */\n  isString: function(value){\n    return this.getLastValue() === value;\n  },\n\n  /**\n   * Parse the next token if the current\n   * token isType(type). Next token is parsed\n   * possibly expecting a division (so not\n   * a regex).\n   *\n   * @param {number} type\n   * @return {boolean}\n   */\n  nextPuncIfType: function(type){\n    var equals = this.isType(type);\n    if (equals) this.nextPunc();\n    return equals;\n  },\n  /**\n   * Parse the next token if the current\n   * token a \"value\". Next token is parsed\n   * possibly expecting a division (so not\n   * a regex).\n   *\n   * @param {number} type\n   * @return {boolean}\n   */\n  nextPuncIfValue: function(){\n    var equals = this.isValue();\n    if (equals) this.nextPunc();\n    return equals;\n  },\n  /**\n   * Parse the next token if the first character\n   * of the current starts with a character (as\n   * a number) equal to num. Next token is parsed\n   * possibly expecting a regex (so not a division).\n   *\n   * @param {number} num\n   * @return {boolean}\n   */\n  nextExprIfNum: function(num){\n    var equals = this.isNum(num);\n    if (equals) this.nextExpr();\n    return equals;\n  },\n  /**\n   * Parse the next token if the input range of\n   * the current token matches the given string.\n   * The next token will be parsed expecting a\n   * possible division, not a regex.\n   *\n   * @param {string} str\n   * @return {boolean}\n   */\n  nextPuncIfString: function(str){\n    var equals = this.isString(str);\n    if (equals) this.nextPunc();\n    return equals;\n  },\n\n  /**\n   * Parser requires the current token to start with (or be) a\n   * certain character. Parse the next token if that's the case.\n   * Throw a syntax error otherwise.\n   *\n   * @param {number} num\n   * @param {boolean} nextIsExpr=false\n   */\n  mustBeNum: function(num, nextIsExpr){\n    if (this.isNum(num)) {\n      this.next(nextIsExpr);\n    } else {\n      throw this.syntaxError(num);\n    }\n  },\n  /**\n   * Parser requires the current token to be any identifier.\n   * Parse the next token if that's the case. Throw a syntax\n   * error otherwise.\n   *\n   * @param {boolean} nextIsExpr\n   */\n  mustBeIdentifier: function(nextIsExpr){\n    if (this.isType(IDENTIFIER)) {\n      this.next(nextIsExpr);\n    } else {\n      throw this.syntaxError(IDENTIFIER);\n    }\n  },\n  /**\n   * Parser requires the current token to be of\n   * a certain type. Parse the next token if that's\n   * the case. Throw a syntax error otherwise.\n   *\n   * @param {number} type\n   * @param {boolean} nextIsExpr=false\n   */\n  mustBeType: function(type, nextIsExpr){\n    if (this.isType(type)) {\n      this.next(nextIsExpr);\n    } else {\n      throw this.syntaxError(type);\n    }\n  },\n  /**\n   * Parser requires the current token to be this\n   * string. Parse the next token if that's the\n   * case. Throw a syntax error otherwise.\n   *\n   * @param {string} str\n   * @param {boolean} nextIsExpr=false\n   */\n  mustBeString: function(str, nextIsExpr){\n    if (this.isString(str)) {\n      this.next(nextIsExpr);\n    } else {\n      throw this.syntaxError(str);\n    }\n  },\n\n  nextExpr: function(){\n    return this.next(true);\n  },\n  nextPunc: function(){\n    return this.next(false);\n  },\n\n  next: function(expressionStart){\n    this.lastNewline = false;\n\n    var pos = this.pos;\n\n    if (pos >= this.len) {\n      this.lastType = EOF;\n      this.lastStart = this.lastStop = pos;\n      return EOF;\n    }\n\n    do {\n      var type = this.nextWhiteToken(expressionStart);\n//      this.tokens.push({type:type, value:this.getLastValue(), start:this.lastStart, stop:this.pos});\n\n//      console.log('token:', type, Tok[type], '`'+this.input.substring(this.lastStart, this.pos).replace(/\\n/g,'\\u23CE')+'`', 'start:',this.lastStart, 'len:',this.lastStop-this.lastStart);\n    } while (type === WHITE);\n\n    this.lastType = type;\n    return type;\n  },\n  nextWhiteToken: function(expressionStart){\n    this.lastValue = null;\n    this.lastNum = -1;\n    this.lastStart = this.pos;\n    if (this.pos >= this.len) return EOF;\n\n    // if the previous token parsing already discovered the\n    // ord of the first character for this token, it will\n    // have saved that in this.lastNextNum, so let's copy\n    // that to lastNum now.\n    var lastNextNum = this.lastNextNum;\n    if (lastNextNum !== -1) {\n      this.lastNum = lastNextNum;\n      this.lastNextNum = -1;\n    }\n\n    ++this.tokenCount;\n\n    var result = this.nextToken(expressionStart);\n\n    this.lastStop = this.pos;\n\n    return result;\n  },\n\n  nextToken: function(expressionStart){\n    var pos = this.pos;\n    var input = this.input;\n    var c = input.charCodeAt(pos);\n\n    var result = -1;\n\n    // https://twitter.com/ariyahidayat/status/225447566815395840\n    // Punctuator, Identifier, Keyword, String, Numeric, Boolean, Null, RegularExpression\n    // so:\n    // Whitespace, RegularExpression, Punctuator, Identifier, LineTerminator, String, Numeric\n    if (this.whitespace(c)) result = WHITE;\n    else if (this.lineTerminator(c, pos, input)) result = WHITE;\n    // forward slash before generic punctuators!\n    else if (c === 0x2f) { // / (forward slash)\n      var n = input.charCodeAt(pos+1);\n      if (n === 0x2f) result = this.commentSingle(pos, input); // 0x002f=/\n      else if (n === 0x2a) result = this.commentMulti(pos, input); // 0x002f=*\n      else if (expressionStart) result = this.regex();\n      else result = this.punctuatorDiv(c,n);\n    }\n    else if (this.punctuator(c)) result = PUNCTUATOR;\n    else if (this.asciiIdentifier(c)) result = IDENTIFIER; // if ((c >= 0x61 && c <= 0x7a) || (c >= 0x41 && c <= 0x5a) || c === 0x24 || c === 0x5f) return ;\n    else if (c === 0x27) result = this.stringSingle();\n    else if (c === 0x22) result = this.stringDouble();\n    else if (this.number(c,pos,input)) result = NUMBER; // number after punctuator, check algorithm if that changes!\n    else throw 'dont know what to parse now. '+this.syntaxError();\n\n    return result;\n  },\n\n  punctuator: function(c){\n    var input = this.input;\n    var pos = this.pos;\n    var len = 0;\n\n//    >>>=,\n//    === !== >>> <<= >>=\n//    <= >= == != ++ -- << >> && || += -= *= %= &= |= ^= /=\n//    { } ( ) [ ] . ; ,< > + - * % | & ^ ! ~ ? : = /\n\n    //  (             )             {             }             [             ]             ;             ,             ?             :\n    if (c === 0x28 || c === 0x29 || c === 0x7b || c === 0x7d || c === 0x5b || c === 0x5d || c === 0x3b || c === 0x2c || c === 0x3f || c === 0x3a) len = 1;\n    else {\n      var d = input.charCodeAt(pos+1);\n\n      if (c === 0x2e) {\n        // must check for a number because number parser comes after this\n        if (d < 0x0030 || d > 0x0039) len = 1;\n      }\n      else if (c === 0x3d) {\n        if (d === 0x3d) {\n          if (input.charCodeAt(pos+2) === 0x3d) len = 3;\n          else len = 2;\n        }\n        else len = 1;\n      }\n\n      else if (c === 0x3c) {\n        if (d === 0x3d) len = 2;\n        else if (d === 0x3c) {\n          if (input.charCodeAt(pos+2) === 0x3d) len = 3;\n          else len = 2;\n        }\n        else len = 1;\n      }\n      else if (c === 0x3e) {\n        if (d === 0x3d) len = 2;\n        else if (d === 0x3e) {\n          var e = input.charCodeAt(pos+2);\n          if (e === 0x3d) len = 3;\n          else if (e === 0x3e) {\n            if (input.charCodeAt(pos+3) === 0x3d) len = 4;\n            else len = 3;\n          }\n          else len = 2;\n        }\n        else len = 1;\n      }\n\n      else if (c === 0x2b) {\n        if (d === 0x3d || d === 0x2b) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x2d) {\n        if (d === 0x3d || d === 0x2d) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x2a) {\n        if (d === 0x3d) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x25) {\n        if (d === 0x3d) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x7c) {\n        if (d === 0x3d || d === 0x7c) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x26) {\n        if (d === 0x3d || d === 0x26) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x5e) {\n        if (d === 0x3d) len = 2;\n        else len = 1;\n      }\n      else if (c === 0x21) {\n        if (d === 0x3d) {\n          if (input.charCodeAt(pos+2) === 0x3d) len = 3;\n          else len = 2;\n        }\n        else len = 1;\n      }\n      else if (c === 0x7e) {\n        if (d === 0x3d) len = 2;\n        else len = 1;\n      }\n    }\n\n    if (len) {\n      this.pos += len;\n      return true;\n    } else {\n      return false;\n    }\n  },\n  punctuatorDiv: function(c,d){\n    // cant really be a //, /* or regex because they should have been checked before calling this function\n    if (d === 0x3d) this.pos += 2; // /=\n    else {\n      ++this.pos;\n      this.lastNextNum = d;\n    }\n    return PUNCTUATOR;\n  },\n  punctuatorTok: function(c){\n    var input = this.input;\n    var pos = this.pos;\n\n//    >>>=,\n//    === !== >>> <<= >>=\n//    <= >= == != ++ -- << >> && || += -= *= %= &= |= ^= /=\n//    { } ( ) [ ] . ; ,< > + - * % | & ^ ! ~ ? : = /\n\n    if (c === 0x28) return this.puncToken(1, '(');\n    else if (c === 0x29) return this.puncToken(1, ')');\n    else if (c === 0x7b) return this.puncToken(1, '{');\n    else if (c === 0x7d) return this.puncToken(1, '}');\n    else if (c === 0x5b) return this.puncToken(1, '[');\n    else if (c === 0x5d) return this.puncToken(1, ']');\n    else if (c === 0x3b) return this.puncToken(1, ';');\n    else if (c === 0x2c) return this.puncToken(1, ',');\n    else if (c === 0x3f) return this.puncToken(1, '?');\n    else if (c === 0x3a) return this.puncToken(1, ':');\n    else {\n      var d = input.charCodeAt(pos+1);\n\n      if (c === 0x2e) {\n        if (d >= 0x0030 && d <= 0x0039) return false;\n        return this.puncToken(1, '.');\n      }\n      else if (c === 0x3d) {\n        if (d === 0x3d) {\n          if (input.charCodeAt(pos+2) === 0x3d) return this.puncToken(3, '===');\n          return this.puncToken(2, '==');\n        }\n        return this.puncToken(1, '=');\n      }\n\n      else if (c === 0x3c) {\n        if (d === 0x3d) return this.puncToken(2, '<=');\n        if (d === 0x3c) {\n          if (input.charCodeAt(pos+2) === 0x3d) return this.puncToken(3, '<<=');\n          return this.puncToken(2, '<<');\n        }\n        return this.puncToken(1, '<');\n      }\n      else if (c === 0x3e) {\n        if (d === 0x3d) return this.puncToken(2, '>=');\n        if (d === 0x3e) {\n          var e = input.charCodeAt(pos+2);\n          if (e === 0x3d) return this.puncToken(3, '>>=');\n          if (e === 0x3e) {\n            if (input.charCodeAt(pos+3) === 0x3d) return this.puncToken(4, '>>>=');\n            return this.puncToken(3, '>>>');\n          }\n          return this.puncToken(2, '>>');\n        }\n        return this.puncToken(1, '>');\n      }\n\n      else if (c === 0x2b) {\n        if (d === 0x3d) return this.puncToken(2, '+=');\n        if (d === 0x2b) return this.puncToken(2, '++');\n        return this.puncToken(1, '+');\n      }\n      else if (c === 0x2d) {\n        if (d === 0x3d) return this.puncToken(2, '-=');\n        if (d === 0x2d) return this.puncToken(2, '--');\n        return this.puncToken(1, '-');\n      }\n      else if (c === 0x2a) {\n        if (d === 0x3d) return this.puncToken(2, '*=');\n        return this.puncToken(1, '*');\n      }\n      else if (c === 0x25) {\n        if (d === 0x3d) return this.puncToken(2, '%=');\n        return this.puncToken(1, '%');\n      }\n      else if (c === 0x7c) {\n        if (d === 0x3d) return this.puncToken(2, '+=');\n        if (d === 0x7c) return this.puncToken(2, '+=');\n        return this.puncToken(1, '|');\n      }\n      else if (c === 0x26) {\n        if (d === 0x3d) return this.puncToken(2, '&=');\n        if (d === 0x26) return this.puncToken(2, '&&');\n        return this.puncToken(1, '&');\n      }\n      else if (c === 0x5e) {\n        if (d === 0x3d) return this.puncToken(2, '^=');\n        return this.puncToken(1, '^');\n      }\n      else if (c === 0x21) {\n        if (d === 0x3d) {\n          if (input.charCodeAt(pos+2) === 0x3d) return this.puncToken(3, '!==');\n          return this.puncToken(2, '!=');\n        }\n        return this.puncToken(1, '~');\n      }\n      else if (c === 0x7e) {\n        if (d === 0x3d) return this.puncToken(2, '~=');\n        return this.puncToken(1, '~');\n      }\n      else if (c === 0x2f) {\n        // cant really be a //, /* or regex because they should have been checked before calling this function\n        if (d === 0x3d) return this.puncToken(2, '/=');\n        return this.puncToken(1, '/');\n      }\n    }\n\n    return false;\n  },\n  puncToken: function(len, value){\n    this.pos += len;\n    return PUNCTUATOR;\n//    return value;\n  },\n\n  whitespace: function(c){\n    if (c === 0x0009 || c === 0x000B || c === 0x000C || c === 0x0020 || c === 0x00A0 || c === 0xFFFF) {\n      ++this.pos;\n      return true;\n    }\n    return false;\n  },\n  lineTerminator: function(c, pos, input){\n    if (c === 0x000A || c === 0x2028 || c === 0x2029) {\n      this.lastNewline = true;\n      this.pos = pos + 1;\n      return WHITE;\n    } else if (c === 0x000D){\n      this.lastNewline = true;\n      // handle \\r\\n normalization here\n      var d = input.charCodeAt(pos+1);\n      if (d === 0x000A) {\n        this.pos = pos+2;\n      } else {\n        this.lastNextNum = d;\n        this.pos = pos + 1;\n      }\n      return WHITE;\n    }\n    return false;\n  },\n  commentSingle: function(pos, input){\n    var len = input.length;\n    ++pos;\n    while (pos < len) {\n      var c = input.charCodeAt(++pos);\n      if (c === 0x000A || c === 0x000D || c === 0x2028 || c === 0x2029) break;\n    }\n    // cache the newline (or eof, whatever)\n    this.lastNextNum = c;\n    this.pos = pos;\n\n\n\n//    var rex = this.rexNewlines;\n//    rex.lastIndex = this.pos;\n//    rex.test(this.input);\n//\n//    // if not found, lastIndex will be 0. in this case, that means \"eof\".\n//    var pos = rex.lastIndex;\n//    if (pos === 0) this.pos = this.len;\n//    else this.pos = pos - 1;\n\n    return WHITE;\n  },\n  commentMulti: function(pos, input){\n    var len = input.length;\n    var hasNewline = false;\n    var c,d = input.charCodeAt(pos+=2);\n    while (pos < len) {\n      c = d;\n      d = input.charCodeAt(++pos);\n\n      if (c === 0x2a && d === 0x2f) break;\n\n      // only check one newline\n      // TODO: check whether the extra check is worth the overhead for eliminating repetitive checks\n      // (hint: if you generally check more characters here than you can skip, it's not worth it)\n      if (hasNewline || c === 0x000A || c === 0x000D || c === 0x2028 || c === 0x2029) hasNewline = this.lastNewline = true;\n    }\n    this.pos = pos+1;\n\n    /*\n    var end = this.input.indexOf('*\\/',this.pos+2)+2;\n    if (end == 1) throw new Error('Unable to find end of multiline comment started on pos '+this.pos);\n\n    // search for newline (important for ASI)\n    var nls = this.rexNewlineSearchInMultilineComment;\n    nls.lastIndex = this.pos+2;\n    // not dead code. we're checking the nls regex for its lastIndex property\n    // if it matches end, there was no newline (it will match * /), if it didnt\n    // match end, it will match a newline earlier\n    nls.test(this.input);\n    if (nls.lastIndex !== end) this.lastNewline = true;\n    this.pos = end;\n    */\n\n    return WHITE;\n  },\n  stringSingle: function(){\n    var pos = this.pos + 1;\n    var input = this.input;\n    var len = input.length;\n\n    while (pos < len) {\n      var c = input.charCodeAt(pos++);\n      if (c === 0x0027) { // ' (single quote)\n          this.pos = pos;\n          return STRING;\n      }\n      if (c === 0x005c) pos = this.stringEscape(pos); // \\ (backslash)\n      if (c === 0x000A || c === 0x000D || c === 0x2028 || c === 0x2029) throw 'No newlines in strings!';\n    }\n\n    throw 'Unterminated string found at '+pos;\n  },\n  stringDouble: function(){\n    var pos = this.pos + 1;\n    var input = this.input;\n    var len = input.length;\n\n    while (pos < len) {\n      var c = input.charCodeAt(pos++);\n\n      if (c === 0x0022) { // \" (double quote)\n        this.pos = pos;\n        return STRING;\n      }\n      if (c === 0x005c) pos = this.stringEscape(pos); // \\ (backslash)\n      if (c === 0x000A || c === 0x000D || c === 0x2028 || c === 0x2029) throw 'No newlines in strings!';\n    }\n\n    throw 'Unterminated string found at '+pos;\n  },\n  stringEscape: function(pos){\n    var input = this.input;\n    var c = input.charCodeAt(pos);\n\n    // unicode escapes\n    if (c === 0x0075) { // u\n      if (this.unicode(pos+1)) pos += 4;\n      else throw 'Invalid unicode escape';\n    // hex escapes\n    } else if (c === 0x0078) {\n      if (this.hexicode(input.charCodeAt(pos+1)) && this.hexicode(input.charCodeAt(pos+2))) pos += 2;\n      else throw 'Invalid hex escape';\n    // skip windows newlines as if they're one char\n    } else if (c === 0x000D) {\n      if (input.charCodeAt(pos+1) === 0x000A) ++pos;\n    }\n    return pos+1;\n  },\n  unicode: function(pos){\n    var input = this.input;\n\n    return this.hexicode(input.charCodeAt(pos)) && this.hexicode(input.charCodeAt(pos+1)) && this.hexicode(input.charCodeAt(pos+2)) && this.hexicode(input.charCodeAt(pos+3));\n  },\n  hexicode: function(c){\n    // 0-9, a-f, A-F\n    return ((c >= 0x30 && c <= 0x39) || (c >= 0x61 && c <= 0x66) || (c >= 0x41 && c <= 0x46));\n  },\n\n  number: function(c, pos, input){\n    // leading zero can mean decimal or hex literal\n    if (c === 0x0030) this.decOrHex(c, pos, input);\n    // 1-9 just means decimal literal\n    else if (c >= 0x0031 && c <= 0x0039) this.decimalNumber(input.charCodeAt(pos+1), pos+1, input); // do this after punctuator... the -1 is kind of a hack in that\n    // dot means decimal, without the leading digits\n    else if (c === 0x2e) this.decimalFromDot(c, pos, input); // dot, start of the number\n    // yeah, no number. move on.\n    else return false;\n    // we parsed a number.\n    return true;\n  },\n  decOrHex: function(c, pos, input){\n    // numeric is either a decimal or hex\n    // 0.1234  .123  .0  0.  0e12 0e-12 0e12+ 0.e12 0.1e23 0xdeadbeeb\n\n    var d = input.charCodeAt(pos+1);\n    if (d === 0x0058 || d === 0x0078) { // x or X\n      this.hexNumber(pos+2);\n    } else {\n      // next can only be numbers or dots...\n      this.decimalNumber(d, pos+1, input);\n    }\n\n    return NUMBER;\n  },\n  decimalNumber: function(c, pos, input){\n    // leading digits. assume c is preceeded by at least one digit (that might have been zero..., tofix in the future)\n    while (c >= 0x30 & c <= 0x39) c = input.charCodeAt(++pos);\n    // .123e+40 part\n    return this.decimalFromDot(c, pos, input);\n  },\n  decimalFromDot: function(c, pos, input){\n    if (c === 0x002e) { // dot\n      c = input.charCodeAt(++pos);\n      while (c >= 0x30 & c <= 0x39) c = input.charCodeAt(++pos);\n    }\n\n    if (c === 0x0045 || c === 0x0065) { // e or E\n      c = input.charCodeAt(++pos);\n      // sign is optional\n      if (c === 0x002b || c === 0x002d) c = input.charCodeAt(++pos);\n\n      // first digit is mandatory\n      if (c >= 0x30 & c <= 0x39) c = input.charCodeAt(++pos);\n      else throw 'Missing required digits after exponent. '+this.syntaxError();\n\n      // rest is optional\n      while (c >= 0x30 & c <= 0x39) c = input.charCodeAt(++pos);\n    }\n\n    // c will be the first character of the next token. store it\n    // to save us a duplicate call to charCodeAt\n    this.lastNextNum = c;\n\n    this.pos = pos;\n\n    return NUMBER;\n  },\n  decimalSub: function(c, pos, input){\n    while (c >= 0x30 & c <= 0x39) c = input.charCodeAt(++pos);\n    return pos;\n  },\n  hexNumber: function(pos){\n    var input = this.input;\n    var len = input.length;\n    // hex\n    while (pos < len && this.hexicode(input.charCodeAt(pos))) ++pos;\n    this.pos = pos;\n  },\n\n  regex: function(){\n    // /foo/\n    // /foo[xyz]/\n    // /foo(xyz)/\n    // /foo{xyz}/\n    // /foo(?:foo)/\n    // /foo(!:foo)/\n    // /foo(?!foo)bar/\n    // /foo\\dbar/\n    this.pos++;\n    this.regexBody();\n//    this.pos++;\n    this.regexFlags();\n\n    return REGEX;\n  },\n  regexBody: function(){\n    var input = this.input;\n    var len = input.length;\n    while (this.pos < len) {\n      var c = input.charCodeAt(this.pos++);\n\n      if (c === 0x005c) { // backslash\n        var d = input.charCodeAt(this.pos++);\n        if (d === 0x000D || d === 0x000A || d === 0x2028 || d === 0x2029) {\n          throw new Error('Newline can not be escaped in regular expression at '+this.pos);\n        }\n      } else if (c === 0x0028) { // opening paren\n        this.regexBody();\n      } else if (c === 0x0029 || c === 0x002f) { // closing paren or forward slash\n        return;\n      } else if (c === 0x005b) { // opening square bracket\n        this.regexClass();\n      } else if (c === 0x000D || c === 0x000A || c === 0x2028 || c === 0x2029) { // newlines\n        throw new Error('Newline can not be escaped in regular expression at '+this.pos);\n      }\n    }\n\n    throw new Error('Unterminated regular expression at eof');\n  },\n  regexClass: function(){\n    var input = this.input;\n    var len = input.length;\n    var pos = this.pos;\n    while (pos < len) {\n      var c = input.charCodeAt(pos++);\n\n      if (c === 0x005d) { // ]\n        this.pos = pos;\n        return;\n      }\n      if (c === 0x000D || c === 0x000A || c === 0x2028 || c === 0x2029) {\n        throw 'Illegal newline in regex char class at '+pos;\n      }\n      if (c === 0x005c) { // backslash\n        var d = input.charCodeAt(pos++);\n        if (d === 0x000D || d === 0x000A || d === 0x2028 || d === 0x2029) {\n          throw new Error('Newline can not be escaped in regular expression at '+pos);\n        }\n      }\n    }\n\n    throw new Error('Unterminated regular expression at eof');\n  },\n  regexFlags: function(){\n    // we cant use the actual identifier parser because that's assuming the identifier\n    // starts at the beginning of this token, which is not the case for regular expressions.\n    // so we use the remainder parser, which parses the second up to the rest of the identifier\n\n    this.pos = this.asciiIdentifierRest(0);\n\n//    this.asciiIdentifier();\n  },\n  asciiIdentifier: function(c){\n    var toAdd = this.asciiIdentifierStart(c);\n    if (toAdd === 0) return false;\n\n    // 2nd char up till the end of the identifier\n    this.pos = this.asciiIdentifierRest(toAdd);\n\n    return true;\n  },\n  asciiIdentifierStart: function(c){\n    // a-z A-Z $ _ (no number here!)\n    if ((c >= 0x61 && c <= 0x7a) || (c >= 0x41 && c <= 0x5a) || c === 0x24 || c === 0x5f) {\n      return 1;\n      // \\uxxxx\n    } else if (c === 0x5c) {\n      var pos = this.pos;\n      if (this.input.charCodeAt(pos+1) === 0x75 && this.unicode(pos+2)) {\n        return 6;\n      } else {\n        throw 'No backslash in identifier (xept for \\\\u). '+this.syntaxError();\n      }\n    } else {\n      // tofix: non-ascii identifiers\n      // do nothing so we return 0\n      return 0;\n    }\n  },\n  asciiIdentifierRest: function(toAdd){\n    var input = this.input;\n    var len = input.length;\n    var pos = this.pos + toAdd;\n\n    // also used by regex flag parser\n    while (pos < len) {\n      var c = input.charCodeAt(pos);\n\n      // a-z A-Z 0-9 $ _\n      if ((c >= 0x61 && c <= 0x7a) || (c >= 0x41 && c <= 0x5a) || (c >= 0x30 && c <= 0x39) || c === 0x24 || c === 0x5f) {\n        ++pos;\n        // \\uxxxx\n      } else if (c === 0x5c && input.charCodeAt(pos+1) === 0x75 && this.unicode(pos+2)) {\n        pos += 6;\n      } else {\n        this.lastNextNum = c;\n        // tofix: non-ascii identifiers\n        break;\n      }\n    }\n\n    return pos;\n  },\n\n  getLastValue: function(){\n    return this.lastValue || (this.lastValue = this.input.substring(this.lastStart, this.lastStop));\n\n//    // this seems slightly slower\n//    var val = this.lastValue;\n//    if (!val) {\n//      var input = this.input;\n//      val = this.lastValue = input.substring(this.lastStart, this.lastStop);\n//    }\n//    return val;\n  },\n  getLastNum: function(){\n    if (this.lastNum === -1) return this.lastNum = this.input.charCodeAt(this.lastStart);\n    return this.lastNum;\n  },\n\n  debug: function(){\n    return '`'+this.getLastValue()+'` @ '+this.pos+' ('+Tok[this.lastType]+')';\n  },\n  syntaxError: function(value){\n    return 'A syntax error at pos='+this.pos+\" expected \"+(typeof value == 'number' ? 'type='+Tok[value] : 'value=`'+value+'`')+' is `'+this.getLastValue()+'` '+\n        '('+Tok[this.lastType]+') #### `'+this.input.substring(this.pos-2000, this.pos)+'#|#'+this.input.substring(this.pos, this.pos+2000)+'`'\n  },\n};\n\n// ### ../../zeparser2/src/par.js ###\nvar Par = function(input){\n    this.tok = new Tok(input);\n};\n\nPar.prototype = {\n  run: function(){\n    // prepare\n//    if (this.tok.input === '500') debugger\n    this.tok.nextExpr();\n    // go!\n    this.parseStatements(false, false, false, []);\n    if (this.tok.pos != this.tok.len) throw 'Did not complete parsing... '+this.tok.syntaxError();\n  },\n\n  parseStatements: function(inFunction, inLoop, inSwitch, labelSet){\n    // note: statements are optional, this function might not parse anything\n    while (!this.tok.isType(EOF) && this.parseStatement(inFunction, inLoop, inSwitch, labelSet, true));\n  },\n  parseStatement: function(inFunction, inLoop, inSwitch, labelSet, optional){\n    var tok = this.tok;\n    if (tok.isType(IDENTIFIER)) {\n      // dont \"just\" return true. case and default still return false\n      return this.parseIdentifierStatement(inFunction, inLoop, inSwitch, labelSet);\n    }\n\n    var c = tok.getLastNum();\n\n    if (c === 0x7b) { // {\n      tok.nextExpr();\n      this.parseBlock(inFunction, inLoop, inSwitch, labelSet);\n      return true;\n    }\n\n    if (c === 0x3b) { // ; // empty statement\n      // this shouldnt occur very often, but they still do.\n      tok.nextExpr();\n      return true;\n    }\n\n    if (\n      c === 0x28 || // (\n      c === 0x5b || // [\n      c === 0x7e || // ~\n      c === 0x2b || // + (either + or ++)\n      c === 0x2d || // - (either - or --)\n      c === 0x21    // !\n    ) {\n      this.parseExpressionStatement();\n      return true;\n    }\n\n    if (tok.isValue()) {\n      this.parseExpressionStatement();\n      return true;\n    }\n\n    if (!optional) throw 'Expected more input...';\n    return false;\n  },\n  parseIdentifierStatement: function(inFunction, inLoop, inSwitch, labelSet){\n    var tok = this.tok;\n\n    // yes, this makes \"huge\" difference\n    var c = this.tok.getLastNum();\n\n    if (c === 0x76 && tok.getLastValue() === 'var') this.parseVar();\n    else if (c === 0x69 && tok.getLastValue() === 'if') this.parseIf(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x64 && tok.getLastValue() === 'do') this.parseDo(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x77 && tok.getLastValue() === 'while') this.parseWhile(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x66 && tok.getLastValue() === 'for') this.parseFor(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x74 && tok.getLastValue() === 'throw') this.parseThrow();\n    else if (c === 0x73 && tok.getLastValue() === 'switch') this.parseSwitch(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x74 && tok.getLastValue() === 'try') this.parseTry(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x64 && tok.getLastValue() === 'debugger') this.parseDebugger();\n    else if (c === 0x77 && tok.getLastValue() === 'with') this.parseWith(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x66 && tok.getLastValue() === 'function') this.parseFunction();\n    else if (c === 0x63 && tok.getLastValue() === 'continue') this.parseContinue(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x62 && tok.getLastValue() === 'break') this.parseBreak(inFunction, inLoop, inSwitch, labelSet);\n    else if (c === 0x72 && tok.getLastValue() === 'return') this.parseReturn(inFunction, inLoop, inSwitch);\n    // case and default are handled elsewhere\n    else if ((c === 0x63 && tok.getLastValue() === 'case') || (c === 0x64 && tok.getLastValue() === 'default')) return false;\n    else this.parseExpressionOrLabel(inFunction, inLoop, inSwitch, labelSet);\n\n    return true;\n  },\n  parseStatementHeader: function(){\n    var tok = this.tok;\n    tok.mustBeNum(0x28, true); // (\n    this.parseExpressions();\n    tok.mustBeNum(0x29, true); // )\n  },\n\n  parseVar: function(){\n    // var <vars>\n    // - foo\n    // - foo=bar\n    // - ,foo=bar\n\n    var tok = this.tok;\n    tok.nextPunc();\n    do {\n      if (this.isReservedIdentifier()) throw 'var name is reserved';\n      tok.mustBeIdentifier(true);\n      if (tok.nextExprIfNum(0x3d)) { // =\n        this.parseExpression(false);\n      }\n    } while(tok.nextExprIfNum(0x2c)); // ,\n    this.parseSemi();\n\n    return true;\n  },\n  parseVarPartNoIn: function(){\n    var tok = this.tok;\n    tok.nextPunc();\n    do {\n      if (this.isReservedIdentifier()) throw 'var name is reserved';\n      tok.mustBeIdentifier(true);\n      if (tok.nextExprIfNum(0x3d)) { // =\n          this.parseExpressionNoIn(true);\n      }\n    } while(tok.nextExprIfNum(0x2c)); // ,\n  },\n  parseIf: function(inFunction, inLoop, inSwitch, labelSet){\n    // if (<exprs>) <stmt>\n    // if (<exprs>) <stmt> else <stmt>\n\n    this.tok.nextPunc();\n    this.parseStatementHeader();\n    this.parseStatement(inFunction, inLoop, inSwitch, labelSet);\n\n    this.parseElse(inFunction, inLoop, inSwitch, labelSet);\n\n    return true;\n  },\n  parseElse: function(inFunction, inLoop, inSwitch, labelSet){\n    // else <stmt>;\n\n    var tok = this.tok;\n    if (tok.getLastValue() === 'else') {\n      tok.nextExpr();\n      this.parseStatement(inFunction, inLoop, inSwitch, labelSet);\n    }\n  },\n  parseDo: function(inFunction, inLoop, inSwitch, labelSet){\n    // do <stmt> while ( <exprs> ) ;\n\n    var tok = this.tok;\n    tok.nextExpr(); // do\n    this.parseStatement(inFunction, true, inSwitch, labelSet);\n    tok.mustBeString('while', false);\n    tok.mustBeNum(0x28, true); // (\n    this.parseExpressions();\n    tok.mustBeNum(0x29, false); // ) (no regex following because it's either semi or newline without asi if a forward slash follows it\n    this.parseSemi();\n  },\n  parseWhile: function(inFunction, inLoop, inSwitch, labelSet){\n    // while ( <exprs> ) <stmt>\n\n    this.tok.nextPunc();\n    this.parseStatementHeader();\n    this.parseStatement(inFunction, true, inSwitch, labelSet);\n  },\n  parseFor: function(inFunction, inLoop, inSwitch, labelSet){\n    // for ( <expr-no-in-=> in <exprs> ) <stmt>\n    // for ( var <idntf> in <exprs> ) <stmt>\n    // for ( var <idntf> = <exprs> in <exprs> ) <stmt>\n    // for ( <expr-no-in> ; <expr> ; <expr> ) <stmt>\n\n    // need to excavate this... investigate specific edge cases for `for-in`\n\n    var tok = this.tok;\n    tok.nextPunc(); // for\n    tok.mustBeNum(0x28, true); // (\n\n    if (tok.nextExprIfNum(0x3b)) this.parseForEachHeader(); // ; (means empty first expression in for-each)\n    else {\n      if (tok.isNum(0x76) && tok.isString('var')) this.parseVarPartNoIn();\n      else this.parseExpressionsNoIn();\n\n      // 3b = ;\n      if (tok.nextExprIfNum(0x3b)) this.parseForEachHeader();\n      else this.parseForInHeader();\n    }\n\n    tok.mustBeNum(0x29, true); // )\n    this.parseStatement(inFunction, true, inSwitch, labelSet);\n  },\n  parseForEachHeader: function(){\n    // <expr> ; <expr> ) <stmt>\n\n    this.parseOptionalExpressions();\n    this.tok.mustBeNum(0x3b, true); // ;\n    this.parseOptionalExpressions();\n  },\n  parseForInHeader: function(){\n    // in <exprs> ) <stmt>\n\n    this.tok.mustBeString('in', true);\n    this.parseExpressions();\n  },\n  parseContinue: function(inFunction, inLoop, inSwitch, labelSet){\n    // continue ;\n    // continue <idntf> ;\n    // newline right after keyword = asi\n\n    if (!inLoop) throw 'Can only continue in a loop. '+this.tok.syntaxError();\n\n    var tok = this.tok;\n    tok.nextPunc(); // token after continue cannot be a regex, either way.\n\n    if (!tok.lastNewline && tok.isType(IDENTIFIER)) {\n      this.parseLabel(labelSet);\n    }\n\n    this.parseSemi();\n  },\n  parseBreak: function(inFunction, inLoop, inSwitch, labelSet){\n    // break ;\n    // break <idntf> ;\n    // break \\n <idntf> ;\n    // newline right after keyword = asi\n\n    var tok = this.tok;\n    tok.nextPunc(); // token after break cannot be a regex, either way.\n\n    var noLabel = tok.lastNewline || !tok.isType(IDENTIFIER);\n\n    if (noLabel) {\n      if (!inLoop && !inSwitch) {\n        // break without label\n        throw 'Break without value only in loops or switches. '+tok.syntaxError();\n      }\n    } else {\n      this.parseLabel(labelSet);\n    }\n\n    this.parseSemi();\n  },\n  parseLabel: function(labelSet){\n    var tok = this.tok;\n    // next tag must be an identifier\n    var label = tok.getLastValue();\n    if (labelSet.indexOf(label) >= 0) {\n      tok.nextExpr(); // label\n    } else {\n      throw 'Label ['+label+'] not found in label set. '+tok.syntaxError();\n    }\n  },\n  parseReturn: function(inFunction, inLoop, inSwitch){\n    // return ;\n    // return <exprs> ;\n    // newline right after keyword = asi\n\n    if (!inFunction) throw 'Can only return in a function '+this.tok.syntaxError('break');\n\n    var tok = this.tok;\n    tok.nextExpr();\n    if (tok.lastNewline) this.addAsi();\n    else {\n      this.parseOptionalExpressions();\n      this.parseSemi();\n    }\n  },\n  parseThrow: function(){\n    // throw <exprs> ;\n\n    var tok = this.tok;\n    tok.nextExpr();\n    if (tok.lastNewline) this.addAsi();\n    else {\n      this.parseExpressions();\n      this.parseSemi();\n    }\n  },\n  parseSwitch: function(inFunction, inLoop, inSwitch, labelSet){\n    // switch ( <exprs> ) { <switchbody> }\n\n    var tok = this.tok;\n    tok.nextPunc();\n    this.parseStatementHeader();\n    tok.mustBeNum(0x7b, true); // {\n    this.parseSwitchBody(inFunction, inLoop, true, labelSet);\n    tok.mustBeNum(0x7d, true); // }\n  },\n  parseSwitchBody: function(inFunction, inLoop, inSwitch, labelSet){\n    // [<cases>] [<default>] [<cases>]\n\n    // default can go anywhere...\n    this.parseCases(inFunction, inLoop, inSwitch, labelSet);\n    if (this.tok.nextPuncIfString('default')) {\n      this.parseDefault(inFunction, inLoop, inSwitch, labelSet);\n      this.parseCases(inFunction, inLoop, inSwitch, labelSet);\n    }\n  },\n  parseCases: function(inFunction, inLoop, inSwitch, labelSet){\n    while (this.tok.nextPuncIfString('case')) {\n      this.parseCase(inFunction, inLoop, inSwitch, labelSet);\n    }\n  },\n  parseCase: function(inFunction, inLoop, inSwitch, labelSet){\n    // case <value> : <stmts-no-case-default>\n    this.parseExpressions();\n    this.tok.mustBeNum(0x3a,true); // :\n    this.parseStatements(inFunction, inLoop, inSwitch, labelSet);\n  },\n  parseDefault: function(inFunction, inLoop, inSwitch, labelSet){\n    // default <value> : <stmts-no-case-default>\n    this.tok.mustBeNum(0x3a,true); // :\n    this.parseStatements(inFunction, inLoop, inSwitch, labelSet);\n  },\n  parseTry: function(inFunction, inLoop, inSwitch, labelSet){\n    // try { <stmts> } catch ( <idntf> ) { <stmts> }\n    // try { <stmts> } finally { <stmts> }\n    // try { <stmts> } catch ( <idntf> ) { <stmts> } finally { <stmts> }\n\n    this.tok.nextPunc();\n    this.parseCompleteBlock(inFunction, inLoop, inSwitch, labelSet);\n\n    var one = this.parseCatch(inFunction, inLoop, inSwitch, labelSet);\n    var two = this.parseFinally(inFunction, inLoop, inSwitch, labelSet);\n\n    if (!one && !two) throw 'Try must have at least a catch or finally block or both: '+this.tok.debug();\n  },\n  parseCatch: function(inFunction, inLoop, inSwitch, labelSet){\n    // catch ( <idntf> ) { <stmts> }\n\n    var tok = this.tok;\n    if (tok.nextPuncIfString('catch')) {\n      tok.mustBeNum(0x28, false); // (\n      tok.mustBeIdentifier(false);\n      tok.mustBeNum(0x29, false); // )\n      this.parseCompleteBlock(inFunction, inLoop, inSwitch, labelSet);\n\n      return true;\n    }\n    return false;\n  },\n  parseFinally: function(inFunction, inLoop, inSwitch, labelSet){\n    // finally { <stmts> }\n\n    if (this.tok.nextPuncIfString('finally')) {\n      this.parseCompleteBlock(inFunction, inLoop, inSwitch, labelSet);\n\n      return true;\n    }\n    return false;\n  },\n  parseDebugger: function(){\n    // debugger ;\n\n    this.tok.nextPunc();\n    this.parseSemi();\n  },\n  parseWith: function(inFunction, inLoop, inSwitch, labelSet){\n    // with ( <exprs> ) <stmts>\n\n    this.tok.nextPunc();\n    this.parseStatementHeader();\n    this.parseStatement(inFunction, inLoop, inSwitch, labelSet);\n  },\n  parseFunction: function(){\n    // function [<idntf>] ( [<param>[,<param>..] ) { <stmts> }\n\n    var tok = this.tok;\n    tok.nextPunc(); // 'function'\n    if (tok.isType(IDENTIFIER)) { // name\n      if (this.isReservedIdentifier()) throw 'function name is reserved';\n      tok.nextPunc();\n    }\n    this.parseFunctionRemainder(-1);\n  },\n  parseNamedFunction: function(hasName){\n    // function [<idntf>] ( [<param>[,<param>..] ) { <stmts> }\n\n    var tok = this.tok;\n    tok.nextPunc(); // 'function'\n    tok.mustBeIdentifier(false); // name\n    this.parseFunctionRemainder(-1);\n  },\n  /**\n   * Parse the function param list and body\n   *\n   * @param {number} paramCount Number of expected params, -1/undefined means no requirement. used for getters and setters\n   */\n  parseFunctionRemainder: function(paramCount){\n    var tok = this.tok;\n    tok.mustBeNum(0x28, false); // (\n    this.parseParameters(paramCount);\n    tok.mustBeNum(0x29, false); // )\n    this.parseCompleteBlock(true, false, false, []); // this resets loop and switch status\n  },\n  parseParameters: function(paramCount){\n    // [<idntf> [, <idntf>]]\n    var tok = this.tok;\n    if (tok.isType(IDENTIFIER)) {\n      if (paramCount === 0) throw 'Getters have no parameters';\n      if (this.isReservedIdentifier()) throw 'param name is reserved';\n      tok.next(true); // TOFIX: make this `nextIdentifier` or something...\n      // there are only two valid next tokens; either a comma or a closing paren\n      while (tok.nextExprIfNum(0x2c)) { // ,\n        if (paramCount === 1) throw 'Setters have exactly one param';\n        tok.mustBeIdentifier(false);\n      }\n    } else if (paramCount === 1) {\n      throw 'Setters have exactly one param';\n    }\n  },\n  parseBlock: function(inFunction, inLoop, inSwitch, labelSet){\n    this.parseStatements(inFunction, inLoop, inSwitch, labelSet);\n    this.tok.mustBeNum(0x7d, true); // }\n    return true; // why again?\n  },\n  parseCompleteBlock: function(inFunction, inLoop, inSwitch, labelSet){\n    this.tok.mustBeNum(0x7b, true); // {\n    this.parseBlock(inFunction, inLoop, inSwitch, labelSet);\n  },\n  parseSemi: function(){\n    if (this.tok.nextExprIfNum(0x3b)) return PUNCTUATOR; // ;\n    if (this.parseAsi()) return ASI;\n    throw 'Unable to parse semi, unable to apply ASI. '+this.tok.syntaxError();\n  },\n  parseAsi: function(){\n    // asi at EOF, if next token is } or if there is a newline between prev and next (black) token\n    // asi prevented if asi would be empty statement, no asi in for-header, no asi if next token is regex\n\n    var tok = this.tok;\n    // 0x7d=}\n    if (tok.isNum(0x7d) || (tok.lastNewline && !tok.isType(REGEX) || tok.isType(EOF))) {\n      return this.addAsi();\n    }\n    return false;\n  },\n  addAsi: function(){\n    ++this.tok.tokenCount;\n    return ASI;\n  },\n\n  parseExpressionStatement: function(){\n    this.parseExpressions();\n    this.parseSemi();\n\n    return true;\n  },\n  parseExpressionOrLabel: function(inFunction, inLoop, inSwitch, labelSet){\n    var found = this.parseExpressionForLabel(inFunction, inLoop, inSwitch, labelSet);\n    if (!found) {\n      if (this.tok.nextExprIfNum(0x2c)) this.parseExpressions();\n      this.parseSemi();\n    }\n  },\n  parseExpressionForLabel: function(inFunction, inLoop, inSwitch, labelSet){\n    // dont check for label if you can already see it'll fail\n    var checkLabel = this.tok.isType(IDENTIFIER);\n    if (checkLabel) {\n      var labelName = this.tok.getLastValue();\n\n      // ugly but mandatory label check\n      // if this is a label, the parsePrimary parser\n      // will have bailed when seeing the colon.\n      if (this.parsePrimaryOrLabel() && this.tok.nextExprIfNum(0x3a)) { // :\n        labelSet.push(labelName);\n        this.parseStatement(inFunction, inLoop, inSwitch, labelSet);\n        labelSet.pop();\n        return true;\n      }\n    } else {\n      // parse a value and then just random stuff\n      this.parsePrimary(false, false);\n      this.parseNonAssignments();\n    }\n\n    this.parseAssignments();\n    this.parseNonAssignments();\n    return false;\n  },\n  parseOptionalExpressions: function(){\n    if (this.parseExpression(true)) {\n      while (this.tok.nextExprIfNum(0x2c)) { // ,\n        this.parseExpression(false);\n      }\n    }\n  },\n  parseExpressions: function(){\n    if (this.parseExpression(false)) {\n      while (this.tok.nextExprIfNum(0x2c)) { // ,\n        this.parseExpression(false);\n      }\n    }\n  },\n  parseExpression: function(optional){\n    var tok = this.tok;\n    if (tok.isType(EOF)) throw 'Missing expression (EOF). '+tok.syntaxError();\n    var pos = tok.pos;\n\n    this.parsePrimary(optional, false);\n\n    this.parseAssignments();\n    this.parseNonAssignments();\n\n    if (!optional && tok.pos === pos && !tok.isType(EOF)) throw 'Missing expression. '+tok.syntaxError();\n    return tok.pos !== pos;\n  },\n  parseAssignments: function(){\n    var parsed = false;\n    // assignment ops are allowed until the first non-assignment binary op\n    while (this.isAssignmentOperator()) {\n      this.parsePrimaryAfter();\n      parsed = true;\n    }\n    return parsed; // for for-in header checks\n  },\n  parseNonAssignments: function(){\n    // keep parsing non-assignment binary/ternary ops\n    while (true) {\n      if (this.isBinaryOperator()) this.parsePrimaryAfter();\n      else if (this.tok.isNum(0x3f)) this.parseTernary(); // ?\n      else break;\n    }\n  },\n  parseTernary: function(){\n    var tok = this.tok;\n    tok.nextExpr();\n    this.parseExpression(false);\n    tok.mustBeNum(0x3a,true); // :\n    this.parseExpression(false);\n  },\n  parseTernaryNoIn: function(){\n    var tok = this.tok;\n    tok.nextExpr();\n    this.parseExpression(false);\n    tok.mustBeNum(0x3a,true); // :\n    this.parseExpressionNoIn(true);\n  },\n  parsePrimaryAfter: function(){\n    this.tok.nextExpr();\n    this.parsePrimary(false, false);\n  },\n  parseExpressionsNoIn: function(){\n    var tok = this.tok;\n    do {\n      this.parseExpressionNoIn();\n    } while (tok.nextExprIfNum(0x2c));\n  },\n  parseExpressionNoIn: function(canHaveAssignment){\n    this.parsePrimary(false, true);\n\n    // TOFIX: i think i should drop first while to fix `illegal bare assignment in for-in`\n    //        because `for (x=y in z);` is not valid syntax (`for ((x=y)in z);` would be)\n    //        but note that this is used for both var and non-var for-in's, so check for that.\n\n    var parsedAssignment = this.parseAssignments();\n\n    var tok = this.tok;\n    // keep parsing non-assignment binary/ternary ops unless `in`\n    while (true) {\n      if (this.isBinaryOperator()) {\n        // TOFIX: check the `n` as a number too...\n        // rationale for checking number; this is the `in` check which will succeed\n        // about 50% of the time (stats from 8mb of various js). the other time it\n        // will check for a primary. it's therefore more likely that an isnum will\n        // save time because it would cache the charCodeAt for the other token if\n        // it failed the check\n        if (tok.isNum(0x69) && tok.isString('in')) {\n          if (parsedAssignment && !canHaveAssignment) throw 'No regular assignments in a for-in lhs...';\n          break;\n        } else {\n          this.parsePrimaryAfter();\n        }\n      }\n      else if (tok.isNum(0x3f)) this.parseTernaryNoIn(); // ?\n      else break;\n    }\n  },\n  /**\n   * Parse the \"primary\" expression value. This is like the root\n   * value for any expression. Could be a number, string,\n   * identifier, etc. The primary can have a prefix (like unary\n   * operators) and suffixes (++, --) but they are parsed elsewhere.\n   *\n   * @param {boolean} optional=false Whether the primary might be absent (for optional expressions)\n   * @param {boolean} noIn=false Whether the `in` operator may be parsed (for-in header lhs)\n   */\n  parsePrimary: function(optional, noIn){\n    // parses parts of an expression without any binary operators\n\n    this.parseUnary();\n    var tok = this.tok;\n    if (tok.isType(IDENTIFIER)) {\n      if (tok.isNum(0x66) && tok.getLastValue() === 'function') {\n        this.parseFunction();\n      } else {\n        if (this.isReservedNonValueIdentifier()) throw 'Reserved identifier found in expression';\n        tok.nextPunc();\n      }\n    } else {\n      this.parsePrimaryValue(optional, noIn);\n    }\n\n    this.parsePrimarySuffixes();\n  },\n  parsePrimaryOrLabel: function(){\n    // note: this function is only executed for identifiers...\n    // note: this function is only executed for statement starts. the\n    //       function keyword will already have been filtered out by\n    //       the main statement start parsing method. So we dont have\n    //       to check for the function keyword here; it cant occur.\n    var tok = this.tok;\n    if (tok.isType(EOF)) throw 'Missing expression part or label. '+tok.syntaxError();\n    // parses parts of an expression without any binary operators\n\n    var pos = tok.pos;\n\n    // if we parse any unary, we wont have to check for label\n    var hasPrefix = this.parseUnary();\n\n    // simple shortcut: this function is only called if (at\n    // the time of calling) the next token was an identifier.\n    // if parseUnary returns true, we wont know what the type\n    // of the next token is. otherwise it must still be identifier!\n    if (!hasPrefix || tok.isType(IDENTIFIER)) {\n      // (see note above; we dont have to check for function here)\n      if (this.isReservedNonValueIdentifier()) throw 'Reserved identifier found in expression. '+tok.syntaxError();\n      tok.nextPunc();\n\n      // now's the time... you just ticked off an identifier, check the current token for being a colon!\n      // (quick check first: if there was a unary operator, this cant be a label)\n      if (!hasPrefix) {\n        // 3a = :\n        if (tok.isNum(0x3a)) {\n          if (this.isValueKeyword()) throw 'Reserved identifier found in label. '+tok.syntaxError();\n          return true;\n        }\n      }\n    } else {\n      // TOFIX: does this ever happen? if the next token was an identifier and this is the statement start\n      //        there must have been a unary operator preceeding it in order to get to here. in that case\n      //        it must be one of delete, new, or void. i suppose it could be possible to parse a(ny) value\n      //        in the case of `void`. it could be `this` in the case of `delete` (and `new`, though that's\n      //        an extreme edge case... it would mean `this` is a function. when does that happen.)\n      //        However, note that these fizzles are very rare. in the 8mb test suite, it only _reaches_\n      //        here five times (always turned out to be a group). I mean, not quite the biggest possible gain.\n      this.parsePrimaryValue(false, false);\n    }\n\n    this.parsePrimarySuffixes();\n\n    if (tok.pos === pos && !tok.isType(EOF)) throw 'Missing expression part. '+tok.syntaxError();\n\n    return false;\n  },\n  parsePrimaryValue: function(optional, noIn){\n    // at this point in the expression parser we will\n    // have ruled out anything else. the next token(s) must\n    // be some kind of expression value...\n    var tok = this.tok;\n    if (!tok.nextPuncIfValue()) {\n      if (tok.nextExprIfNum(0x28)) this.parseGroup(noIn);\n      else if (tok.nextExprIfNum(0x7b)) this.parseObject();\n      else if (tok.nextExprIfNum(0x5b)) this.parseArray();\n      else if (!optional) throw 'Missing expression part. '+tok.syntaxError();\n    }\n  },\n  parseUnary: function(){\n    var parsed = false;\n    var tok = this.tok;\n    while (!tok.isType(EOF) && this.testUnary()) {\n      tok.nextExpr();\n      parsed = true;\n    }\n    return parsed; // return bool to determine possibility of label\n  },\n  testUnary: function(){\n    // this method works under the assumption that the current token is\n    // part of the set of valid tokens for js. So we don't have to check\n    // for string lengths unless we need to disambiguate optional chars\n\n    // regexUnary: /^(?:delete|void|typeof|new|\\+\\+?|--?|~|!)$/,\n    var tok = this.tok;\n    var c = tok.getLastNum();\n\n    if (c === 0x6e && tok.getLastValue() === 'new') return true;\n    if (c === 0x74 && tok.getLastValue() === 'typeof') return true;\n    if (c === 0x64 && tok.getLastValue() === 'delete') return true;\n    if (c === 0x2b) {\n      if (tok.lastStop - tok.lastStart === 1) return true; // +\n      if (tok.getLastValue().charCodeAt(1) === 0x2b) return true; // ++\n    }\n    if (c === 0x2d) {\n      if (tok.lastStop - tok.lastStart === 1) return true; // -\n      if (tok.getLastValue().charCodeAt(1) === 0x2d) return true; // --\n    }\n    if (c === 0x7e || c === 0x21) return true; // ~ !\n    if (c === 0x76 && tok.getLastValue() === 'void') return true;\n\n    return false;\n  },\n  parsePrimarySuffixes: function(){\n    // --\n    // ++\n    // .<idntf>\n    // [<exprs>]\n    // (<exprs>)\n\n    var tok = this.tok;\n    while (true) {\n      // need to check for punctuator because it could also be a number...\n      if (tok.isType(PUNCTUATOR) && tok.nextExprIfNum(0x2e)) { // .\n        tok.mustBeIdentifier(false); // cannot be followed by a regex (not even on new line, asi wouldnt apply, would parse as div)\n      }\n      else if (tok.nextExprIfNum(0x28)) { // (\n        this.parseOptionalExpressions();\n        tok.mustBeNum(0x29, false); // ) cannot be followed by a regex (not even on new line, asi wouldnt apply, would parse as div)\n      }\n      else if (tok.nextExprIfNum(0x5b)) { // [\n        this.parseExpressions();\n        tok.mustBeNum(0x5d, false); // ] cannot be followed by a regex (not even on new line, asi wouldnt apply, would parse as div)\n      }\n      else if (tok.isNum(0x2b) && tok.nextPuncIfString('++')) break; // ends primary expressions\n      else if (tok.isNum(0x2d) && tok.nextPuncIfString('--')) break; // ends primary expressions\n      else break;\n    }\n  },\n  isAssignmentOperator: function(){\n    // includes any \"compound\" operators\n    // used to be: /^(?:[+*%&|^\\/-]|<<|>>>?)?=$/\n    // return (this.regexAssignmentOp.test(val));\n\n    // this method works under the assumption that the current token is\n    // part of the set of valid tokens for js. So we don't have to check\n    // for string lengths unless we need to disambiguate optional chars\n\n    var tok = this.tok;\n    var len = tok.lastStop - tok.lastStart;\n    var c = tok.getLastNum();\n\n    if (len === 1) return c === 0x3d; // =\n\n    else if (len === 2) {\n      return (\n        c === 0x2b || // +\n        c === 0x2a || // *\n        c === 0x25 || // %\n        c === 0x26 || // &\n        c === 0x7c || // |\n        c === 0x5e || // ^\n        c === 0x2f || // /\n        c === 0x2d    // -\n      ) && tok.getLastValue().charCodeAt(1) === 0x3d; // =\n    }\n\n    else if (len === 3 && c === 0x3c) {\n      var val = tok.getLastValue();\n      return (val.charCodeAt(1) === 0x3c && val.charCodeAt(2) === 0x3d); // <<=\n    }\n\n    else if (c === 0x3e) {\n      var val = tok.getLastValue();\n      return ((val.charCodeAt(1) === 0x3e) && (\n         (len === 4 && val.charCodeAt(2) === 0x3e && val.charCodeAt(3) === 0x3d) || // >>>=\n         (len === 3 && val.charCodeAt(2) === 0x3d) // >>=\n      ));\n    }\n\n    return false;\n  },\n  isBinaryOperator: function(){\n    // non-assignment binary operator\n    // /^(?:[+*%|^&\\/-]|[=!]==?|<=|>=|<<?|>>?>?|&&|instanceof|in|\\|\\|)$/,\n    //return (this.regexNonAssignBinaryOp.test(val));\n\n    // this method works under the assumption that the current token is\n    // part of the set of valid tokens for js. So we don't have to check\n    // for string lengths unless we need to disambiguate optional chars\n\n    var tok = this.tok;\n    // if not punctuator, it could still be `in` or `instanceof`. otherwise it's just false :)\n    if (!tok.isType(PUNCTUATOR)) {\n      if (tok.isType(IDENTIFIER)) {\n        if (tok.isNum(0x69)) { // i\n          var val = tok.getLastValue();\n          return (val === 'in' || val === 'instanceof');\n        }\n      }\n      return false;\n    }\n\n    // so we have a valid punctuator token, checking for binary ops is simple now except\n    // that we have to make sure it's not a(n compound) assignment!\n\n    var c = tok.getLastNum();\n\n    if ((\n      c === 0x2b || // +\n      c === 0x2a || // *\n      c === 0x25 || // %\n      c === 0x5e || // ^\n      c === 0x2f || // /\n      c === 0x2d    // -\n    )) {\n      // if len is more than 1, it's either a compound assignment (*=, +=, etc) or a unary op (++ --)\n      return (tok.lastStop - tok.lastStart === 1);\n    }\n\n    else if (c === 0x3d || c === 0x21) { // = !\n      var val = tok.getLastValue();\n      return (val.charCodeAt(1) === 0x3d && (tok.lastStop - tok.lastStart === 2 || val.charCodeAt(2) === 0x3d)); // === !==\n    }\n\n    else if (c === 0x3c) {\n      if (tok.lastStop - tok.lastStart === 1) return true; // <\n      var d = tok.getLastValue().charCodeAt(1);\n      // the len check prevents <<=\n      return ((d === 0x3c && (tok.lastStop - tok.lastStart === 2)) || d === 0x3d); // << <=\n    }\n\n    else if (c === 0x3e) {\n      var len = tok.lastStop - tok.lastStart;\n      if (len === 1) return true; // >\n      var val = tok.getLastValue();\n      var d = val.charCodeAt(1);\n      // the len checks prevent >>= and >>>=\n      return (d === 0x3d || (len === 2 && d === 0x3e) || (len === 3 && val.charCodeAt(2) === 0x3e)); // >= >> >>>\n    }\n\n    else if (c === 0x26) {\n      return (tok.lastStop - tok.lastStart === 1 || tok.getLastValue().charCodeAt(1) === 0x26); // &&\n    }\n\n    else if (c === 0x7c) {\n      return (tok.lastStop - tok.lastStart === 1 || tok.getLastValue().charCodeAt(1) === 0x7c); // ||\n    }\n\n    return false;\n  },\n\n  parseGroup: function(noIn){\n    if (noIn) this.parseExpressionNoIn(true);\n    else this.parseExpressions();\n    this.tok.mustBeNum(0x29, false); // )  cannot be followed by a regex (not even on new line, asi wouldnt apply, would parse as div)\n  },\n  parseArray: function(){\n    var tok = this.tok;\n    do {\n      this.parseExpression(true); // just one because they are all optional (and arent in expressions)\n    } while (tok.nextExprIfNum(0x2c)); // elision\n\n    tok.mustBeNum(0x5d, false); // ]  cannot be followed by a regex (not even on new line, asi wouldnt apply, would parse as div)\n  },\n  parseObject: function(){\n    var tok = this.tok;\n    do {\n      if (tok.isValue() && !tok.isType(REGEX)) this.parsePair();\n    } while (tok.nextExprIfNum(0x2c)); // elision\n    tok.mustBeNum(0x7d, false); // }  cannot be followed by a regex (not even on new line, asi wouldnt apply, would parse as div)\n  },\n  parsePair: function(){\n    var tok = this.tok;\n    if (tok.isNum(0x67) && tok.nextPuncIfString('get')) {\n      if (tok.nextPuncIfType(IDENTIFIER)) this.parseFunctionRemainder(0);\n      else this.parseDataPart();\n    } else if (tok.isNum(0x73) && tok.nextPuncIfString('set')) {\n      if (tok.nextPuncIfType(IDENTIFIER)) this.parseFunctionRemainder(1);\n      else this.parseDataPart();\n    } else {\n      this.parseData();\n    }\n  },\n  parseData: function(){\n    this.tok.nextPunc();\n    this.parseDataPart();\n  },\n  parseDataPart: function(){\n    this.tok.mustBeNum(0x3a, true); // :\n    this.parseExpression(false);\n  },\n\n  isReservedIdentifier: function(){\n    // note that this function will return false most of the time\n    // if it returns true, a syntax error will probably be thrown\n\n    var tok = this.tok;\n    // yep, this really makes a difference\n    var c = tok.getLastNum();\n\n    if (c === 0x62) {\n      return tok.getLastValue() === 'break';\n    } else if (c === 0x63) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'case' ||\n        identifier === 'catch' ||\n        identifier === 'continue' ||\n        identifier === 'class' ||\n        identifier === 'const'\n      );\n    } else if (c === 0x64) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'do' ||\n        identifier === 'debugger' ||\n        identifier === 'default' ||\n        identifier === 'delete'\n      );\n    } else if (c === 0x65) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'else' ||\n        identifier === 'enum' ||\n        identifier === 'export' ||\n        identifier === 'extends'\n      );\n    } else if (c === 0x66) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'false' ||\n        identifier === 'function' ||\n        identifier === 'for' ||\n        identifier === 'finally'\n      );\n    } else if (c === 0x69) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'instanceof' ||\n        identifier === 'in' ||\n        identifier === 'if' ||\n        identifier === 'import'\n      );\n    } else if (c === 0x6e) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'null' ||\n        identifier === 'new'\n      );\n    } else if (c === 0x72) {\n      return tok.getLastValue() === 'return';\n    } else if (c === 0x73) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'switch' ||\n        identifier === 'super'\n      );\n    } else if (c === 0x74) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'this' ||\n        identifier === 'true' ||\n        identifier === 'typeof' ||\n        identifier === 'throw' ||\n        identifier === 'try'\n      );\n    } else if (c === 0x76) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'var' ||\n        identifier === 'void'\n      );\n    } else if (c === 0x77) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'while' ||\n        identifier === 'with'\n      );\n    }\n\n    return false;\n  },\n  isReservedNonValueIdentifier: function(){\n    // note that this function will return false most of the time\n    // if it returns true, a syntax error will probably be thrown\n\n    var tok = this.tok;\n    // yep, this really makes a difference\n    var c = tok.getLastNum();\n\n    if (c === 0x62) {\n      return tok.getLastValue() === 'break';\n    } else if (c === 0x63) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'case' ||\n        identifier === 'catch' ||\n        identifier === 'continue' ||\n        identifier === 'class' ||\n        identifier === 'const'\n      );\n    } else if (c === 0x64) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'do' ||\n        identifier === 'debugger' ||\n        identifier === 'default' ||\n        identifier === 'delete'\n      );\n    } else if (c === 0x65) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'else' ||\n        identifier === 'enum' ||\n        identifier === 'export' ||\n        identifier === 'extends'\n      );\n    } else if (c === 0x66) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'for' ||\n        identifier === 'finally'\n      );\n    } else if (c === 0x69) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'instanceof' ||\n        identifier === 'in' ||\n        identifier === 'if' ||\n        identifier === 'import'\n      );\n    } else if (c === 0x6e) {\n      return tok.getLastValue() === 'new';\n    } else if (c === 0x72) {\n      return tok.getLastValue() === 'return';\n    } else if (c === 0x73) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'switch' ||\n        identifier === 'super'\n      );\n    } else if (c === 0x74) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'typeof' ||\n        identifier === 'throw' ||\n        identifier === 'try'\n      );\n    } else if (c === 0x76) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'var' ||\n        identifier === 'void'\n      );\n    } else if (c === 0x77) {\n      var identifier = tok.getLastValue();\n      return (\n        identifier === 'while' ||\n        identifier === 'with'\n      );\n    }\n\n    return false;\n  },\n  isValueKeyword: function(){\n    // returns true if identifier is a value-holding keyword\n\n    var tok = this.tok;\n    var c = tok.getLastNum();\n    var identifier;\n\n    return (\n      // keywords:\n      (c === 0x66 && (\n        (identifier = tok.getLastValue()) === 'function' ||\n        identifier === 'false'\n      )) ||\n      (c === 0x74 && (\n        (identifier = tok.getLastValue()) === 'this' ||\n        identifier === 'true'\n      )) ||\n      (c === 0x6e && (identifier = tok.getLastValue()) === 'null')\n    );\n  }\n};\n;\n\nmodule.exports = {Par:Par};"]}